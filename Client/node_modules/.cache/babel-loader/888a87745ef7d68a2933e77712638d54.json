{"ast":null,"code":"import { getAPI, patchAPI } from \"../../apis/Axios\";\nexport const getUser = (auth, id) => async dispatch => {\n  try {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        loading: true\n      }\n    });\n    const res = await getAPI(`/user/${id}`, auth.token);\n    dispatch({\n      type: 'GET_USER',\n      payload: res.data.user\n    });\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        loading: false\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const follow = (auth, user) => async dispatch => {\n  let profileUser = { ...user,\n    followers: [...user.followers, auth.user]\n  };\n\n  try {\n    const res = await patchAPI(`user/${user._id}/follow`, null, auth.token);\n    dispatch({\n      type: 'FOLLOW',\n      payload: profileUser\n    });\n    dispatch({\n      type: 'AUTH',\n      payload: { ...auth,\n        user: { ...auth.user,\n          following: [...auth.user.following, profileUser]\n        }\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const unfollow = (auth, user) => async dispatch => {\n  let newFollowers = [];\n\n  for (let i = 0; i < user.followers.length; i++) {\n    if (auth.user._id !== user.followers[i]._id) newFollowers.push(user.followers[i]);\n  }\n\n  let profileUser = { ...user,\n    followers: newFollowers\n  };\n\n  try {\n    const res = await patchAPI(`user/${user._id}/unfollow`, null, auth.token);\n    dispatch({\n      type: 'UNFOLLOW',\n      payload: profileUser\n    }); // delete profileUser in following\n\n    dispatch({\n      type: 'AUTH',\n      payload: { ...auth,\n        user: { ...auth.user,\n          following: profileUser\n        }\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};","map":{"version":3,"sources":["D:/Project Web/PROJECT 12 (Only MERN)/Client/client/src/store/actions/profileAction.js"],"names":["getAPI","patchAPI","getUser","auth","id","dispatch","type","payload","loading","res","token","data","user","err","error","response","msg","follow","profileUser","followers","_id","following","unfollow","newFollowers","i","length","push"],"mappings":"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","sourcesContent":["import { getAPI, patchAPI } from \"../../apis/Axios\"\r\n\r\nexport const getUser= (auth, id) => async (dispatch)=> {\r\n    try {\r\n        dispatch({type: 'ALERT', payload: {loading: true}})\r\n        const res = await getAPI(`/user/${id}`, auth.token);\r\n        dispatch({type:'GET_USER', payload: res.data.user});\r\n        dispatch({type: 'ALERT', payload: {loading: false}})\r\n\r\n    } catch(err) {\r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}});\r\n    }\r\n}\r\n\r\nexport const follow = (auth, user) => async (dispatch) => {\r\n    let profileUser = {...user, followers: [...user.followers, auth.user]};\r\n\r\n    try {\r\n        const res = await patchAPI(`user/${user._id}/follow`, null, auth.token);\r\n\r\n        dispatch({type: 'FOLLOW' , payload: profileUser});        \r\n        dispatch({type: 'AUTH', payload: {...auth, user: {...auth.user, following: [...auth.user.following, profileUser]}}});\r\n    \r\n    } catch(err) {\r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}});\r\n    }\r\n}\r\n\r\nexport const unfollow = (auth, user) => async (dispatch) => {\r\n    let  newFollowers = []; \r\n    for (let i = 0; i < user.followers.length; i++) {\r\n        if(auth.user._id !== user.followers[i]._id) newFollowers.push(user.followers[i]);\r\n    }\r\n\r\n    let profileUser = {...user, followers: newFollowers};\r\n\r\n    try {\r\n        const res = await patchAPI(`user/${user._id}/unfollow`, null, auth.token);\r\n        dispatch({type: 'UNFOLLOW' , payload: profileUser});\r\n        // delete profileUser in following\r\n        dispatch({type: 'AUTH', payload: {...auth, user: {...auth.user, following: profileUser}}});\r\n\r\n    } catch(err) {\r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}});\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}