{"ast":null,"code":"import { postAPI, deleteAPI, getAPI, patchAPI } from '../../apis/Axios';\nexport const createNotice = (auth, msg, socket) => async dispatch => {\n  try {\n    const res = await postAPI(`notice`, msg, auth.token);\n    socket.emit('createNotice', { ...res.data.notice,\n      user: {\n        username: auth.user.username,\n        avatar: auth.user.avatar\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: err.response.data.msg\n    });\n  }\n};\nexport const deleteNotice = (auth, id) => async dispatch => {\n  try {\n    const notice = await deleteAPI(`notice/${id}`, auth.token);\n    notice.status = 200 && dispatch({\n      type: 'ALERT',\n      payload: 'Notice deleted!'\n    });\n    dispatch({\n      type: 'DELETE_NOTICE',\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: err.response.data.msg\n    });\n  }\n};\nexport const deletePostNotices = (auth, url) => async dispatch => {\n  try {\n    deleteAPI(`notice/postDelete?url=${url}`, auth.token);\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: err.response.data.msg\n    });\n  }\n};\nexport const deleteNotices = auth => async dispatch => {\n  try {\n    const res = await deleteAPI(`notice`, auth.token);\n    dispatch({\n      type: 'DELETE_NOTICES',\n      payload: []\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: err.response.data.msg\n    });\n  }\n};\nexport const unreadNotice = (auth, msg) => async dispatch => {\n  try {\n    const res = await patchAPI(`notice/${msg._id}/unread`, null, auth.token);\n    dispatch({\n      type: 'UPDATE_NOTICE',\n      payload: res.data.notice\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: err.response.data.msg\n    });\n  }\n};\nexport const readNotice = (auth, msg) => async dispatch => {\n  try {\n    console.log(msg);\n    if (!msg) return;\n    const res = await patchAPI(`notice/${msg._id}/read`, null, auth.token);\n    dispatch({\n      type: 'UPDATE_NOTICE',\n      payload: res.data.notice\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: 'ALERT',\n      payload: err.response.data.msg\n    });\n  }\n};\nexport const readNotices = auth => async dispatch => {\n  try {\n    const res = await patchAPI('notice/read', null, auth.token);\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: err.response.data.msg\n    });\n  }\n};\nexport const getNotices = auth => async dispatch => {\n  try {\n    dispatch({\n      type: 'LOADING_NOTICES',\n      payload: true\n    });\n    const res = await getAPI(`notice`, auth.token);\n    dispatch({\n      type: 'GET_NOTICES',\n      payload: res.data.notices\n    });\n    dispatch({\n      type: 'LOADING_NOTICES',\n      payload: false\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: err.response.data\n    });\n  }\n};","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/store/actions/noticeAction.js"],"names":["postAPI","deleteAPI","getAPI","patchAPI","createNotice","auth","msg","socket","dispatch","res","token","emit","data","notice","user","username","avatar","err","type","payload","response","deleteNotice","id","status","deletePostNotices","url","deleteNotices","unreadNotice","_id","readNotice","console","log","readNotices","getNotices","notices"],"mappings":"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","sourcesContent":["import {postAPI, deleteAPI, getAPI, patchAPI} from '../../apis/Axios'\r\n\r\nexport const createNotice = (auth, msg, socket) => async (dispatch) => {\r\n  try {\r\n    const res = await postAPI(`notice`, msg, auth.token)\r\n\r\n    socket.emit('createNotice', {\r\n      ...res.data.notice,\r\n      user: {\r\n        username: auth.user.username,\r\n        avatar: auth.user.avatar\r\n      }\r\n    })\r\n\r\n  }   catch (err) {\r\n      dispatch({type: 'ALERT', payload: err.response.data.msg})\r\n  }\r\n}\r\n\r\nexport const deleteNotice = (auth, id) => async (dispatch) => {\r\n\r\n  try {\r\n    const notice = await deleteAPI(`notice/${id}`, auth.token)\r\n    \r\n    notice.status = 200 && dispatch({type: 'ALERT', payload: 'Notice deleted!'})\r\n    \r\n    dispatch({type: 'DELETE_NOTICE', payload: id})\r\n\r\n\r\n  } catch(err) {\r\n    dispatch({type: 'ALERT', payload: err.response.data.msg})\r\n  }\r\n}\r\n\r\nexport const deletePostNotices = (auth, url) => async (dispatch) => {\r\n  try {\r\n    deleteAPI(`notice/postDelete?url=${url}`, auth.token)\r\n\r\n  } catch(err) {\r\n    dispatch({type: 'ALERT', payload: err.response.data.msg})\r\n  }\r\n}\r\n\r\nexport const deleteNotices = (auth) => async (dispatch) => {\r\n  try {\r\n    const res = await deleteAPI(`notice`, auth.token)\r\n    dispatch({type: 'DELETE_NOTICES', payload: []})\r\n\r\n  } catch(err) {\r\n    dispatch({type: 'ALERT', payload: err.response.data.msg})\r\n  }\r\n}\r\n\r\nexport const unreadNotice = (auth, msg) => async (dispatch) => {\r\n  try {\r\n    const res = await patchAPI(`notice/${msg._id}/unread`, null, auth.token)\r\n    \r\n    dispatch({type: 'UPDATE_NOTICE' , payload: res.data.notice})\r\n\r\n  } catch(err) {\r\n    dispatch({type: 'ALERT', payload: err.response.data.msg})\r\n  }\r\n}\r\n\r\nexport const readNotice = (auth, msg) => async (dispatch) => {\r\n  try {\r\n    console.log(msg)\r\n    if(!msg) return\r\n    const res = await patchAPI(`notice/${msg._id}/read`, null, auth.token)\r\n\r\n    dispatch({type: 'UPDATE_NOTICE' , payload: res.data.notice})\r\n\r\n  } catch(err) {\r\n    console.log(err)\r\n    dispatch({type: 'ALERT', payload: err.response.data.msg})\r\n  }\r\n}\r\n\r\nexport const readNotices = (auth) => async (dispatch) => {\r\n  try {\r\n    const res = await patchAPI('notice/read', null, auth.token)\r\n\r\n  } catch(err) {\r\n    dispatch({type: 'ALERT', payload: err.response.data.msg})\r\n  }\r\n}\r\n\r\nexport const getNotices = (auth) => async (dispatch) => {\r\n  try {\r\n    dispatch({type: 'LOADING_NOTICES', payload: true})\r\n    const res = await getAPI(`notice`, auth.token)\r\n    dispatch({type: 'GET_NOTICES' , payload: res.data.notices})\r\n    dispatch({type: 'LOADING_NOTICES', payload: false})\r\n\r\n  } catch(err) {\r\n    dispatch({type: 'ALERT', payload: err.response.data})\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}