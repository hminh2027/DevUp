{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\post\\\\comment\\\\CommentCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { updateComment } from '../../../store/actions/commentAction';\nimport CommentOption from './CommentOption';\nimport RoundWrapper from '../../util/RoundWrapper';\nimport { CgMoreAlt } from 'react-icons/cg';\nimport { GoReply } from 'react-icons/go';\nimport styles from './CommentCard.module.css';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentCard = ({\n  post,\n  comment,\n  setOnReply\n}) => {\n  _s();\n\n  const ref = useRef();\n  const dispatch = useDispatch();\n  const [isShowOption, setShowOption] = useState(false);\n  const [body, setBody] = useState('');\n  const [showMore, setShowMore] = useState(false);\n  const [isLong, setIsLong] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const [onSubmit, setOnSubmit] = useState(false);\n  const {\n    auth\n  } = useSelector(state => state);\n  useEffect(() => {\n    const checkIfClickOutside = e => {\n      if (isShowOption && ref.current && !ref.current.contains(e.target)) setShowOption(false);\n    };\n\n    document.addEventListener(\"mousedown\", checkIfClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", checkIfClickOutside);\n    };\n  }, [isShowOption]);\n  useEffect(() => {\n    if (onSubmit) submitHandler();\n  }, [onSubmit]);\n  useEffect(() => {\n    setBody(comment.body);\n    setOnReply(false);\n  }, [comment.body, isEdit]);\n  useEffect(() => {\n    if (body && body.length > 250) {\n      setIsLong(true);\n      setShowMore(true);\n    } else setIsLong(false);\n  }, [body]);\n\n  const submitHandler = () => {\n    const trimBody = body.trim();\n    if (trimBody == '') return setOnSubmit(false);\n    dispatch(updateComment(auth, trimBody, post, comment));\n    setIsEdit(false);\n    setOnSubmit(false);\n  };\n\n  const checkHandler = e => {\n    if (e.charCode == 13) {\n      e.preventDefault();\n      setOnSubmit(true);\n    }\n  };\n\n  const replyHandler = () => {\n    setOnReply(comment);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.cmt_wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.avatar,\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/profile/${comment.user._id}`,\n        children: /*#__PURE__*/_jsxDEV(RoundWrapper, {\n          diameter: `${comment.reply ? '40' : '50'}px`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: comment.user.avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content_wrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: `${isEdit ? 'auto' : 'fit-content'}`\n        },\n        className: styles.content,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.name,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/profile/${comment.user._id}`,\n            children: comment.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.text,\n          children: [isEdit ? /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n            value: body,\n            className: styles.input,\n            onKeyPress: checkHandler,\n            spellCheck: \"false\",\n            onChange: e => setBody(e.target.value),\n            placeholder: \"Write your comment here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this) : isLong && showMore ? `${body.slice(0, 250)}... ` : body.trim(), isLong && (showMore ? /*#__PURE__*/_jsxDEV(\"label\", {\n            onClick: () => setShowMore(false),\n            className: styles.toggle_text,\n            children: \"[show more]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n            onClick: () => setShowMore(true),\n            className: styles.toggle_text,\n            children: \"[hidden]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this)), isEdit && /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setIsEdit(false),\n            className: styles.cancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), (auth.user._id === post.user._id || auth.user._id === comment.user._id) && /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: ref,\n          style: {\n            opacity: `${isShowOption ? '1' : '0'}`\n          },\n          onClick: () => setShowOption(!isShowOption),\n          className: styles.option_btn,\n          children: [/*#__PURE__*/_jsxDEV(CgMoreAlt, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(CommentOption, {\n            setIsEdit: setIsEdit,\n            comment: comment,\n            post: post,\n            isShow: isShowOption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), !isEdit && /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: replyHandler,\n          className: styles.reply,\n          children: /*#__PURE__*/_jsxDEV(GoReply, {\n            className: styles.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 82\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.time,\n      children: moment(comment.createdAt).fromNow().replace(/(ago)+/g, '')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CommentCard, \"xJDdmZnmtTltUsj3mUBJSPjE6oM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CommentCard;\nexport default CommentCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentCard\");","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/post/comment/CommentCard.js"],"names":["React","useEffect","useState","useRef","useDispatch","useSelector","Link","updateComment","CommentOption","RoundWrapper","CgMoreAlt","GoReply","styles","TextareaAutosize","moment","CommentCard","post","comment","setOnReply","ref","dispatch","isShowOption","setShowOption","body","setBody","showMore","setShowMore","isLong","setIsLong","isEdit","setIsEdit","onSubmit","setOnSubmit","auth","state","checkIfClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","submitHandler","length","trimBody","trim","checkHandler","charCode","preventDefault","replyHandler","cmt_wrapper","avatar","user","_id","reply","content_wrapper","width","content","name","username","text","input","value","slice","toggle_text","cancel","opacity","option_btn","icon","time","createdAt","fromNow","replace"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport { updateComment } from '../../../store/actions/commentAction'\r\n\r\nimport CommentOption from './CommentOption'\r\nimport RoundWrapper from '../../util/RoundWrapper'\r\n\r\nimport {CgMoreAlt} from 'react-icons/cg'\r\nimport {GoReply} from 'react-icons/go'\r\n\r\nimport styles from './CommentCard.module.css'\r\nimport TextareaAutosize from 'react-textarea-autosize'\r\nimport moment from 'moment'\r\n\r\nconst CommentCard = ({post, comment, setOnReply}) => {\r\n    const ref = useRef();\r\n    const dispatch = useDispatch();\r\n\r\n    const [isShowOption, setShowOption] = useState(false);\r\n    const [body, setBody] = useState('');\r\n    const [showMore, setShowMore] = useState(false);\r\n    const [isLong, setIsLong] = useState(false);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [onSubmit, setOnSubmit] = useState(false);\r\n\r\n    const {auth} = useSelector(state=>state);\r\n\r\n    useEffect(()=>{\r\n        const checkIfClickOutside = e => {\r\n            if(isShowOption && ref.current &&!ref.current.contains(e.target)) setShowOption(false); \r\n        }\r\n        document.addEventListener(\"mousedown\", checkIfClickOutside)\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", checkIfClickOutside)\r\n        }\r\n    },[isShowOption]);\r\n\r\n    useEffect(()=>{\r\n        if(onSubmit) submitHandler();\r\n    },[onSubmit]);\r\n    \r\n    useEffect(()=>{\r\n        setBody(comment.body);\r\n        setOnReply(false);\r\n    },[comment.body, isEdit])\r\n\r\n    useEffect(()=> {\r\n        if(body && body.length > 250) {\r\n            setIsLong(true);\r\n            setShowMore(true);\r\n        }\r\n        else setIsLong(false);\r\n    },[body])\r\n\r\n    const submitHandler = () => {\r\n        const trimBody = body.trim();\r\n        if(trimBody=='') return setOnSubmit(false);\r\n        dispatch(updateComment(auth, trimBody, post, comment));\r\n        setIsEdit(false);\r\n        setOnSubmit(false);\r\n    }\r\n\r\n    const checkHandler = (e) => {\r\n        if(e.charCode == 13) {\r\n            e.preventDefault();\r\n            setOnSubmit(true);\r\n        }\r\n    }\r\n\r\n    const replyHandler = () => {\r\n        setOnReply(comment);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.cmt_wrapper}>\r\n            <div className={styles.avatar}>\r\n                <Link to={`/profile/${comment.user._id}`} >\r\n                    <RoundWrapper diameter={`${comment.reply ? '40' :'50'}px`} >\r\n                        <img src={comment.user.avatar} />\r\n                    </RoundWrapper>\r\n                </Link>\r\n            </div>\r\n            <div className={styles.content_wrapper}>\r\n            <div style={{width: `${isEdit? 'auto' : 'fit-content'}`}} className={styles.content}>\r\n                <div className={styles.name}>\r\n                    <Link to={`/profile/${comment.user._id}`} >\r\n                        {comment.user.username}\r\n                    </Link>\r\n                </div>\r\n                <div className={styles.text}>\r\n                    {isEdit ? \r\n                    <TextareaAutosize value={body} className={styles.input} onKeyPress={checkHandler} spellCheck='false' onChange={e=>setBody(e.target.value)} placeholder='Write your comment here...' />\r\n                    : \r\n                    isLong && showMore ?\r\n                    `${body.slice(0,250)}... ` : \r\n                    body.trim()\r\n                    }\r\n                    {isLong && (showMore ? \r\n                    <label onClick={()=>setShowMore(false)} className={styles.toggle_text}>[show more]</label> : \r\n                    <label onClick={()=>setShowMore(true)} className={styles.toggle_text}>[hidden]</label>\r\n                    )}\r\n                    {isEdit && <div onClick={()=>setIsEdit(false)} className={styles.cancel}>Cancel</div>}\r\n                </div>\r\n                {(auth.user._id === post.user._id || auth.user._id ===  comment.user._id) && \r\n                <div ref={ref} style={{opacity: `${isShowOption ? '1' : '0'}`}} onClick={()=>setShowOption(!isShowOption)} className={styles.option_btn}>\r\n                    <CgMoreAlt/>\r\n                    <CommentOption setIsEdit={setIsEdit} comment={comment} post={post} isShow={isShowOption} />\r\n                </div>\r\n                }\r\n                {!isEdit && <div onClick={replyHandler} className={styles.reply}><GoReply className={styles.icon} /></div>}\r\n            </div>\r\n            </div>           \r\n            <div className={styles.time}>{moment(comment.createdAt).fromNow().replace(/(ago)+/g , '')}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentCard\r\n"]},"metadata":{},"sourceType":"module"}