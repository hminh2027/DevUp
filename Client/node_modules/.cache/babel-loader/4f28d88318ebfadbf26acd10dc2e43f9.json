{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\post\\\\comment\\\\CommentWrapper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CommentCard from './CommentCard';\nimport InputComment from './InputComment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentWrapper = ({\n  post,\n  comment,\n  reply\n}) => {\n  _s();\n\n  const [onReply, setOnReply] = useState(false);\n  const [cmtShowNumber, setCmtShowNumber] = useState(1);\n  const [showCmt, setShowCmt] = useState([]);\n  useEffect(() => {\n    let index = reply.length - cmtShowNumber;\n    if (index <= 0) index = 0;\n    setShowCmt(reply);\n    console.log(comment);\n  }, [cmtShowNumber]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CommentCard, {\n      setOnReply: setOnReply,\n      post: post,\n      comment: comment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), onReply && /*#__PURE__*/_jsxDEV(InputComment, {\n      post: post,\n      onReply: onReply,\n      setOnReply: setOnReply\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CommentWrapper, \"jrP+HqlOmwFsxfpwDyLxp/r61kA=\");\n\n_c = CommentWrapper;\nexport default CommentWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentWrapper\");","map":{"version":3,"sources":["D:/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/post/comment/CommentWrapper.js"],"names":["React","useEffect","useState","CommentCard","InputComment","CommentWrapper","post","comment","reply","onReply","setOnReply","cmtShowNumber","setCmtShowNumber","showCmt","setShowCmt","index","length","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA;AAAhB,CAAD,KAA4B;AAAA;;AAC/C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIc,KAAK,GAAGP,KAAK,CAACQ,MAAN,GAAeL,aAA3B;AACA,QAAGI,KAAK,IAAI,CAAZ,EAAeA,KAAK,GAAC,CAAN;AACfD,IAAAA,UAAU,CAACN,KAAD,CAAV;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACH,GALQ,EAKP,CAACI,aAAD,CALO,CAAT;AAQA,sBACI;AAAA,4BACI,QAAC,WAAD;AAAa,MAAA,UAAU,EAAED,UAAzB;AAAqC,MAAA,IAAI,EAAEJ,IAA3C;AAAiD,MAAA,OAAO,EAAEC;AAA1D;AAAA;AAAA;AAAA;AAAA,YADJ,EAKKE,OAAO,iBAAI,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEH,IAApB;AAA0B,MAAA,OAAO,EAAEG,OAAnC;AAA4C,MAAA,UAAU,EAAEC;AAAxD;AAAA;AAAA;AAAA;AAAA,YALhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAtBD;;GAAML,c;;KAAAA,c;AAwBN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport CommentCard from './CommentCard'\r\nimport InputComment from './InputComment'\r\n\r\nconst CommentWrapper = ({post, comment, reply}) => {\r\n    const [onReply, setOnReply] = useState(false);\r\n    const [cmtShowNumber, setCmtShowNumber] = useState(1);\r\n    const [showCmt, setShowCmt] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        let index = reply.length - cmtShowNumber;\r\n        if(index <= 0) index=0;\r\n        setShowCmt(reply);\r\n        console.log(comment)\r\n    },[cmtShowNumber]);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <CommentCard setOnReply={setOnReply} post={post} comment={comment} />\r\n            {/* {showCmt.map((cmt, index) => (\r\n                <CommentWrapper key={index} comment={cmt} post={post} />\r\n            ))} */}\r\n            {onReply && <InputComment post={post} onReply={onReply} setOnReply={setOnReply} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentWrapper\r\n"]},"metadata":{},"sourceType":"module"}