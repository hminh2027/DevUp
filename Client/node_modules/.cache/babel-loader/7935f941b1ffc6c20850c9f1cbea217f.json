{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SocketClient = () => {\n  _s();\n\n  const {\n    auth,\n    socket,\n    notice\n  } = useSelector(state => state);\n  const dispatch = useDispatch(); // Join User\n\n  useEffect(() => {\n    socket.emit('joinUser', auth.user);\n  }, [socket, auth.user]); // Like - Unlike\n\n  useEffect(() => {\n    socket.on('likeToClient', newPosts => {\n      dispatch({\n        type: 'UPDATE_POST',\n        payload: newPosts\n      });\n    });\n    return () => socket.off('likeToClient');\n  }, [socket, dispatch]);\n  useEffect(() => {\n    socket.on('unlikeToClient', newPosts => {\n      dispatch({\n        type: 'UPDATE_POST',\n        payload: newPosts\n      });\n    });\n    return () => socket.off('unlikeToClient');\n  }, [socket, dispatch]); // Comment - Uncomment\n\n  useEffect(() => {\n    socket.on('commentToClient', newPosts => {\n      dispatch({\n        type: 'UPDATE_POST',\n        payload: newPosts\n      });\n    });\n    return () => socket.off('commentToClient');\n  }, [socket, dispatch]);\n  useEffect(() => {\n    socket.on('uncommentToClient', newPosts => {\n      dispatch({\n        type: 'UPDATE_POST',\n        payload: newPosts\n      });\n    });\n    return () => socket.off('uncommentToClient');\n  }, [socket, dispatch]); // Follow - Unfollow\n\n  useEffect(() => {\n    socket.on('followToClient', newUser => {\n      dispatch({\n        type: 'AUTH',\n        payload: { ...auth,\n          user: newUser\n        }\n      });\n    });\n    return () => socket.off('followToClient');\n  }, [socket, dispatch]);\n  useEffect(() => {\n    socket.on('unfollowToClient', newUser => {\n      dispatch({\n        type: 'AUTH',\n        payload: { ...auth,\n          user: newUser\n        }\n      });\n    });\n    return () => socket.off('unfollowToClient');\n  }, [socket, dispatch]); // Notice - Delete Notice\n\n  useEffect(() => {\n    socket.on('createNoticeToClient', msg => {\n      dispatch({\n        type: 'SHOW_NOTICE',\n        payload: true\n      });\n      if (notice.data.map(n => n.id === msg._id)) console.log('ko duoc roi');\n      dispatch({\n        type: 'CREATE_NOTICE',\n        payload: msg\n      });\n    });\n    return () => socket.off('createNoticeToClient');\n  }, [socket, dispatch]); // useEffect(()=>{\n  //     socket.on('deleteNoticeToClient', notices =>{\n  //         console.log(msg)\n  //         dispatch({type: 'DELETE_NOTICE', payload: notices});\n  //     });\n  //     return () => socket.off('deleteNoticeToClient');\n  // },[socket, dispatch])\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(SocketClient, \"OuYlKbDp/pMwTPRlNmEklWHqko4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = SocketClient;\nexport default SocketClient;\n\nvar _c;\n\n$RefreshReg$(_c, \"SocketClient\");","map":{"version":3,"sources":["D:/Project Web/PROJECT 12 (Only MERN)/Client/client/src/SocketClient.js"],"names":["React","useEffect","useDispatch","useSelector","SocketClient","auth","socket","notice","state","dispatch","emit","user","on","newPosts","type","payload","off","newUser","msg","data","map","n","id","_id","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\nconst SocketClient = () => {\r\n    const {auth, socket, notice} = useSelector(state=>state);\r\n    const dispatch = useDispatch();\r\n\r\n    // Join User\r\n    useEffect(()=>{\r\n        socket.emit('joinUser', auth.user);\r\n    },[socket, auth.user]);\r\n\r\n    // Like - Unlike\r\n    useEffect(()=>{\r\n        socket.on('likeToClient', newPosts=>{\r\n            dispatch({type: 'UPDATE_POST', payload: newPosts});\r\n        });\r\n        return () => socket.off('likeToClient');\r\n    },[socket, dispatch]);\r\n\r\n    useEffect(()=>{\r\n        socket.on('unlikeToClient', newPosts=>{\r\n            dispatch({type: 'UPDATE_POST', payload: newPosts});\r\n        });\r\n        return () => socket.off('unlikeToClient');\r\n    },[socket, dispatch]);\r\n\r\n    // Comment - Uncomment\r\n    useEffect(()=>{\r\n        socket.on('commentToClient', newPosts=>{\r\n            dispatch({type: 'UPDATE_POST', payload: newPosts});\r\n        });\r\n        return () => socket.off('commentToClient');\r\n    },[socket, dispatch])\r\n    \r\n    useEffect(()=>{\r\n        socket.on('uncommentToClient', newPosts=>{\r\n            dispatch({type: 'UPDATE_POST', payload: newPosts});\r\n        });\r\n        return () => socket.off('uncommentToClient');\r\n    },[socket, dispatch])\r\n\r\n    // Follow - Unfollow\r\n    useEffect(()=>{\r\n        socket.on('followToClient', newUser =>{\r\n            dispatch({type: 'AUTH', payload: {...auth, user: newUser}});\r\n        });\r\n        return () => socket.off('followToClient');\r\n    },[socket, dispatch])\r\n\r\n    useEffect(()=>{\r\n        socket.on('unfollowToClient', newUser =>{\r\n            dispatch({type: 'AUTH', payload: {...auth, user: newUser}});\r\n        });\r\n        return () => socket.off('unfollowToClient');\r\n    },[socket, dispatch])\r\n\r\n    // Notice - Delete Notice\r\n    useEffect(()=>{\r\n        socket.on('createNoticeToClient', msg =>{\r\n            dispatch({type: 'SHOW_NOTICE', payload: true});\r\n\r\n            if(notice.data.map(n=>n.id===msg._id)) console.log('ko duoc roi');\r\n            dispatch({type: 'CREATE_NOTICE', payload: msg});\r\n        });\r\n        return () => socket.off('createNoticeToClient');\r\n    },[socket, dispatch])\r\n\r\n    // useEffect(()=>{\r\n    //     socket.on('deleteNoticeToClient', notices =>{\r\n    //         console.log(msg)\r\n    //         dispatch({type: 'DELETE_NOTICE', payload: notices});\r\n    //     });\r\n    //     return () => socket.off('deleteNoticeToClient');\r\n    // },[socket, dispatch])\r\n\r\n    return (\r\n        <>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default SocketClient\r\n"]},"metadata":{},"sourceType":"module"}