{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\util\\\\InfiniteList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAPI } from '../../apis/Axios';\nimport PostCard from '../post/PostCard';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InfiniteList = ({\n  posts\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    auth,\n    post\n  } = useSelector(state => state);\n  const [page, setPage] = useState(1);\n  const [load, setLoad] = useState(false);\n\n  const getData = () => {\n    setPage(page + 1);\n    setLoad(true);\n    console.log('fetchhhh');\n  };\n\n  useEffect(async () => {\n    if (load) {\n      const res = await getAPI(`post?page=${page}`, auth.token);\n\n      if (res.data.posts.length === 0) {\n        setLoad(false);\n        return;\n      }\n\n      dispatch({\n        type: 'GET_MORE_POSTS',\n        payload: res.data.posts\n      });\n      setLoad(false);\n    }\n  }, [load]);\n  return /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n    dataLength: posts.length,\n    next: getData,\n    hasMore: true,\n    scrollableTarget: \"list\",\n    style: {\n      padding: '0 70px',\n      margin: '0 -70px'\n    },\n    children: posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: post\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No post available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InfiniteList, \"74zbMnv6SCpkvKAZ10u4IPSTzj0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = InfiniteList;\nexport default InfiniteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfiniteList\");","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/util/InfiniteList.js"],"names":["React","useEffect","useState","useDispatch","useSelector","getAPI","PostCard","InfiniteScroll","InfiniteList","posts","dispatch","auth","post","state","page","setPage","load","setLoad","getData","console","log","res","token","data","length","type","payload","padding","margin","map","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,OAAOC,cAAP,MAA2B,iCAA3B;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AAC9B,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAACQ,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAeR,WAAW,CAACS,KAAK,IAAEA,KAAR,CAAhC;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMgB,OAAO,GAAG,MAAM;AAClBH,IAAAA,OAAO,CAACD,IAAI,GAAC,CAAN,CAAP;AACAG,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,GAJD;;AAMAnB,EAAAA,SAAS,CAAE,YAAU;AACjB,QAAGe,IAAH,EAAS;AACL,YAAMK,GAAG,GAAG,MAAMhB,MAAM,CAAE,aAAYS,IAAK,EAAnB,EAAsBH,IAAI,CAACW,KAA3B,CAAxB;;AACA,UAAGD,GAAG,CAACE,IAAJ,CAASd,KAAT,CAAee,MAAf,KAAwB,CAA3B,EAA8B;AAC1BP,QAAAA,OAAO,CAAC,KAAD,CAAP;AACA;AACH;;AACDP,MAAAA,QAAQ,CAAC;AAACe,QAAAA,IAAI,EAAE,gBAAP;AAAyBC,QAAAA,OAAO,EAAEL,GAAG,CAACE,IAAJ,CAASd;AAA3C,OAAD,CAAR;AACAQ,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH;AACJ,GAVQ,EAUP,CAACD,IAAD,CAVO,CAAT;AAYA,sBACI,QAAC,cAAD;AACI,IAAA,UAAU,EAAEP,KAAK,CAACe,MADtB;AAEI,IAAA,IAAI,EAAEN,OAFV;AAGI,IAAA,OAAO,EAAE,IAHb;AAII,IAAA,gBAAgB,EAAC,MAJrB;AAKI,IAAA,KAAK,EAAE;AAACS,MAAAA,OAAO,EAAE,QAAV;AAAoBC,MAAAA,MAAM,EAAE;AAA5B,KALX;AAAA,cAOKnB,KAAK,CAACe,MAAN,GAAa,CAAb,GAAef,KAAK,CAACoB,GAAN,CAAUjB,IAAI,iBAC1B,QAAC,QAAD;AAAyB,MAAA,IAAI,EAAEA;AAA/B,OAAeA,IAAI,CAACkB,GAApB;AAAA;AAAA;AAAA;AAAA,YADY,CAAf,gBAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXR;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA3CD;;GAAMtB,Y;UACeL,W,EACIC,W;;;KAFnBI,Y;AA6CN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getAPI } from '../../apis/Axios'\r\n\r\nimport PostCard from '../post/PostCard'\r\n\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\n\r\nconst InfiniteList = ({posts}) => {\r\n    const dispatch = useDispatch();\r\n    const {auth, post} = useSelector(state=>state);\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [load, setLoad] = useState(false);\r\n\r\n    const getData = () => {\r\n        setPage(page+1);\r\n        setLoad(true);\r\n        console.log('fetchhhh')\r\n    }\r\n\r\n    useEffect( async ()=>{\r\n        if(load) {\r\n            const res = await getAPI(`post?page=${page}`, auth.token)\r\n            if(res.data.posts.length===0) {\r\n                setLoad(false)\r\n                return;\r\n            }\r\n            dispatch({type: 'GET_MORE_POSTS', payload: res.data.posts})\r\n            setLoad(false)\r\n        }\r\n    },[load])\r\n\r\n    return (\r\n        <InfiniteScroll\r\n            dataLength={posts.length}\r\n            next={getData}\r\n            hasMore={true}\r\n            scrollableTarget=\"list\"\r\n            style={{padding: '0 70px', margin: '0 -70px'}}\r\n        >\r\n            {posts.length>0?posts.map(post=>(\r\n                <PostCard key={post._id} post={post} />\r\n            ))\r\n            :\r\n                <div>No post available</div>\r\n            }\r\n        </InfiniteScroll>\r\n            \r\n        \r\n    )\r\n}\r\n\r\nexport default InfiniteList\r\n"]},"metadata":{},"sourceType":"module"}