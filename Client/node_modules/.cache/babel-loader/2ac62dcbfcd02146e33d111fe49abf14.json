{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\notification\\\\notices\\\\NoticeCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from 'react-router-dom';\nimport { GoPrimitiveDot } from 'react-icons/go';\nimport { CgMoreAlt } from 'react-icons/cg';\nimport TagIcon from '../../util/TagIcon';\nimport RoundWrapper from '../../util/RoundWrapper';\nimport Avatar from '../../util/Avatar';\nimport NoticeOption from './NoticeOption';\nimport styles from './NoticeCard.module.css';\nimport moment from 'moment';\nimport { readNotice } from '../../../store/actions/noticeAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoticeCard = ({\n  msg\n}) => {\n  _s();\n\n  const ref = useRef();\n  const dispatch = useDispatch();\n  const {\n    auth\n  } = useSelector(state => state);\n  const [showOption, setShowOption] = useState(false);\n  const [isExiting, setExiting] = useState(false);\n\n  const readHandler = () => {\n    !msg.isRead.includes(auth.user._id) && dispatch(readNotice(auth, msg));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      transform: `${isExiting && 'translate(-150%,0)'}`\n    },\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      onClick: readHandler,\n      to: `/post/${msg.url}`,\n      replace: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.notice_wrapper,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          id: msg.id,\n          src: msg.user.avatar,\n          diameter: \"4rem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.body,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.text_noti,\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: msg.user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this), \" \", msg.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: `${msg.isRead ? 'inherit' : '#1880bd'}`\n            },\n            className: styles.time,\n            children: moment(msg.createdAt).fromNow()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), msg.image && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.image_wrapper,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: msg.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 69\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 31\n        }, this), !msg.isRead.includes(auth.user._id) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.dot,\n          children: /*#__PURE__*/_jsxDEV(GoPrimitiveDot, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 85\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 57\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, msg.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      onClick: () => setShowOption(true),\n      style: {\n        opacity: `${showOption ? '1' : '0'}`\n      },\n      className: styles.notice_option,\n      children: /*#__PURE__*/_jsxDEV(CgMoreAlt, {\n        className: styles.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), showOption && /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(NoticeOption, {\n      top: ref.current && ref.current.getBoundingClientRect().y,\n      msg: msg,\n      setExiting: setExiting,\n      setIsShow: setShowOption,\n      isShow: showOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 46\n    }, this), dropdown)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NoticeCard, \"9WupMt6Fweud/rkiRfMcYDSItdI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = NoticeCard;\nexport default NoticeCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoticeCard\");","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/notification/notices/NoticeCard.js"],"names":["React","useEffect","useRef","useState","ReactDOM","Link","GoPrimitiveDot","CgMoreAlt","TagIcon","RoundWrapper","Avatar","NoticeOption","styles","moment","readNotice","useDispatch","useSelector","NoticeCard","msg","ref","dispatch","auth","state","showOption","setShowOption","isExiting","setExiting","readHandler","isRead","includes","user","_id","transform","container","url","notice_wrapper","id","avatar","body","text_noti","username","text","color","time","createdAt","fromNow","image","image_wrapper","dot","opacity","notice_option","icon","createPortal","current","getBoundingClientRect","y","dropdown"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport {GoPrimitiveDot} from 'react-icons/go'\r\nimport {CgMoreAlt} from 'react-icons/cg'\r\n\r\nimport TagIcon from '../../util/TagIcon'\r\nimport RoundWrapper from '../../util/RoundWrapper'\r\nimport Avatar from '../../util/Avatar'\r\nimport NoticeOption from './NoticeOption'\r\n\r\nimport styles from './NoticeCard.module.css'\r\nimport moment from 'moment'\r\nimport { readNotice } from '../../../store/actions/noticeAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\nconst NoticeCard = ({msg}) => {\r\n    const ref = useRef();\r\n    const dispatch = useDispatch();\r\n    const {auth} = useSelector(state=>state);\r\n\r\n    const [showOption, setShowOption] = useState(false);\r\n    const [isExiting, setExiting] = useState(false);\r\n\r\n    const readHandler = () => {\r\n        !msg.isRead.includes(auth.user._id) && dispatch(readNotice(auth, msg))\r\n    }\r\n\r\n    return (\r\n    <div style={{transform: `${isExiting&& 'translate(-150%,0)'}`}} className={styles.container}>\r\n        <Link onClick={readHandler} to={`/post/${msg.url}`} key={msg.id} replace>\r\n            <div className={styles.notice_wrapper}>\r\n                <Avatar id={msg.id} src={msg.user.avatar} diameter='4rem'/>\r\n                {/* <div className={styles.avatar}>\r\n                    <RoundWrapper diameter='60px'>\r\n                        <img src={msg.user.avatar} alt=\"avatar\"/>\r\n                    </RoundWrapper> \r\n                    <div className={styles.tag_icon_wrapper}>\r\n                            <TagIcon tag={msg.tag} />\r\n                        </div>\r\n                </div> */}\r\n                <div className={styles.body}>\r\n                    <div className={styles.text_noti}>\r\n                        <b>{msg.user.username}</b> {msg.text}\r\n                    </div>\r\n                    <div style={{color: `${msg.isRead ? 'inherit' : '#1880bd'}`}} className={styles.time}>{moment(msg.createdAt).fromNow()}</div>\r\n                </div>\r\n                {msg.image && <div className={styles.image_wrapper}><img src={msg.image}/></div>}\r\n                {!msg.isRead.includes(auth.user._id) && <div className={styles.dot}><GoPrimitiveDot /></div>}\r\n            </div>\r\n        </Link>\r\n        <div ref={ref} onClick={()=>setShowOption(true)} style={{opacity: `${showOption ? '1' : '0'}`}} className={styles.notice_option}>\r\n            <CgMoreAlt className={styles.icon}/>\r\n        </div>\r\n        {showOption && ReactDOM.createPortal(<NoticeOption top={ref.current && ref.current.getBoundingClientRect().y} msg={msg} setExiting={setExiting} setIsShow={setShowOption} isShow={showOption} />, dropdown)}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default NoticeCard\r\n"]},"metadata":{},"sourceType":"module"}