{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\notification\\\\NotificationDropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport styles from './NotificationDropdown.module.css';\nimport DropdownCard from '../util/DropdownCard';\nimport { GoPrimitiveDot, GoCheck } from 'react-icons/go';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport { CgMoreAlt } from 'react-icons/cg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport RoundWrapper from '../util/RoundWrapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotificationDropdown = () => {\n  _s();\n\n  const ref = useRef();\n  const dispatch = useDispatch();\n  const {\n    notice\n  } = useSelector(state => state);\n  const [isShowOption, setShowOption] = useState(false);\n  useEffect(() => {\n    // Function to check if click outside the object\n    const checkIfClickOutside = e => {\n      if (isShowOption && ref.current && !ref.current.contains(e.target)) setShowOption(false);\n    }; // Set event 'when click' trigger\n\n\n    document.addEventListener(\"mousedown\", checkIfClickOutside);\n    return () => {\n      // Clean the event\n      document.removeEventListener(\"mousedown\", checkIfClickOutside);\n    };\n  }, [isShowOption]);\n  return /*#__PURE__*/_jsxDEV(DropdownCard, {\n    bottom: '-50%',\n    right: '100%',\n    width: '350px',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.heading,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.title,\n          children: \"Th\\xF4ng b\\xE1o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.heading_option,\n          children: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.content,\n        children: notice.data.map(msg => /*#__PURE__*/_jsxDEV(Link, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.notice_wrapper,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.avatar,\n              children: /*#__PURE__*/_jsxDEV(RoundWrapper, {\n                diameter: \"60px\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: msg.user.avatar,\n                  alt: \"avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.body,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.text_noti,\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: msg.user.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 71\n                }, this), \" \", msg.text]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.dot,\n              children: /*#__PURE__*/_jsxDEV(GoPrimitiveDot, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 61\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: ref,\n              onClick: () => setShowOption(!isShowOption),\n              className: styles.notice_option,\n              children: [/*#__PURE__*/_jsxDEV(CgMoreAlt, {\n                className: styles.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 37\n              }, this), isShowOption && /*#__PURE__*/_jsxDEV(DropdownCard, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.option_item,\n                  children: [/*#__PURE__*/_jsxDEV(GoCheck, {\n                    className: styles.icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.text,\n                    children: \"Mark read\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.option_item,\n                  children: [/*#__PURE__*/_jsxDEV(RiDeleteBinLine, {\n                    className: styles.icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.text,\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)\n        }, msg.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NotificationDropdown, \"DWzy3AmHkzhNMRcM8GvzL7gYcnA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = NotificationDropdown;\nexport default NotificationDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationDropdown\");","map":{"version":3,"sources":["D:/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/notification/NotificationDropdown.js"],"names":["React","useEffect","useRef","useState","styles","DropdownCard","GoPrimitiveDot","GoCheck","RiDeleteBinLine","CgMoreAlt","useDispatch","useSelector","Link","RoundWrapper","NotificationDropdown","ref","dispatch","notice","state","isShowOption","setShowOption","checkIfClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","container","heading","title","heading_option","content","data","map","msg","notice_wrapper","avatar","user","body","text_noti","username","text","dot","notice_option","icon","option_item","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport styles from './NotificationDropdown.module.css'\r\nimport DropdownCard from '../util/DropdownCard'\r\nimport {GoPrimitiveDot, GoCheck} from 'react-icons/go'\r\nimport {RiDeleteBinLine} from 'react-icons/ri'\r\nimport {CgMoreAlt} from 'react-icons/cg'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport RoundWrapper from '../util/RoundWrapper'\r\n\r\nconst NotificationDropdown = () => {\r\n    const ref = useRef();\r\n    const dispatch = useDispatch();\r\n    \r\n    const {notice} = useSelector(state=>state);\r\n    const [isShowOption, setShowOption] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        // Function to check if click outside the object\r\n        const checkIfClickOutside = e => {\r\n            if(isShowOption && ref.current &&!ref.current.contains(e.target)) setShowOption(false); \r\n        }\r\n        // Set event 'when click' trigger\r\n        document.addEventListener(\"mousedown\", checkIfClickOutside)\r\n        return () => {\r\n            // Clean the event\r\n            document.removeEventListener(\"mousedown\", checkIfClickOutside)\r\n        }\r\n    },[isShowOption]);\r\n\r\n    return (\r\n        <DropdownCard bottom={'-50%'} right={'100%'} width={'350px'}>\r\n            <div className={styles.container}>\r\n                <div className={styles.heading}>\r\n                    <div className={styles.title}>Thông báo</div>\r\n                    <div className={styles.heading_option}>...</div>\r\n                </div>\r\n                <div className={styles.content}>\r\n                    {notice.data.map(msg=>(\r\n                        <Link key={msg.id} >\r\n                            <div className={styles.notice_wrapper}>\r\n                                <div className={styles.avatar}>\r\n                                    <RoundWrapper diameter='60px'>\r\n                                        <img src={msg.user.avatar} alt=\"avatar\"/>\r\n                                    </RoundWrapper>\r\n                                </div>\r\n                                <div className={styles.body}>\r\n                                    <div className={styles.text_noti}><b>{msg.user.username}</b> {msg.text}</div>\r\n                                </div>\r\n                                <div className={styles.dot}><GoPrimitiveDot /></div>\r\n                                <div ref={ref} onClick={()=>setShowOption(!isShowOption)} className={styles.notice_option}>\r\n                                    <CgMoreAlt className={styles.icon}/>\r\n                                    {isShowOption && \r\n                                        <DropdownCard>\r\n                                            <div className={styles.option_item}  >\r\n                                                <GoCheck className={styles.icon}/>\r\n                                                <div className={styles.text}>Mark read</div>\r\n                                            </div>      \r\n                                            <div className={styles.option_item} >\r\n                                                <RiDeleteBinLine className={styles.icon}/>\r\n                                                <div className={styles.text}>Delete</div>\r\n                                            </div>\r\n                                        </DropdownCard>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </DropdownCard>\r\n    )\r\n}\r\n\r\nexport default NotificationDropdown\r\n"]},"metadata":{},"sourceType":"module"}