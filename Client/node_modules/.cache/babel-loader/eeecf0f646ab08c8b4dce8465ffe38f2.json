{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\notification\\\\NotificationDropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport styles from './NotificationDropdown.module.css';\nimport DropdownCard from '../util/DropdownCard';\nimport { CgMoreAlt } from 'react-icons/cg';\nimport { useSelector } from 'react-redux';\nimport NoticeCard from './notices/NoticeCard';\nimport NotificationOption from './NotificationOption';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotificationDropdown = ({\n  isShow\n}) => {\n  _s();\n\n  const ref = useRef();\n  const {\n    notice\n  } = useSelector(state => state);\n  const [isShowOption, setShowOption] = useState(false);\n  useEffect(() => {\n    // Function to check if click outside the object\n    const checkIfClickOutside = e => {\n      if (isShowOption && ref.current && !ref.current.contains(e.target)) setShowOption(false);\n    }; // Set event 'when click' trigger\n\n\n    document.addEventListener(\"mousedown\", checkIfClickOutside);\n    return () => {\n      // Clean the event\n      document.removeEventListener(\"mousedown\", checkIfClickOutside);\n    };\n  }, [isShowOption]);\n  return /*#__PURE__*/_jsxDEV(DropdownCard, {\n    bottom: '-50%',\n    right: '200%',\n    width: '450px',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxHeight: `${isShow ? '1000px' : '0'}`\n      },\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.heading,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.title,\n          children: \"Notification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: ref,\n          style: {\n            opacity: `${isShowOption ? '1' : '.5'}`\n          },\n          onClick: () => setShowOption(!isShowOption),\n          className: styles.heading_option,\n          children: [/*#__PURE__*/_jsxDEV(CgMoreAlt, {\n            className: styles.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), isShowOption && /*#__PURE__*/_jsxDEV(NotificationOption, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.content,\n        children: notice.data.length > 0 ? notice.data.map(msg => /*#__PURE__*/_jsxDEV(NoticeCard, {\n          msg: msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"No notifications available!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NotificationDropdown, \"DpOSaN35NfixBa6FO062Vj3dqT8=\", false, function () {\n  return [useSelector];\n});\n\n_c = NotificationDropdown;\nexport default NotificationDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationDropdown\");","map":{"version":3,"sources":["D:/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/notification/NotificationDropdown.js"],"names":["React","useEffect","useRef","useState","styles","DropdownCard","CgMoreAlt","useSelector","NoticeCard","NotificationOption","NotificationDropdown","isShow","ref","notice","state","isShowOption","setShowOption","checkIfClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","maxHeight","container","heading","title","opacity","heading_option","icon","content","data","length","map","msg","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport styles from './NotificationDropdown.module.css'\r\nimport DropdownCard from '../util/DropdownCard'\r\nimport {CgMoreAlt} from 'react-icons/cg'\r\nimport { useSelector } from 'react-redux'\r\nimport NoticeCard from './notices/NoticeCard'\r\nimport NotificationOption from './NotificationOption'\r\n\r\n\r\nconst NotificationDropdown = ({isShow}) => {\r\n    const ref = useRef();\r\n    \r\n    const {notice} = useSelector(state=>state);\r\n    const [isShowOption, setShowOption] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        // Function to check if click outside the object\r\n        const checkIfClickOutside = e => {\r\n            if(isShowOption && ref.current &&!ref.current.contains(e.target)) setShowOption(false); \r\n        }\r\n        // Set event 'when click' trigger\r\n        document.addEventListener(\"mousedown\", checkIfClickOutside)\r\n        return () => {\r\n            // Clean the event\r\n            document.removeEventListener(\"mousedown\", checkIfClickOutside)\r\n        }\r\n    },[isShowOption]);\r\n\r\n    return (\r\n        <DropdownCard bottom={'-50%'} right={'200%'} width={'450px'}>\r\n            <div style={{maxHeight: `${isShow?'1000px':'0'}`}} className={styles.container}>\r\n                <div className={styles.heading}>\r\n                    <div className={styles.title}>Notification</div>\r\n                    <div ref={ref} style={{opacity: `${isShowOption ? '1' : '.5'}`}} onClick={()=>setShowOption(!isShowOption)} className={styles.heading_option}>\r\n                        <CgMoreAlt className={styles.icon}/>\r\n                        {isShowOption && <NotificationOption/>}\r\n                    </div>\r\n                </div>\r\n                <div className={styles.content}>\r\n                    {notice.data.length>0 ? notice.data.map(msg=>(\r\n                        <NoticeCard msg={msg} />\r\n                    )):\r\n                    <div style={{textAlign: 'center'}}>No notifications available!</div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </DropdownCard>\r\n    )\r\n}\r\n\r\nexport default NotificationDropdown\r\n"]},"metadata":{},"sourceType":"module"}