{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\notification\\\\NotificationOption.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport DropdownCard from '../util/DropdownCard';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport { GoCheck } from 'react-icons/go';\nimport styles from './NotificationOption.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteNotices, getNotices, readNotices } from '../../store/actions/noticeAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotificationOption = ({\n  isShow,\n  setIsShow\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    auth\n  } = useSelector(state => state);\n\n  const deleteHandler = () => {\n    dispatch(deleteNotices(auth));\n  };\n\n  const readHandler = async () => {\n    await dispatch(readNotices(auth));\n    await dispatch(getNotices(auth));\n  };\n\n  return /*#__PURE__*/_jsxDEV(DropdownCard, {\n    top: \"0%\",\n    right: \"100%\",\n    setIsShow: setIsShow,\n    isShow: isShow,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: readHandler,\n      className: styles.option_item,\n      children: [/*#__PURE__*/_jsxDEV(GoCheck, {\n        className: styles.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.text,\n        children: \"Mark read all\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.option_item,\n      children: [/*#__PURE__*/_jsxDEV(RiDeleteBinLine, {\n        className: styles.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: deleteHandler,\n        className: styles.text,\n        children: \"Delete all\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NotificationOption, \"HgQh1OyohgDLM2rIYx/B3h+wTw0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = NotificationOption;\nexport default NotificationOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationOption\");","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/notification/NotificationOption.js"],"names":["React","DropdownCard","RiDeleteBinLine","GoCheck","styles","useDispatch","useSelector","deleteNotices","getNotices","readNotices","NotificationOption","isShow","setIsShow","dispatch","auth","state","deleteHandler","readHandler","option_item","icon","text"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,SAAQC,eAAR,QAA8B,gBAA9B;AACA,SAAQC,OAAR,QAAsB,gBAAtB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,WAApC,QAAuD,kCAAvD;;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAAA;;AAChD,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM;AAACS,IAAAA;AAAD,MAASR,WAAW,CAACS,KAAK,IAAEA,KAAR,CAA1B;;AAEA,QAAMC,aAAa,GAAG,MAAM;AACxBH,IAAAA,QAAQ,CAACN,aAAa,CAACO,IAAD,CAAd,CAAR;AACH,GAFD;;AAIA,QAAMG,WAAW,GAAG,YAAY;AAC5B,UAAMJ,QAAQ,CAACJ,WAAW,CAACK,IAAD,CAAZ,CAAd;AACA,UAAMD,QAAQ,CAACL,UAAU,CAACM,IAAD,CAAX,CAAd;AACH,GAHD;;AAKA,sBACI,QAAC,YAAD;AAAc,IAAA,GAAG,EAAC,IAAlB;AAAuB,IAAA,KAAK,EAAC,MAA7B;AAAoC,IAAA,SAAS,EAAEF,SAA/C;AAA0D,IAAA,MAAM,EAAED,MAAlE;AAAA,4BACI;AAAK,MAAA,OAAO,EAAEM,WAAd;AAA2B,MAAA,SAAS,EAAEb,MAAM,CAACc,WAA7C;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,SAAS,EAAEd,MAAM,CAACe;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAEf,MAAM,CAACgB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAEhB,MAAM,CAACc,WAAvB;AAAA,8BACI,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAEd,MAAM,CAACe;AAAnC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,OAAO,EAAEH,aAAd;AAA6B,QAAA,SAAS,EAAEZ,MAAM,CAACgB,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAzBD;;GAAMV,kB;UACeL,W,EACFC,W;;;KAFbI,kB;AA2BN,eAAeA,kBAAf","sourcesContent":["import React from 'react'\r\nimport DropdownCard from '../util/DropdownCard'\r\nimport {RiDeleteBinLine} from 'react-icons/ri'\r\nimport {GoCheck} from 'react-icons/go'\r\nimport styles from './NotificationOption.module.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deleteNotices, getNotices, readNotices } from '../../store/actions/noticeAction'\r\n\r\nconst NotificationOption = ({isShow, setIsShow}) => {\r\n    const dispatch = useDispatch();\r\n    const {auth} = useSelector(state=>state);\r\n\r\n    const deleteHandler = () => {\r\n        dispatch(deleteNotices(auth));\r\n    }\r\n\r\n    const readHandler = async () => {\r\n        await dispatch(readNotices(auth));\r\n        await dispatch(getNotices(auth));\r\n    }\r\n\r\n    return (\r\n        <DropdownCard top='0%' right='100%' setIsShow={setIsShow} isShow={isShow} >\r\n            <div onClick={readHandler} className={styles.option_item}  >\r\n                <GoCheck className={styles.icon}/>\r\n                <div className={styles.text}>Mark read all</div>\r\n            </div>      \r\n            <div className={styles.option_item} >\r\n                <RiDeleteBinLine className={styles.icon}/>\r\n                <div onClick={deleteHandler} className={styles.text}>Delete all</div>\r\n            </div>\r\n        </DropdownCard>\r\n    )\r\n}\r\n\r\nexport default NotificationOption\r\n"]},"metadata":{},"sourceType":"module"}