{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\notification\\\\notices\\\\NoticeOption.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport { GoCheck } from 'react-icons/go';\nimport DropdownCard from '../../util/DropdownCard';\nimport { deleteNotice, readNotice, unreadNotice } from '../../../store/actions/noticeAction';\nimport styles from './NoticeOption.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoticeOption = ({\n  msg,\n  isShow,\n  setExiting,\n  bottom\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    auth,\n    notice\n  } = useSelector(state => state);\n\n  const markHandler = () => {\n    if (msg.isRead) dispatch(unreadNotice(auth, msg, notice.data));else dispatch(readNotice(auth, msg, notice.data));\n  };\n\n  const deleteHandler = () => {\n    setExiting(true);\n    dispatch(deleteNotice(auth, msg, notice.data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(DropdownCard, {\n    isShow: isShow,\n    right: \"20%\",\n    bottom: -1 * (bottom - 400),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: markHandler,\n      className: styles.option_item,\n      children: [/*#__PURE__*/_jsxDEV(GoCheck, {\n        className: styles.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.text,\n        children: msg.isRead ? `Mark unread` : `Mark read`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: deleteHandler,\n      className: styles.option_item,\n      children: [/*#__PURE__*/_jsxDEV(RiDeleteBinLine, {\n        className: styles.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.text,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NoticeOption, \"N6gCnK9/IoOPdCGCTITjSz0Zs0o=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = NoticeOption;\nexport default NoticeOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoticeOption\");","map":{"version":3,"sources":["D:/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/notification/notices/NoticeOption.js"],"names":["React","useDispatch","useSelector","RiDeleteBinLine","GoCheck","DropdownCard","deleteNotice","readNotice","unreadNotice","styles","NoticeOption","msg","isShow","setExiting","bottom","dispatch","auth","notice","state","markHandler","isRead","data","deleteHandler","option_item","icon","text"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAAQC,eAAR,QAA8B,gBAA9B;AACA,SAAQC,OAAR,QAAsB,gBAAtB;AAEA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,YAAnC,QAAuD,qCAAvD;AAEA,OAAOC,MAAP,MAAmB,2BAAnB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,GAAD;AAAMC,EAAAA,MAAN;AAAcC,EAAAA,UAAd;AAA0BC,EAAAA;AAA1B,CAAD,KAAuC;AAAA;;AACxD,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAM;AAACe,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAiBf,WAAW,CAACgB,KAAK,IAAEA,KAAR,CAAlC;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACtB,QAAGR,GAAG,CAACS,MAAP,EAAeL,QAAQ,CAACP,YAAY,CAACQ,IAAD,EAAOL,GAAP,EAAYM,MAAM,CAACI,IAAnB,CAAb,CAAR,CAAf,KACKN,QAAQ,CAACR,UAAU,CAACS,IAAD,EAAOL,GAAP,EAAYM,MAAM,CAACI,IAAnB,CAAX,CAAR;AACR,GAHD;;AAKA,QAAMC,aAAa,GAAG,MAAM;AACxBT,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,QAAQ,CAACT,YAAY,CAACU,IAAD,EAAOL,GAAP,EAAYM,MAAM,CAACI,IAAnB,CAAb,CAAR;AACH,GAHD;;AAKA,sBACI,QAAC,YAAD;AAAc,IAAA,MAAM,EAAET,MAAtB;AAA8B,IAAA,KAAK,EAAC,KAApC;AAA0C,IAAA,MAAM,EAAE,CAAC,CAAD,IAAIE,MAAM,GAAC,GAAX,CAAlD;AAAA,4BACI;AAAK,MAAA,OAAO,EAAEK,WAAd;AAA2B,MAAA,SAAS,EAAEV,MAAM,CAACc,WAA7C;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,SAAS,EAAEd,MAAM,CAACe;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAEf,MAAM,CAACgB,IAAvB;AAAA,kBAA8Bd,GAAG,CAACS,MAAJ,GAAc,aAAd,GAA8B;AAA5D;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,OAAO,EAAEE,aAAd;AAA6B,MAAA,SAAS,EAAEb,MAAM,CAACc,WAA/C;AAAA,8BACI,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAEd,MAAM,CAACe;AAAnC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAEf,MAAM,CAACgB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA1BD;;GAAMf,Y;UACeT,W,EACMC,W;;;KAFrBQ,Y;AA4BN,eAAeA,YAAf","sourcesContent":["import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport {RiDeleteBinLine} from 'react-icons/ri'\r\nimport {GoCheck} from 'react-icons/go'\r\n\r\nimport DropdownCard from '../../util/DropdownCard'\r\nimport { deleteNotice, readNotice, unreadNotice } from '../../../store/actions/noticeAction'\r\n\r\nimport styles from './NoticeOption.module.css'\r\n\r\nconst NoticeOption = ({msg, isShow, setExiting, bottom}) => {\r\n    const dispatch = useDispatch();\r\n    const {auth, notice} = useSelector(state=>state);\r\n\r\n    const markHandler = () => {\r\n        if(msg.isRead) dispatch(unreadNotice(auth, msg, notice.data))\r\n        else dispatch(readNotice(auth, msg, notice.data))\r\n    }\r\n\r\n    const deleteHandler = () => {\r\n        setExiting(true);\r\n        dispatch(deleteNotice(auth, msg, notice.data))\r\n    }\r\n    \r\n    return (\r\n        <DropdownCard isShow={isShow} right='20%' bottom={-1*(bottom-400)} >\r\n            <div onClick={markHandler} className={styles.option_item}  >\r\n                <GoCheck className={styles.icon}/>\r\n                <div className={styles.text}>{msg.isRead ? `Mark unread` : `Mark read`}</div>\r\n            </div>      \r\n            <div onClick={deleteHandler} className={styles.option_item} >\r\n                <RiDeleteBinLine className={styles.icon}/>\r\n                <div className={styles.text}>Delete</div>\r\n            </div>\r\n        </DropdownCard>\r\n    )\r\n}\r\n\r\nexport default NoticeOption\r\n"]},"metadata":{},"sourceType":"module"}