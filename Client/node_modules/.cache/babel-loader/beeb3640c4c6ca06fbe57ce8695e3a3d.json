{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\notification\\\\NotificationDropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { CgMoreAlt } from 'react-icons/cg';\nimport DropdownCard from '../util/DropdownCard';\nimport NoticeCard from './notices/NoticeCard';\nimport NotificationOption from './NotificationOption';\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport Spinner from '../../assets/Spinner.png';\nimport styles from './NotificationDropdown.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NotificationDropdown = ({\n  isShow\n}) => {\n  _s();\n\n  const ref = useRef();\n  const {\n    notice\n  } = useSelector(state => state);\n  const [isShowOption, setShowOption] = useState(false);\n  useEffect(() => {\n    const checkIfClickOutside = e => {\n      if (isShowOption && ref.current && !ref.current.contains(e.target)) setShowOption(false);\n    };\n\n    document.addEventListener(\"mousedown\", checkIfClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", checkIfClickOutside);\n    };\n  }, [isShowOption]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DropdownCard, {\n      isShow: isShow,\n      width: '450px',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.heading,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.title,\n          children: \"Notification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: ref,\n          style: {\n            opacity: `${isShowOption ? '1' : '.5'}`\n          },\n          onClick: () => setShowOption(!isShowOption),\n          className: styles.heading_option,\n          children: /*#__PURE__*/_jsxDEV(CgMoreAlt, {\n            className: styles.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.content,\n        children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          children: notice.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.spinner_wrapper,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: Spinner,\n              alt: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this) : notice.data.length > 0 ? notice.data.map((msg, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              transform: 'translate(150%,0)'\n            },\n            animate: {\n              transform: 'translate(0,0)',\n              transitionDuration: `.6s`,\n              transitionDelay: `${(index + 1) * 0.2}s`\n            },\n            children: /*#__PURE__*/_jsxDEV(NoticeCard, {\n              msg: msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: \"No notifications available!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dropdown\",\n      children: /*#__PURE__*/_jsxDEV(NotificationOption, {\n        bottom: ref.current && ref.current.getBoundingClientRect().y,\n        isShow: isShowOption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NotificationDropdown, \"DpOSaN35NfixBa6FO062Vj3dqT8=\", false, function () {\n  return [useSelector];\n});\n\n_c = NotificationDropdown;\nexport default NotificationDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationDropdown\");","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/notification/NotificationDropdown.js"],"names":["React","useEffect","useRef","useState","useSelector","CgMoreAlt","DropdownCard","NoticeCard","NotificationOption","motion","AnimatePresence","Spinner","styles","NotificationDropdown","isShow","ref","notice","state","isShowOption","setShowOption","checkIfClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","heading","title","opacity","heading_option","icon","content","loading","spinner_wrapper","data","length","map","msg","index","transform","transitionDuration","transitionDelay","textAlign","getBoundingClientRect","y"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport {CgMoreAlt} from 'react-icons/cg'\r\n\r\nimport DropdownCard from '../util/DropdownCard'\r\nimport NoticeCard from './notices/NoticeCard'\r\nimport NotificationOption from './NotificationOption'\r\n\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\n\r\nimport Spinner from '../../assets/Spinner.png'\r\nimport styles from './NotificationDropdown.module.css'\r\n\r\nconst NotificationDropdown = ({isShow}) => {\r\n    const ref = useRef();\r\n    \r\n    const {notice} = useSelector(state=>state);\r\n    const [isShowOption, setShowOption] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        const checkIfClickOutside = e => {\r\n            if(isShowOption && ref.current &&!ref.current.contains(e.target)) setShowOption(false); \r\n        }\r\n        document.addEventListener(\"mousedown\", checkIfClickOutside)\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", checkIfClickOutside)\r\n        }\r\n    },[isShowOption]);\r\n\r\n    return (\r\n        <>\r\n            <DropdownCard isShow={isShow}  width={'450px'}>\r\n                <div className={styles.heading}>\r\n                    <div className={styles.title}>Notification</div>\r\n                    <div ref={ref} style={{opacity: `${isShowOption ? '1' : '.5'}`}} onClick={()=>setShowOption(!isShowOption)} className={styles.heading_option}>\r\n                        <CgMoreAlt className={styles.icon}/>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.content}>\r\n                <AnimatePresence >\r\n                    {notice.loading ? \r\n                    <div className={styles.spinner_wrapper}><img src={Spinner} alt='spinner'/></div> \r\n                    : \r\n                    notice.data.length>0 ? notice.data.map((msg,index)=>(\r\n                        <motion.div\r\n                        key={index}\r\n                        initial={{transform: 'translate(150%,0)'}}\r\n                        animate={{transform: 'translate(0,0)', transitionDuration: `.6s`, transitionDelay:`${(index+1)*0.2}s`}}\r\n                        >\r\n                            <NoticeCard msg={msg} />\r\n                        </motion.div>\r\n                    )) : \r\n                    <div style={{textAlign: 'center'}}>No notifications available!</div>                   \r\n                    }\r\n                </AnimatePresence>\r\n                </div>\r\n            </DropdownCard>\r\n            <div id='dropdown'>\r\n                <NotificationOption bottom={ref.current && ref.current.getBoundingClientRect().y} isShow={isShowOption} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotificationDropdown\r\n"]},"metadata":{},"sourceType":"module"}