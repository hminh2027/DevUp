{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\post\\\\PostCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { AiFillRightCircle } from 'react-icons/ai';\nimport { CgMoreAlt } from 'react-icons/cg';\nimport ReactBar from './ReactBar';\nimport { updatePost } from '../../store/actions/postAction';\nimport PostOption from './PostOption';\nimport PostCounter from './PostCounter';\nimport Comment from './comment/Comment';\nimport PostContent from './PostContent';\nimport InputComment from './comment/InputComment';\nimport Card from '../../components/util/Card';\nimport RoundWrapper from '../util/RoundWrapper';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport moment from 'moment';\nimport styles from './PostCard.module.css';\nimport Avatar from '../util/Avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  post,\n  isShared\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const ref = useRef();\n  const [isEdit, setIsEdit] = useState(false);\n  const [isShowOption, setShowOption] = useState(false);\n  const [body, setBody] = useState();\n  const [isComment, setIsComment] = useState(false);\n  const {\n    auth\n  } = useSelector(state => state);\n  useEffect(() => {\n    setBody(post.body);\n  }, [post.body, isEdit]);\n  useEffect(() => {\n    const checkIfClickOutside = e => {\n      if (isShowOption && ref.current && !ref.current.contains(e.target)) setShowOption(false);\n    };\n\n    document.addEventListener(\"mousedown\", checkIfClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", checkIfClickOutside);\n    };\n  }, [isShowOption]);\n\n  const bodyChangeHandler = e => {\n    setBody(e.target.value);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updatePost(body, auth, post._id));\n    setIsEdit(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    width: \"100%\",\n    bg: \"white\",\n    mg: \"0 0 4rem 0\",\n    children: [!isShared && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.absolute_wrapper,\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: post.user.avatar,\n        id: post.user._id,\n        diameter: \"5rem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content_wrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.content,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.intro,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.name,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/profile/${post.user._id}`,\n              replace: true,\n              children: post.user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.time,\n            children: moment(post.createdAt).fromNow()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), isEdit ? /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n          maxRows: 8,\n          spellCheck: false,\n          type: \"text\",\n          name: \"body\",\n          className: styles.textarea,\n          onChange: bodyChangeHandler,\n          value: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.text,\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 20\n        }, this), isEdit && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.update,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setIsEdit(false),\n            className: `${styles.cancel} ${styles.update_btn}`,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: submitHandler,\n            className: `${styles.submit} ${styles.update_btn}`,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), post.shareContent ? /*#__PURE__*/_jsxDEV(PostCard, {\n          post: post.shareContent,\n          isShared: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(PostContent, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), !isShared && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        opacity: `${isShowOption ? '1' : '.5'}`\n      },\n      ref: ref,\n      onClick: () => setShowOption(!isShowOption),\n      className: styles.option_btn,\n      children: [/*#__PURE__*/_jsxDEV(CgMoreAlt, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostOption, {\n        isShow: isShowOption,\n        post: post,\n        setIsEdit: setIsEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 27\n    }, this), !isShared && /*#__PURE__*/_jsxDEV(PostCounter, {\n      post: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 27\n    }, this), !isShared && /*#__PURE__*/_jsxDEV(ReactBar, {\n      isComment: isComment,\n      setIsComment: setIsComment,\n      post: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 27\n    }, this), !isShared && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.bottom_wrapper,\n      children: [/*#__PURE__*/_jsxDEV(Comment, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), isComment && /*#__PURE__*/_jsxDEV(InputComment, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 27\n    }, this), !isShared && /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setIsComment(true),\n      className: styles.reply,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.label,\n        children: \"Reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.icon_wrapper,\n        children: /*#__PURE__*/_jsxDEV(AiFillRightCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostCard, \"/Hu+ZzFaLq0zxBPzSFu1tvL8qbs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostCard;\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/post/PostCard.js"],"names":["React","useEffect","useRef","useState","useDispatch","useSelector","Link","AiFillRightCircle","CgMoreAlt","ReactBar","updatePost","PostOption","PostCounter","Comment","PostContent","InputComment","Card","RoundWrapper","TextareaAutosize","moment","styles","Avatar","PostCard","post","isShared","dispatch","ref","isEdit","setIsEdit","isShowOption","setShowOption","body","setBody","isComment","setIsComment","auth","state","checkIfClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","bodyChangeHandler","value","submitHandler","preventDefault","_id","absolute_wrapper","user","avatar","content_wrapper","content","intro","name","username","time","createdAt","fromNow","textarea","text","update","cancel","update_btn","submit","shareContent","opacity","option_btn","bottom_wrapper","reply","label","icon_wrapper"],"mappings":"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","sourcesContent":["import React, { useEffect,useRef,useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {AiFillRightCircle} from 'react-icons/ai'\r\nimport {CgMoreAlt} from 'react-icons/cg'\r\n\r\nimport ReactBar from './ReactBar'\r\nimport { updatePost } from '../../store/actions/postAction'\r\nimport PostOption from './PostOption'\r\nimport PostCounter from './PostCounter'\r\nimport Comment from './comment/Comment'\r\nimport PostContent from './PostContent'\r\nimport InputComment from './comment/InputComment'\r\nimport Card from '../../components/util/Card'\r\nimport RoundWrapper from '../util/RoundWrapper'\r\n\r\nimport TextareaAutosize from 'react-textarea-autosize'\r\nimport moment from 'moment'\r\nimport styles from './PostCard.module.css'\r\nimport Avatar from '../util/Avatar'\r\n\r\n\r\n\r\nconst PostCard = ({post, isShared}) => {\r\n    const dispatch = useDispatch();\r\n    const ref = useRef();\r\n\r\n    const [isEdit,setIsEdit] = useState(false);\r\n    const [isShowOption, setShowOption] = useState(false);\r\n    const [body,setBody] = useState();\r\n    const [isComment, setIsComment] = useState(false);\r\n\r\n    const {auth} = useSelector(state=>state);\r\n\r\n    useEffect(() => {\r\n        setBody(post.body);\r\n    }, [post.body, isEdit]);\r\n\r\n    useEffect(()=>{\r\n        const checkIfClickOutside = e => {\r\n            if(isShowOption && ref.current &&!ref.current.contains(e.target)) setShowOption(false); \r\n        }\r\n        document.addEventListener(\"mousedown\", checkIfClickOutside)\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", checkIfClickOutside)\r\n        }\r\n    },[isShowOption]);\r\n\r\n    const bodyChangeHandler = e => {\r\n        setBody(e.target.value);\r\n    }\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        dispatch(updatePost(body, auth, post._id));\r\n        setIsEdit(false);\r\n    }\r\n\r\n    return (\r\n        <Card width='100%' bg='white' mg='0 0 4rem 0'>\r\n            {!isShared && \r\n            <div className={styles.absolute_wrapper}>\r\n                <Avatar src={post.user.avatar} id={post.user._id} diameter='5rem' />\r\n            </div>\r\n            }\r\n            <div className={styles.content_wrapper }>\r\n                <div className={styles.content}>\r\n                    <div className={styles.intro}>\r\n                        <div className={styles.name}>\r\n                            <Link to={`/profile/${post.user._id}`} replace>\r\n                                {post.user.username}\r\n                            </Link>\r\n                        </div>\r\n                        <div className={styles.time}>{moment(post.createdAt).fromNow()}</div>\r\n                    </div>\r\n                    {isEdit ?\r\n                    <TextareaAutosize maxRows={8} spellCheck={false} type=\"text\" name=\"body\" className={styles.textarea} onChange={bodyChangeHandler} value={body} />\r\n                    : \r\n                   <div className={styles.text}>{post.body}</div>\r\n                    }\r\n                    {isEdit &&\r\n                    <div className={styles.update}>\r\n                        <div onClick={()=>setIsEdit(false)} className={`${styles.cancel} ${styles.update_btn}`}>Cancel</div>\r\n                        <div onClick={submitHandler} className={`${styles.submit} ${styles.update_btn}`}>Submit</div> \r\n                        </div>\r\n                    }\r\n                    {post.shareContent?\r\n                    <PostCard post={post.shareContent} isShared={true} />\r\n                    :\r\n                    <PostContent post={post} />\r\n                    }\r\n                </div>\r\n            </div>\r\n            {!isShared && <div style={{opacity: `${isShowOption ? '1' : '.5'}`}} ref={ref} onClick={()=>setShowOption(!isShowOption)} className={styles.option_btn}>\r\n                <CgMoreAlt />\r\n                <PostOption isShow={isShowOption} post={post} setIsEdit={setIsEdit} />\r\n            </div>}\r\n            {!isShared && <PostCounter post={post} />}\r\n            {!isShared && <ReactBar isComment={isComment} setIsComment={setIsComment} post={post} />}\r\n            {!isShared && <div className={styles.bottom_wrapper}>\r\n                <Comment post={post} />\r\n                {isComment && <InputComment post={post} />}             \r\n            </div>}\r\n            {!isShared && <div onClick={()=>setIsComment(true)} className={styles.reply}>\r\n                <div className={styles.label}>Reply</div>\r\n                <div className={styles.icon_wrapper}><AiFillRightCircle/></div>              \r\n            </div>}\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PostCard\r\n"]},"metadata":{},"sourceType":"module"}