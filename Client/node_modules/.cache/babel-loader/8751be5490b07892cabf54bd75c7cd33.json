{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\src\\\\components\\\\header\\\\SettingOption.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport { useDispatch } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport PasswordModal from '../modal/PasswordModal';\nimport Modal from '../util/Modal';\nimport DropdownCard from '../util/DropdownCard';\nimport { IoExitOutline, IoLockClosedOutline } from 'react-icons/io5';\nimport { logout } from '../../store/actions/authAction';\nimport styles from './SettingOption.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SettingOption = ({\n  isShow,\n  setIsShow\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [isChangePassword, setChangePassword] = useState(false);\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1224px)'\n  });\n\n  const passwordModal = () => {\n    dispatch({\n      type: 'MODAL',\n      payload: true\n    });\n    setChangePassword(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isChangePassword && /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(Modal, {\n      setIsEdit: setChangePassword,\n      width: isDesktop ? '50%' : '100%',\n      height: isDesktop ? 'auto' : '100%',\n      children: /*#__PURE__*/_jsxDEV(PasswordModal, {\n        setChangePassword: setChangePassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), portal), /*#__PURE__*/_jsxDEV(DropdownCard, {\n      isShow: isShow,\n      setIsShow: setIsShow,\n      bottom: `-20px`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.option_item,\n        onClick: passwordModal,\n        children: [/*#__PURE__*/_jsxDEV(IoLockClosedOutline, {\n          className: styles.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.text,\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => dispatch(logout()),\n          className: styles.option_item,\n          children: [/*#__PURE__*/_jsxDEV(IoExitOutline, {\n            className: styles.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.text,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SettingOption, \"rfG9fp+JZGE9c57Lj0wWlzeaAmA=\", false, function () {\n  return [useDispatch, useMediaQuery];\n});\n\n_c = SettingOption;\nexport default SettingOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingOption\");","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/src/components/header/SettingOption.js"],"names":["React","useState","Link","ReactDOM","useDispatch","useMediaQuery","PasswordModal","Modal","DropdownCard","IoExitOutline","IoLockClosedOutline","logout","styles","SettingOption","isShow","setIsShow","dispatch","isChangePassword","setChangePassword","isDesktop","query","passwordModal","type","payload","createPortal","portal","option_item","icon","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA,SAAQC,aAAR,EAAuBC,mBAAvB,QAAiD,iBAAjD;AACA,SAASC,MAAT,QAAuB,gCAAvB;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;;;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAAA;;AAC3C,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AAEA,QAAM,CAACa,gBAAD,EAAmBC,iBAAnB,IAAwCjB,QAAQ,CAAC,KAAD,CAAtD;AAEA,QAAMkB,SAAS,GAAGd,aAAa,CAAC;AAAEe,IAAAA,KAAK,EAAE;AAAT,GAAD,CAA/B;;AAEA,QAAMC,aAAa,GAAG,MAAM;AACxBL,IAAAA,QAAQ,CAAC;AAACM,MAAAA,IAAI,EAAE,OAAP;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KAAD,CAAR;AACAL,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAHD;;AAKA,sBACI;AAAA,eACCD,gBAAgB,iBAAId,QAAQ,CAACqB,YAAT,eACjB,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEN,iBAAlB;AAAqC,MAAA,KAAK,EAAEC,SAAS,GAAG,KAAH,GAAS,MAA9D;AAAsE,MAAA,MAAM,EAAEA,SAAS,GAAG,MAAH,GAAU,MAAjG;AAAA,6BACI,QAAC,aAAD;AAAe,QAAA,iBAAiB,EAAED;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADiB,EAInBO,MAJmB,CADrB,eAMA,QAAC,YAAD;AAAc,MAAA,MAAM,EAAEX,MAAtB;AAA8B,MAAA,SAAS,EAAEC,SAAzC;AAAoD,MAAA,MAAM,EAAG,OAA7D;AAAA,8BACI;AAAK,QAAA,SAAS,EAAEH,MAAM,CAACc,WAAvB;AAAoC,QAAA,OAAO,EAAEL,aAA7C;AAAA,gCACI,QAAC,mBAAD;AAAqB,UAAA,SAAS,EAAET,MAAM,CAACe;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAEf,MAAM,CAACgB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA,+BACI;AAAK,UAAA,OAAO,EAAE,MAAIZ,QAAQ,CAACL,MAAM,EAAP,CAA1B;AAAsC,UAAA,SAAS,EAAEC,MAAM,CAACc,WAAxD;AAAA,kCACI,QAAC,aAAD;AAAe,YAAA,SAAS,EAAEd,MAAM,CAACe;AAAjC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAEf,MAAM,CAACgB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANA;AAAA,kBADJ;AAqBH,CAjCD;;GAAMf,a;UACeT,W,EAICC,a;;;KALhBQ,a;AAmCN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport ReactDOM from 'react-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useMediaQuery } from 'react-responsive'\r\n\r\nimport PasswordModal from '../modal/PasswordModal'\r\nimport Modal from '../util/Modal'\r\nimport DropdownCard from '../util/DropdownCard'\r\n\r\nimport {IoExitOutline, IoLockClosedOutline} from 'react-icons/io5'\r\nimport { logout } from '../../store/actions/authAction'\r\n\r\nimport styles from './SettingOption.module.css'\r\n\r\n\r\nconst SettingOption = ({isShow, setIsShow}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [isChangePassword, setChangePassword] = useState(false);\r\n\r\n    const isDesktop = useMediaQuery({ query: '(min-width: 1224px)' })\r\n\r\n    const passwordModal = () => {\r\n        dispatch({type: 'MODAL' , payload: true});\r\n        setChangePassword(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {isChangePassword && ReactDOM.createPortal(\r\n            <Modal setIsEdit={setChangePassword} width={isDesktop ? '50%':'100%'} height={isDesktop ? 'auto':'100%'} >\r\n                <PasswordModal setChangePassword={setChangePassword} />\r\n            </Modal>\r\n        , portal)}\r\n        <DropdownCard isShow={isShow} setIsShow={setIsShow} bottom={`-20px`}>\r\n            <div className={styles.option_item} onClick={passwordModal} >\r\n                <IoLockClosedOutline className={styles.icon} />\r\n                <div className={styles.text}>Password</div>\r\n            </div>\r\n            <Link to='/' >\r\n                <div onClick={()=>dispatch(logout())} className={styles.option_item} >\r\n                    <IoExitOutline className={styles.icon} />\r\n                    <div className={styles.text}>Logout</div>\r\n                </div>\r\n            </Link>\r\n        </DropdownCard>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SettingOption\r\n"]},"metadata":{},"sourceType":"module"}