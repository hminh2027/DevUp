{"ast":null,"code":"import _regeneratorRuntime from\"D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _createForOfIteratorHelper from\"D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _asyncToGenerator from\"D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export var upload=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(images){var imgArr,_iterator,_step,i,formData,res,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:imgArr=[];_iterator=_createForOfIteratorHelper(images);_context.prev=2;_iterator.s();case 4:if((_step=_iterator.n()).done){_context.next=19;break;}i=_step.value;formData=new FormData();formData.append(\"file\",i);formData.append(\"cloud_name\",\"minh2027\");formData.append(\"upload_preset\",\"xf9mllsp\");_context.next=12;return fetch(\"https://api.cloudinary.com/v1_1/minh2027/upload\",{method:\"POST\",body:formData});case 12:res=_context.sent;_context.next=15;return res.json();case 15:data=_context.sent;imgArr.push({public_id:data.public_id,url:data.secure_url});case 17:_context.next=4;break;case 19:_context.next=24;break;case 21:_context.prev=21;_context.t0=_context[\"catch\"](2);_iterator.e(_context.t0);case 24:_context.prev=24;_iterator.f();return _context.finish(24);case 27:return _context.abrupt(\"return\",imgArr);case 28:case\"end\":return _context.stop();}}},_callee,null,[[2,21,24,27]]);}));return function upload(_x){return _ref.apply(this,arguments);};}();export var remove=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:case\"end\":return _context2.stop();}}},_callee2);}));return function remove(){return _ref2.apply(this,arguments);};}();export var checkImage=function checkImage(image){var err;if(!image)return err='Image not found!';if(image.size>1024*1024*15)return err='Image is larger than 15mb';if(image.type!=='image/png'&&image.type!=='image/jpeg'&&image.type!=='image/jpg')return err='Format is not supported';return err;};","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/src/apis/Cloudinary.js"],"names":["upload","images","imgArr","i","formData","FormData","append","fetch","method","body","res","json","data","push","public_id","url","secure_url","remove","checkImage","image","err","size","type"],"mappings":"kiBAAA,MAAO,IAAMA,CAAAA,MAAM,0FAAG,iBAAOC,MAAP,iKACdC,MADc,CACL,EADK,sCAEHD,MAFG,8FAERE,CAFQ,aAGRC,QAHQ,CAGG,GAAIC,CAAAA,QAAJ,EAHH,CAIdD,QAAQ,CAACE,MAAT,CAAgB,MAAhB,CAAwBH,CAAxB,EACAC,QAAQ,CAACE,MAAT,CAAgB,YAAhB,CAA8B,UAA9B,EACAF,QAAQ,CAACE,MAAT,CAAgB,eAAhB,CAAiC,UAAjC,EANc,uBAQIC,CAAAA,KAAK,CAAC,iDAAD,CAAoD,CACvEC,MAAM,CAAE,MAD+D,CAEvEC,IAAI,CAAEL,QAFiE,CAApD,CART,SAQRM,GARQ,sCAaKA,CAAAA,GAAG,CAACC,IAAJ,EAbL,SAaRC,IAbQ,eAcdV,MAAM,CAACW,IAAP,CAAY,CAACC,SAAS,CAAEF,IAAI,CAACE,SAAjB,CAA4BC,GAAG,CAAEH,IAAI,CAACI,UAAtC,CAAZ,EAdc,0PAgBXd,MAhBW,6EAAH,kBAANF,CAAAA,MAAM,4CAAZ,CAmBP,MAAO,IAAMiB,CAAAA,MAAM,2FAAG,yLAAH,kBAANA,CAAAA,MAAM,2CAAZ,CAIP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CACjC,GAAIC,CAAAA,GAAJ,CACA,GAAG,CAACD,KAAJ,CAAW,MAAOC,CAAAA,GAAG,CAAC,kBAAX,CACX,GAAGD,KAAK,CAACE,IAAN,CAAa,KAAK,IAAL,CAAU,EAA1B,CAA8B,MAAOD,CAAAA,GAAG,CAAC,2BAAX,CAC9B,GAAGD,KAAK,CAACG,IAAN,GAAe,WAAf,EAA8BH,KAAK,CAACG,IAAN,GAAe,YAA7C,EAA6DH,KAAK,CAACG,IAAN,GAAe,WAA/E,CAA4F,MAAOF,CAAAA,GAAG,CAAC,yBAAX,CAC5F,MAAOA,CAAAA,GAAP,CACH,CANM","sourcesContent":["export const upload = async (images) => {\r\n    let imgArr = [];\r\n    for(const i of images){\r\n        const formData = new FormData();\r\n        formData.append(\"file\", i);\r\n        formData.append(\"cloud_name\", \"minh2027\");\r\n        formData.append(\"upload_preset\", \"xf9mllsp\")\r\n\r\n        const res = await fetch(\"https://api.cloudinary.com/v1_1/minh2027/upload\", {\r\n            method: \"POST\",\r\n            body: formData\r\n        });\r\n\r\n        const data = await res.json();\r\n        imgArr.push({public_id: data.public_id, url: data.secure_url});\r\n    }\r\n    return imgArr;\r\n}\r\n\r\nexport const remove = async () => {\r\n    \r\n}\r\n\r\nexport const checkImage = (image) => {\r\n    let err;\r\n    if(!image) return err='Image not found!';\r\n    if(image.size > 1024*1024*15) return err='Image is larger than 15mb';\r\n    if(image.type !== 'image/png' && image.type !== 'image/jpeg' && image.type !== 'image/jpg') return err='Format is not supported';\r\n    return err;\r\n}"]},"metadata":{},"sourceType":"module"}