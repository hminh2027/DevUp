{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\notification\\\\NotificationDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { GrFormClose } from 'react-icons/gr';\nimport RoundWrapper from '../util/RoundWrapper';\nimport styles from './NotificationDisplay.module.css';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NotificationDisplay = () => {\n  _s();\n\n  const ref = useRef();\n  const dispatch = useDispatch();\n  const {\n    notice\n  } = useSelector(state => state);\n  const [isShow, setIsShow] = useState(false);\n  const [msg, setMsg] = useState({});\n  useEffect(() => {\n    if (!notice.popup) return;\n    setIsShow(true);\n    setMsg(notice.data[0]);\n  }, [notice]); // useEffect(()=>{\n  //     setTimeout(() => {\n  //         closeHandler()\n  //     }, 5000);\n  // },[isShow])\n\n  const closeHandler = () => {\n    ref.current.style.left = '-20%'; // dispatch({type:'SHOW_NOTICE', payload: false})\n    // setIsShow(false)\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isShow && /*#__PURE__*/_jsxDEV(CSSTransition, {\n      timeout: 300,\n      classNames: {\n        enter: styles.enter,\n        enterActive: styles.enter_active,\n        exit: styles.exit,\n        exitActive: styles.exit_active\n      },\n      unmountOnExit: true,\n      in: isShow,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: ref,\n        className: styles.notice_wrapper,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.container,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.heading,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.title,\n              children: \"New Notification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: closeHandler,\n              className: styles.close,\n              children: /*#__PURE__*/_jsxDEV(GrFormClose, {\n                className: styles.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 74\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.content,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.avatar,\n                children: /*#__PURE__*/_jsxDEV(RoundWrapper, {\n                  margin: \"0 .7rem 0 0\",\n                  diameter: \"60px\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: msg.user.avatar,\n                    alt: \"avatar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.body,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.text_noti,\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: msg.user.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 59\n                  }, this), \" \", msg.text, \": \", msg.body]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.time,\n                  children: moment(msg.createdAt).fromNow()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this), msg.image && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.image_wrapper,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: msg.image\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 73\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(NotificationDisplay, \"iAFWru+ip7ZSLgr5FzgNFErz3rQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = NotificationDisplay;\nexport default NotificationDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationDisplay\");","map":{"version":3,"sources":["D:/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/notification/NotificationDisplay.js"],"names":["React","useEffect","useRef","useState","useDispatch","useSelector","Link","GrFormClose","RoundWrapper","styles","moment","NotificationDisplay","ref","dispatch","notice","state","isShow","setIsShow","msg","setMsg","popup","data","closeHandler","current","style","left","enter","enterActive","enter_active","exit","exitActive","exit_active","notice_wrapper","container","heading","title","close","icon","content","avatar","user","body","text_noti","username","text","time","createdAt","fromNow","image","image_wrapper"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport {GrFormClose} from 'react-icons/gr'\r\nimport RoundWrapper from '../util/RoundWrapper'\r\nimport styles from './NotificationDisplay.module.css'\r\nimport moment from 'moment'\r\n\r\nconst NotificationDisplay = () => {\r\n    const ref = useRef();\r\n    const dispatch = useDispatch();\r\n    const {notice} = useSelector(state=>state);\r\n    const [isShow, setIsShow] = useState(false);\r\n    const [msg, setMsg] = useState({});\r\n\r\n    useEffect(()=>{\r\n        if(!notice.popup) return;\r\n        setIsShow(true);\r\n        setMsg(notice.data[0]);\r\n\r\n    },[notice])\r\n\r\n    // useEffect(()=>{\r\n    //     setTimeout(() => {\r\n    //         closeHandler()\r\n\r\n    //     }, 5000);\r\n    // },[isShow])\r\n\r\n    const closeHandler = () => {\r\n        ref.current.style.left = '-20%';\r\n        // dispatch({type:'SHOW_NOTICE', payload: false})\r\n        // setIsShow(false)\r\n    }\r\n\r\n    return (\r\n        <> \r\n        {isShow && \r\n            <CSSTransition\r\n            timeout={300}\r\n            classNames={{\r\n                enter: styles.enter,\r\n                enterActive: styles.enter_active,\r\n                exit: styles.exit,\r\n                exitActive: styles.exit_active,\r\n            }}\r\n            unmountOnExit\r\n            in={isShow}\r\n        >\r\n        <div ref={ref} className={styles.notice_wrapper}>\r\n            <div className={styles.container}>\r\n                <div className={styles.heading}>\r\n                    <div className={styles.title}>New Notification</div>\r\n                    <div onClick={closeHandler} className={styles.close}><GrFormClose className={styles.icon} /></div>\r\n                </div>\r\n                <Link>\r\n                <div className={styles.content}>\r\n                    <div className={styles.avatar}>\r\n                        <RoundWrapper margin='0 .7rem 0 0' diameter='60px'>\r\n                            <img src={msg.user.avatar} alt='avatar'/>\r\n                        </RoundWrapper>\r\n                    </div>\r\n                    <div className={styles.body}>\r\n                        <div className={styles.text_noti}><b>{msg.user.username}</b> {msg.text}: {msg.body}</div>\r\n                        <div className={styles.time}>{moment(msg.createdAt).fromNow()}</div>\r\n                    </div>\r\n                    {msg.image && <div className={styles.image_wrapper}><img src={msg.image}/></div>}\r\n                </div>\r\n                </Link>\r\n            </div>\r\n        </div> \r\n        </CSSTransition> \r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotificationDisplay\r\n"]},"metadata":{},"sourceType":"module"}