{"ast":null,"code":"import _slicedToArray from\"D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{Link}from'react-router-dom';import{GrFormClose}from'react-icons/gr';import{readNotice}from'../../store/actions/noticeAction';import TagIcon from'../util/TagIcon';import styles from'./NotificationDisplay.module.css';import moment from'moment';import Avatar from'../util/Avatar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var NotificationDisplay=function NotificationDisplay(){var ref=useRef();var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state;}),notice=_useSelector.notice,auth=_useSelector.auth;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isShow=_useState2[0],setIsShow=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),msg=_useState4[0],setMsg=_useState4[1];useEffect(function(){if(!notice.popup)return;setIsShow(true);setMsg(notice.data[0]);},[notice.popup]);useEffect(function(){isShow&&setTimeout(function(){closeHandler();},5000);},[isShow]);var readHandler=function readHandler(){dispatch(readNotice(auth,msg));};var closeHandler=function closeHandler(){ref.current.style.left='-20%';setTimeout(function(){dispatch({type:'SHOW_NOTICE',payload:false});setIsShow(false);},300);};return/*#__PURE__*/_jsx(_Fragment,{children:isShow&&/*#__PURE__*/_jsx(\"div\",{ref:ref,className:styles.notice_wrapper,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.heading,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.title,children:\"New Notification\"}),/*#__PURE__*/_jsx(\"div\",{onClick:closeHandler,className:styles.icon_wrapper,children:/*#__PURE__*/_jsx(GrFormClose,{className:styles.icon})})]}),/*#__PURE__*/_jsx(Link,{onClick:readHandler,to:\"/post/\".concat(msg.url),replace:true,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.content,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.avatar,children:[/*#__PURE__*/_jsx(Avatar,{id:msg.id,src:msg.user.avatar,diameter:\"4rem\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.tag_icon_wrapper,children:/*#__PURE__*/_jsx(TagIcon,{tag:msg.tag})})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.body,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.text_noti,children:[/*#__PURE__*/_jsx(\"b\",{children:msg.user.username}),\"\\xA0\",msg.text]}),/*#__PURE__*/_jsx(\"div\",{className:styles.time,children:moment(msg.createdAt).fromNow()})]})]})})]})})});};export default NotificationDisplay;","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/src/components/notification/NotificationDisplay.js"],"names":["React","useEffect","useRef","useState","useDispatch","useSelector","Link","GrFormClose","readNotice","TagIcon","styles","moment","Avatar","NotificationDisplay","ref","dispatch","state","notice","auth","isShow","setIsShow","msg","setMsg","popup","data","setTimeout","closeHandler","readHandler","current","style","left","type","payload","notice_wrapper","container","heading","title","icon_wrapper","icon","url","content","avatar","id","user","tag_icon_wrapper","tag","body","text_noti","username","text","time","createdAt","fromNow"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link  } from 'react-router-dom'\r\n\r\nimport {GrFormClose} from 'react-icons/gr'\r\n\r\nimport { readNotice } from '../../store/actions/noticeAction'\r\n\r\nimport TagIcon from '../util/TagIcon'\r\n\r\nimport styles from './NotificationDisplay.module.css'\r\nimport moment from 'moment'\r\nimport Avatar from '../util/Avatar'\r\n\r\nconst NotificationDisplay = () => {\r\n    const ref = useRef()\r\n    const dispatch = useDispatch()\r\n\r\n    const {notice, auth} = useSelector(state=>state)\r\n    const [isShow, setIsShow] = useState(false)\r\n    const [msg, setMsg] = useState({})\r\n\r\n    useEffect(()=>{\r\n        if(!notice.popup) return\r\n        setIsShow(true)\r\n        setMsg(notice.data[0])\r\n\r\n    },[notice.popup])\r\n\r\n    useEffect(()=>{\r\n        isShow && setTimeout(() => {\r\n            closeHandler()\r\n        }, 5000)\r\n    },[isShow])\r\n\r\n    const readHandler = () => {\r\n        dispatch(readNotice(auth, msg))\r\n    }\r\n\r\n    const closeHandler = () => {\r\n        ref.current.style.left = '-20%'\r\n        setTimeout(() => {\r\n            dispatch({type:'SHOW_NOTICE', payload: false})\r\n            setIsShow(false)\r\n        }, 300)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isShow && \r\n            <div ref={ref} className={styles.notice_wrapper}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.heading}>\r\n                        <div className={styles.title}>New Notification</div>\r\n                        <div onClick={closeHandler} className={styles.icon_wrapper}><GrFormClose className={styles.icon} /></div>\r\n                    </div>\r\n                    <Link onClick={readHandler} to={`/post/${msg.url}`} replace>\r\n                        <div className={styles.content}>\r\n                            <div className={styles.avatar}>\r\n                                <Avatar id={msg.id} src={msg.user.avatar} diameter='4rem' />\r\n                                <div className={styles.tag_icon_wrapper}>\r\n                                    <TagIcon tag={msg.tag} />\r\n                                </div>\r\n                            </div>\r\n                            <div className={styles.body}>\r\n                                <div className={styles.text_noti}>\r\n                                <b>{msg.user.username}</b>&nbsp;{msg.text}\r\n                                </div>\r\n                                <div className={styles.time}>{moment(msg.createdAt).fromNow()}</div>\r\n                            </div>\r\n                        </div>                        \r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotificationDisplay\r\n"]},"metadata":{},"sourceType":"module"}