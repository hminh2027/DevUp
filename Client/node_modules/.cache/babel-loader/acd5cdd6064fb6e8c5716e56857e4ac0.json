{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\post\\\\PostOption.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deletePost } from '../../store/actions/postAction';\nimport { MdModeEdit, MdSave } from 'react-icons/md';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport styles from './PostOption.module.css';\nimport DropdownCard from '../util/DropdownCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostOption = ({\n  setIsEdit,\n  post,\n  isShow\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    auth,\n    profile,\n    notice\n  } = useSelector(state => state);\n  const [isMe, setIsMe] = useState(false);\n  useEffect(() => {\n    if (auth.user._id === post.user._id) setIsMe(true);else setIsMe(false);\n  }, [auth.user._id, post.user._id]);\n\n  const deleteHander = () => {\n    dispatch(deletePost(auth, post._id, profile));\n  };\n\n  return /*#__PURE__*/_jsxDEV(DropdownCard, {\n    isShow: isShow,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.option_item,\n      onClick: () => console.log('dog'),\n      children: [/*#__PURE__*/_jsxDEV(MdSave, {\n        className: styles.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.text,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), isMe && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.option_item,\n      onClick: () => setIsEdit(true),\n      children: [/*#__PURE__*/_jsxDEV(MdModeEdit, {\n        className: styles.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.text,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), isMe && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.option_item,\n      onClick: deleteHander,\n      children: [/*#__PURE__*/_jsxDEV(RiDeleteBinLine, {\n        className: styles.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.text,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostOption, \"gYSQBkSzw4h5H25D2iEOEel/IDI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostOption;\nexport default PostOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostOption\");","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/post/PostOption.js"],"names":["React","useState","useEffect","useDispatch","useSelector","deletePost","MdModeEdit","MdSave","RiDeleteBinLine","styles","DropdownCard","PostOption","setIsEdit","post","isShow","dispatch","auth","profile","notice","state","isMe","setIsMe","user","_id","deleteHander","option_item","console","log","icon","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAAQC,UAAR,EAAoBC,MAApB,QAAiC,gBAAjC;AACA,SAAQC,eAAR,QAA8B,gBAA9B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA;AAAlB,CAAD,KAA+B;AAAA;;AAC9C,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAM;AAACa,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAA0Bd,WAAW,CAACe,KAAK,IAAEA,KAAR,CAA3C;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,KAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGc,IAAI,CAACM,IAAL,CAAUC,GAAV,KAAkBV,IAAI,CAACS,IAAL,CAAUC,GAA/B,EAAoCF,OAAO,CAAC,IAAD,CAAP,CAApC,KACKA,OAAO,CAAC,KAAD,CAAP;AACR,GAHQ,EAGP,CAACL,IAAI,CAACM,IAAL,CAAUC,GAAX,EAAgBV,IAAI,CAACS,IAAL,CAAUC,GAA1B,CAHO,CAAT;;AAKA,QAAMC,YAAY,GAAG,MAAM;AACvBT,IAAAA,QAAQ,CAACV,UAAU,CAACW,IAAD,EAAOH,IAAI,CAACU,GAAZ,EAAiBN,OAAjB,CAAX,CAAR;AACH,GAFD;;AAIA,sBACI,QAAC,YAAD;AAAc,IAAA,MAAM,EAAEH,MAAtB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEL,MAAM,CAACgB,WAAvB;AAAoC,MAAA,OAAO,EAAE,MAAIC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAjD;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAElB,MAAM,CAACmB;AAA1B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAEnB,MAAM,CAACoB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAKKT,IAAI,iBACL;AAAK,MAAA,SAAS,EAAEX,MAAM,CAACgB,WAAvB;AAAoC,MAAA,OAAO,EAAE,MAAIb,SAAS,CAAC,IAAD,CAA1D;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,SAAS,EAAEH,MAAM,CAACmB;AAA9B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAEnB,MAAM,CAACoB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,EAWKT,IAAI,iBACL;AAAK,MAAA,SAAS,EAAEX,MAAM,CAACgB,WAAvB;AAAoC,MAAA,OAAO,EAAED,YAA7C;AAAA,8BACI,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAEf,MAAM,CAACmB;AAAnC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAEnB,MAAM,CAACoB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAlCD;;GAAMlB,U;UACeR,W,EACeC,W;;;KAF9BO,U;AAoCN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deletePost } from '../../store/actions/postAction';\r\nimport {MdModeEdit, MdSave} from 'react-icons/md'\r\nimport {RiDeleteBinLine} from 'react-icons/ri'\r\nimport styles from './PostOption.module.css'\r\nimport DropdownCard from '../util/DropdownCard';\r\n\r\nconst PostOption = ({setIsEdit, post, isShow}) => {\r\n    const dispatch = useDispatch();\r\n    const {auth, profile, notice} = useSelector(state=>state);\r\n    const [isMe, setIsMe] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        if(auth.user._id === post.user._id) setIsMe(true);\r\n        else setIsMe(false);\r\n    },[auth.user._id, post.user._id]);\r\n\r\n    const deleteHander = () => {\r\n        dispatch(deletePost(auth, post._id, profile));\r\n    }\r\n\r\n    return (\r\n        <DropdownCard isShow={isShow}>\r\n            <div className={styles.option_item} onClick={()=>console.log('dog')} >\r\n                <MdSave className={styles.icon}/>\r\n                <div className={styles.text}>Save</div>\r\n            </div>\r\n            {isMe && \r\n            <div className={styles.option_item} onClick={()=>setIsEdit(true)}>\r\n                <MdModeEdit className={styles.icon}/>\r\n                <div className={styles.text}>Edit</div>\r\n            </div>\r\n            }\r\n            {isMe && \r\n            <div className={styles.option_item} onClick={deleteHander} >\r\n                <RiDeleteBinLine className={styles.icon}/>\r\n                <div className={styles.text}>Delete</div>\r\n            </div>\r\n            } \r\n        </DropdownCard>       \r\n    )\r\n}\r\n\r\nexport default PostOption\r\n"]},"metadata":{},"sourceType":"module"}