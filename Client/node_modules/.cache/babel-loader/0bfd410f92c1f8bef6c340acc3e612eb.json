{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\notification\\\\NotificationDropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport styles from './NotificationDropdown.module.css';\nimport DropdownCard from '../util/DropdownCard';\nimport { CgMoreAlt } from 'react-icons/cg';\nimport { useSelector } from 'react-redux';\nimport NoticeCard from './notices/NoticeCard';\nimport NotificationOption from './NotificationOption';\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotificationDropdown = ({\n  isShow\n}) => {\n  _s();\n\n  const ref = useRef();\n  const {\n    notice\n  } = useSelector(state => state);\n  const [isShowOption, setShowOption] = useState(false);\n  const [delay, setDelay] = useState(0);\n  useEffect(() => {\n    // Function to check if click outside the object\n    const checkIfClickOutside = e => {\n      if (isShowOption && ref.current && !ref.current.contains(e.target)) setShowOption(false);\n    }; // Set event 'when click' trigger\n\n\n    document.addEventListener(\"mousedown\", checkIfClickOutside);\n    return () => {\n      // Clean the event\n      document.removeEventListener(\"mousedown\", checkIfClickOutside);\n    };\n  }, [isShowOption]);\n  let variants = {\n    initial: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1,\n      transition: {\n        delay: delay,\n        duration: .6,\n        when: \"beforeChildren\"\n      }\n    },\n    exit: {\n      opacity: 0,\n      transition: {\n        duration: 0.2\n      }\n    }\n  };\n\n  const plus = () => {\n    setDelay(delay + 1);\n    console.log(delay);\n  };\n\n  return /*#__PURE__*/_jsxDEV(DropdownCard, {\n    isShow: isShow,\n    bottom: '-50%',\n    right: '200%',\n    width: '450px',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.heading,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.title,\n          children: \"Notification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: ref,\n          style: {\n            opacity: `${isShowOption ? '1' : '.5'}`\n          },\n          onClick: () => setShowOption(!isShowOption),\n          className: styles.heading_option,\n          children: [/*#__PURE__*/_jsxDEV(CgMoreAlt, {\n            className: styles.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), isShowOption && /*#__PURE__*/_jsxDEV(NotificationOption, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.content,\n        children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          children: notice.data.length > 0 ? notice.data.map(msg => /*#__PURE__*/_jsxDEV(motion.div, {\n            variants: variants,\n            initial: \"initial\",\n            animate: \"enter\",\n            exit: \"exit\",\n            style: {\n              transitionDelay: delay\n            },\n            children: [/*#__PURE__*/_jsxDEV(NoticeCard, {\n              msg: msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), plus()]\n          }, \"dog\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: \"No notifications available!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NotificationDropdown, \"sY5eXRtMBKPWllhYS1aS6R31Rfo=\", false, function () {\n  return [useSelector];\n});\n\n_c = NotificationDropdown;\nexport default NotificationDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationDropdown\");","map":{"version":3,"sources":["D:/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/notification/NotificationDropdown.js"],"names":["React","useEffect","useRef","useState","styles","DropdownCard","CgMoreAlt","useSelector","NoticeCard","NotificationOption","motion","AnimatePresence","NotificationDropdown","isShow","ref","notice","state","isShowOption","setShowOption","delay","setDelay","checkIfClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","variants","initial","opacity","enter","transition","duration","when","exit","plus","console","log","container","heading","title","heading_option","icon","content","data","length","map","msg","transitionDelay","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport styles from './NotificationDropdown.module.css'\r\nimport DropdownCard from '../util/DropdownCard'\r\nimport {CgMoreAlt} from 'react-icons/cg'\r\nimport { useSelector } from 'react-redux'\r\nimport NoticeCard from './notices/NoticeCard'\r\nimport NotificationOption from './NotificationOption'\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\n\r\n\r\nconst NotificationDropdown = ({isShow}) => {\r\n    const ref = useRef();\r\n    \r\n    const {notice} = useSelector(state=>state);\r\n    const [isShowOption, setShowOption] = useState(false);\r\n    const [delay, setDelay] = useState(0);\r\n\r\n    useEffect(()=>{\r\n        // Function to check if click outside the object\r\n        const checkIfClickOutside = e => {\r\n            if(isShowOption && ref.current &&!ref.current.contains(e.target)) setShowOption(false); \r\n        }\r\n        // Set event 'when click' trigger\r\n        document.addEventListener(\"mousedown\", checkIfClickOutside)\r\n        return () => {\r\n            // Clean the event\r\n            document.removeEventListener(\"mousedown\", checkIfClickOutside)\r\n        }\r\n    },[isShowOption]);\r\n\r\n    let variants = {\r\n        initial: {\r\n            opacity: 0,\r\n        },\r\n        enter: {\r\n            opacity: 1,\r\n            transition: {\r\n                delay: delay,\r\n                duration: .6,\r\n                when: \"beforeChildren\",\r\n            },\r\n        },\r\n        exit: {\r\n            opacity: 0,\r\n          transition: { duration: 0.2 },\r\n        },\r\n    }\r\n\r\n    const plus = () => {\r\n        setDelay(delay+1);\r\n        console.log(delay);\r\n    }\r\n\r\n    return (\r\n        <DropdownCard isShow={isShow} bottom={'-50%'} right={'200%'} width={'450px'}>\r\n            <div className={styles.container}>\r\n                <div className={styles.heading}>\r\n                    <div className={styles.title}>Notification</div>\r\n                    <div ref={ref} style={{opacity: `${isShowOption ? '1' : '.5'}`}} onClick={()=>setShowOption(!isShowOption)} className={styles.heading_option}>\r\n                        <CgMoreAlt className={styles.icon}/>\r\n                        {isShowOption && <NotificationOption/>}\r\n                    </div>\r\n                </div>\r\n                <div className={styles.content}>\r\n                <AnimatePresence >\r\n                    {notice.data.length>0 ? notice.data.map(msg=>(\r\n                        <motion.div\r\n                        variants ={variants}\r\n                        key=\"dog\"\r\n                        initial='initial'\r\n                        animate='enter'\r\n                        exit='exit'\r\n                        style={{transitionDelay: delay}}\r\n                        >\r\n                            <NoticeCard msg={msg} />\r\n                            {plus()}\r\n                        </motion.div>\r\n                    )) : \r\n                    <div style={{textAlign: 'center'}}>No notifications available!</div>                   \r\n                    }\r\n                </AnimatePresence>\r\n                    {/* // {notice.data.length>0 ? notice.data.map(msg=>(\r\n\r\n                    //     <NoticeCard msg={msg} />\r\n                    // )):\r\n                    // <div style={{textAlign: 'center'}}>No notifications available!</div>\r\n                    // } */}\r\n                </div>\r\n            </div>\r\n        </DropdownCard>\r\n    )\r\n}\r\n\r\nexport default NotificationDropdown\r\n"]},"metadata":{},"sourceType":"module"}