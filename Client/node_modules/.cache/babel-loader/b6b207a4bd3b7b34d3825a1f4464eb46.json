{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\notification\\\\NotificationDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useHistory } from 'react-router';\nimport { GrFormClose } from 'react-icons/gr';\nimport { readNotice } from '../../store/actions/noticeAction';\nimport RoundWrapper from '../util/RoundWrapper';\nimport TagIcon from '../util/TagIcon';\nimport styles from './NotificationDisplay.module.css';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NotificationDisplay = () => {\n  _s();\n\n  const ref = useRef();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const {\n    notice,\n    auth\n  } = useSelector(state => state);\n  const [isShow, setIsShow] = useState(false);\n  const [msg, setMsg] = useState({});\n  useEffect(() => {\n    if (!notice.popup) return;\n    setIsShow(true);\n    setMsg(notice.data[0]);\n  }, [notice]);\n  useEffect(() => {\n    isShow && setTimeout(() => {\n      closeHandler();\n    }, 5000);\n  }, [isShow]);\n\n  const readHandler = () => {\n    dispatch(readNotice(auth, msg));\n    if (location.pathname !== `/post/${msg.url}`) history.push(`/post/${msg.url}`);\n  };\n\n  const closeHandler = () => {\n    ref.current.style.left = '-20%';\n    setTimeout(() => {\n      dispatch({\n        type: 'SHOW_NOTICE',\n        payload: false\n      });\n      setIsShow(false);\n    }, 300);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isShow && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      className: styles.notice_wrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.heading,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.title,\n            children: \"New Notification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: closeHandler,\n            className: styles.close,\n            children: /*#__PURE__*/_jsxDEV(GrFormClose, {\n              className: styles.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 78\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: readHandler,\n          className: styles.content,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.avatar,\n            children: /*#__PURE__*/_jsxDEV(RoundWrapper, {\n              margin: \"0 .7rem 0 0\",\n              diameter: \"60px\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: msg.user.avatar,\n                alt: \"avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.tag_icon_wrapper,\n                children: /*#__PURE__*/_jsxDEV(TagIcon, {\n                  tag: msg.tag\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.body,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.text_noti,\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: msg.user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this), \" \", msg.text]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.time,\n              children: moment(msg.createdAt).fromNow()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), msg.image && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.image_wrapper,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: msg.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 77\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(NotificationDisplay, \"kKYXBsfm2HURkKWjFfZJjHh+c/E=\", false, function () {\n  return [useHistory, useDispatch, useLocation, useSelector];\n});\n\n_c = NotificationDisplay;\nexport default NotificationDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationDisplay\");","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/notification/NotificationDisplay.js"],"names":["React","useEffect","useRef","useState","useDispatch","useSelector","Link","useLocation","useHistory","GrFormClose","readNotice","RoundWrapper","TagIcon","styles","moment","NotificationDisplay","ref","history","dispatch","location","notice","auth","state","isShow","setIsShow","msg","setMsg","popup","data","setTimeout","closeHandler","readHandler","pathname","url","push","current","style","left","type","payload","notice_wrapper","container","heading","title","close","icon","content","avatar","user","tag_icon_wrapper","tag","body","text_noti","username","text","time","createdAt","fromNow","image","image_wrapper"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useLocation  } from 'react-router-dom'\r\nimport {useHistory} from 'react-router'\r\n\r\nimport {GrFormClose} from 'react-icons/gr'\r\n\r\nimport { readNotice } from '../../store/actions/noticeAction'\r\n\r\nimport RoundWrapper from '../util/RoundWrapper'\r\nimport TagIcon from '../util/TagIcon'\r\n\r\nimport styles from './NotificationDisplay.module.css'\r\nimport moment from 'moment'\r\n\r\nconst NotificationDisplay = () => {\r\n    const ref = useRef();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n\r\n    const {notice, auth} = useSelector(state=>state);\r\n    const [isShow, setIsShow] = useState(false);\r\n    const [msg, setMsg] = useState({});\r\n\r\n    useEffect(()=>{\r\n        if(!notice.popup) return;\r\n        setIsShow(true);\r\n        setMsg(notice.data[0]);\r\n\r\n    },[notice])\r\n\r\n    useEffect(()=>{\r\n        isShow && setTimeout(() => {\r\n            closeHandler()\r\n        }, 5000);\r\n    },[isShow])\r\n\r\n    const readHandler = () => {\r\n        dispatch(readNotice(auth, msg))\r\n        if(location.pathname !== `/post/${msg.url}`) history.push(`/post/${msg.url}`);\r\n    }\r\n\r\n    const closeHandler = () => {\r\n        ref.current.style.left = '-20%';\r\n        setTimeout(() => {\r\n            dispatch({type:'SHOW_NOTICE', payload: false})\r\n            setIsShow(false)\r\n        }, 300);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isShow && \r\n            <div ref={ref} className={styles.notice_wrapper}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.heading}>\r\n                        <div className={styles.title}>New Notification</div>\r\n                        <div onClick={closeHandler} className={styles.close}><GrFormClose className={styles.icon} /></div>\r\n                    </div>\r\n                    <div onClick={readHandler} className={styles.content}>\r\n                        <div className={styles.avatar}>\r\n                            <RoundWrapper margin='0 .7rem 0 0' diameter='60px'>\r\n                                <img src={msg.user.avatar} alt='avatar'/>\r\n                                <div className={styles.tag_icon_wrapper}>\r\n                                    <TagIcon tag={msg.tag} />\r\n                                </div>\r\n                            </RoundWrapper>                          \r\n                        </div>\r\n                        <div className={styles.body}>\r\n                            <div className={styles.text_noti}>\r\n                                <b>{msg.user.username}</b> {msg.text}\r\n                            </div>\r\n                            <div className={styles.time}>{moment(msg.createdAt).fromNow()}</div>\r\n                        </div>\r\n                        {msg.image && <div className={styles.image_wrapper}><img src={msg.image}/></div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotificationDisplay\r\n"]},"metadata":{},"sourceType":"module"}