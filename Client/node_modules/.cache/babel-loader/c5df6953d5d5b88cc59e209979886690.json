{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\post\\\\PostOption.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { deletePost, savePost } from '../../store/actions/postAction';\nimport { MdModeEdit } from 'react-icons/md';\nimport { BsBookmarkPlus, BsBookmarkDash } from 'react-icons/bs';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport DropdownCard from '../util/DropdownCard';\nimport styles from './PostOption.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostOption = ({\n  setIsEdit,\n  post,\n  isShow,\n  setIsShow\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    auth\n  } = useSelector(state => state);\n  const [isMe, setIsMe] = useState(false);\n  const [isSaved, setIsSaved] = useState(false);\n  useEffect(() => {\n    if (auth.user._id === post.user._id) setIsMe(true);else setIsMe(false);\n  }, [auth.user._id, post.user._id]);\n  useEffect(() => {\n    if (auth.user.saved.find(p => p == post._id)) setIsSaved(true);\n  }, [auth.user.saved, post._id]);\n\n  const deleteHander = () => {\n    dispatch(deletePost(auth, post._id));\n    history.replace('/');\n  };\n\n  const saveHander = () => {\n    dispatch(savePost(auth, post._id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(DropdownCard, {\n    isShow: isShow,\n    setIsShow: setIsShow,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.option_item,\n      onClick: saveHander,\n      children: [isSaved ? /*#__PURE__*/_jsxDEV(BsBookmarkDash, {\n        className: styles.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(BsBookmarkPlus, {\n        className: styles.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 72\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.text,\n        children: isSaved ? 'Unsave' : 'Save'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), isMe && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.option_item,\n      onClick: () => setIsEdit(true),\n      children: [/*#__PURE__*/_jsxDEV(MdModeEdit, {\n        className: styles.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.text,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), isMe && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.option_item,\n      onClick: deleteHander,\n      children: [/*#__PURE__*/_jsxDEV(RiDeleteBinLine, {\n        className: styles.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.text,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostOption, \"zAsfM4MoBamhgu3CQpdBFaNyHh4=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = PostOption;\nexport default PostOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostOption\");","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/post/PostOption.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useHistory","deletePost","savePost","MdModeEdit","BsBookmarkPlus","BsBookmarkDash","RiDeleteBinLine","DropdownCard","styles","PostOption","setIsEdit","post","isShow","setIsShow","dispatch","history","auth","state","isMe","setIsMe","isSaved","setIsSaved","user","_id","saved","find","p","deleteHander","replace","saveHander","option_item","icon","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,gCAArC;AAEA,SAAQC,UAAR,QAAyB,gBAAzB;AACA,SAAQC,cAAR,EAAwBC,cAAxB,QAA6C,gBAA7C;AACA,SAAQC,eAAR,QAA8B,gBAA9B;AAEA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA,MAAlB;AAA0BC,EAAAA;AAA1B,CAAD,KAA0C;AAAA;;AACzD,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AACA,QAAMiB,OAAO,GAAGf,UAAU,EAA1B;AAEA,QAAM;AAACgB,IAAAA;AAAD,MAASjB,WAAW,CAACkB,KAAK,IAAEA,KAAR,CAA1B;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACwB,OAAD,EAAUC,UAAV,IAAwBzB,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGmB,IAAI,CAACM,IAAL,CAAUC,GAAV,KAAkBZ,IAAI,CAACW,IAAL,CAAUC,GAA/B,EAAoCJ,OAAO,CAAC,IAAD,CAAP,CAApC,KACKA,OAAO,CAAC,KAAD,CAAP;AAER,GAJQ,EAIP,CAACH,IAAI,CAACM,IAAL,CAAUC,GAAX,EAAgBZ,IAAI,CAACW,IAAL,CAAUC,GAA1B,CAJO,CAAT;AAMA1B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGmB,IAAI,CAACM,IAAL,CAAUE,KAAV,CAAgBC,IAAhB,CAAqBC,CAAC,IAAEA,CAAC,IAAIf,IAAI,CAACY,GAAlC,CAAH,EAA2CF,UAAU,CAAC,IAAD,CAAV;AAE9C,GAHQ,EAGN,CAACL,IAAI,CAACM,IAAL,CAAUE,KAAX,EAAkBb,IAAI,CAACY,GAAvB,CAHM,CAAT;;AAKA,QAAMI,YAAY,GAAG,MAAM;AACvBb,IAAAA,QAAQ,CAACb,UAAU,CAACe,IAAD,EAAOL,IAAI,CAACY,GAAZ,CAAX,CAAR;AACAR,IAAAA,OAAO,CAACa,OAAR,CAAgB,GAAhB;AACH,GAHD;;AAKA,QAAMC,UAAU,GAAG,MAAM;AACrBf,IAAAA,QAAQ,CAACZ,QAAQ,CAACc,IAAD,EAAOL,IAAI,CAACY,GAAZ,CAAT,CAAR;AACH,GAFD;;AAIA,sBACI,QAAC,YAAD;AAAc,IAAA,MAAM,EAAEX,MAAtB;AAA8B,IAAA,SAAS,EAAEC,SAAzC;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEL,MAAM,CAACsB,WAAvB;AAAoC,MAAA,OAAO,EAAED,UAA7C;AAAA,iBACKT,OAAO,gBAAG,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAEZ,MAAM,CAACuB;AAAlC;AAAA;AAAA;AAAA;AAAA,cAAH,gBAA+C,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAEvB,MAAM,CAACuB;AAAlC;AAAA;AAAA;AAAA;AAAA,cAD3D,eAEI;AAAK,QAAA,SAAS,EAAEvB,MAAM,CAACwB,IAAvB;AAAA,kBAA8BZ,OAAO,GAAG,QAAH,GAAc;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAKKF,IAAI,iBACL;AAAK,MAAA,SAAS,EAAEV,MAAM,CAACsB,WAAvB;AAAoC,MAAA,OAAO,EAAE,MAAIpB,SAAS,CAAC,IAAD,CAA1D;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,SAAS,EAAEF,MAAM,CAACuB;AAA9B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAEvB,MAAM,CAACwB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,EAWKd,IAAI,iBACL;AAAK,MAAA,SAAS,EAAEV,MAAM,CAACsB,WAAvB;AAAoC,MAAA,OAAO,EAAEH,YAA7C;AAAA,8BACI,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAEnB,MAAM,CAACuB;AAAnC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAEvB,MAAM,CAACwB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAjDD;;GAAMvB,U;UACeX,W,EACDE,U,EAEDD,W;;;KAJbU,U;AAmDN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router'\r\n\r\nimport { deletePost, savePost } from '../../store/actions/postAction'\r\n\r\nimport {MdModeEdit} from 'react-icons/md'\r\nimport {BsBookmarkPlus, BsBookmarkDash} from 'react-icons/bs'\r\nimport {RiDeleteBinLine} from 'react-icons/ri'\r\n\r\nimport DropdownCard from '../util/DropdownCard'\r\n\r\nimport styles from './PostOption.module.css'\r\n\r\nconst PostOption = ({setIsEdit, post, isShow, setIsShow}) => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const {auth} = useSelector(state=>state)\r\n\r\n    const [isMe, setIsMe] = useState(false)\r\n    const [isSaved, setIsSaved] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        if(auth.user._id === post.user._id) setIsMe(true)\r\n        else setIsMe(false)\r\n\r\n    },[auth.user._id, post.user._id])\r\n\r\n    useEffect(() => {\r\n        if(auth.user.saved.find(p=>p == post._id)) setIsSaved(true)\r\n\r\n    }, [auth.user.saved, post._id])\r\n\r\n    const deleteHander = () => {\r\n        dispatch(deletePost(auth, post._id))\r\n        history.replace('/')\r\n    }\r\n\r\n    const saveHander = () => {\r\n        dispatch(savePost(auth, post._id))\r\n    }\r\n\r\n    return (\r\n        <DropdownCard isShow={isShow} setIsShow={setIsShow}>\r\n            <div className={styles.option_item} onClick={saveHander} >\r\n                {isSaved ? <BsBookmarkDash className={styles.icon}/> : <BsBookmarkPlus className={styles.icon}/>}\r\n                <div className={styles.text}>{isSaved ? 'Unsave' : 'Save'}</div>\r\n            </div>\r\n            {isMe && \r\n            <div className={styles.option_item} onClick={()=>setIsEdit(true)}>\r\n                <MdModeEdit className={styles.icon}/>\r\n                <div className={styles.text}>Edit</div>\r\n            </div>\r\n            }\r\n            {isMe && \r\n            <div className={styles.option_item} onClick={deleteHander} >\r\n                <RiDeleteBinLine className={styles.icon}/>\r\n                <div className={styles.text}>Delete</div>\r\n            </div>\r\n            } \r\n        </DropdownCard>       \r\n    )\r\n}\r\n\r\nexport default PostOption\r\n"]},"metadata":{},"sourceType":"module"}