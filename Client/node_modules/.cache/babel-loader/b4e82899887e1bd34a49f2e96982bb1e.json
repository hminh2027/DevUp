{"ast":null,"code":"import { postAPI, getAPI, deleteAPI, patchAPI } from '../../apis/Axios';\nexport const createProject = (auth, body) => async dispatch => {\n  try {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        loading: true\n      }\n    });\n    const res = await postAPI('project', body, auth.token);\n    dispatch({\n      type: 'OPEN_PROJECT',\n      payload: res.data.newCode\n    });\n    dispatch({\n      type: 'CHANGE_TAB',\n      payload: 1\n    });\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        success: res.data.msg\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const editableProject = (auth, id) => async dispatch => {\n  try {\n    const res = await patchAPI(`project/${id}/changeEditable`, null, auth.token);\n    console.log(res.data.newPost); // dispatch({type: 'UPDATE_PROJECT', payload: res.data.newPost});\n\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        success: res.data.msg\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const openProject = project => async dispatch => {\n  dispatch({\n    type: 'OPEN_PROJECT',\n    payload: project\n  });\n  dispatch({\n    type: 'CHANGE_TAB',\n    payload: 1\n  });\n};\nexport const saveProject = (auth, body, id) => async dispatch => {\n  try {\n    const res = await patchAPI(`project/${id}`, body, auth.token);\n    dispatch({\n      type: 'UPDATE_PROJECT',\n      payload: res.data.newCode\n    });\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        success: res.data.msg\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const deleteProject = (auth, id) => async dispatch => {\n  try {\n    const res = await deleteAPI(`project/${id}`, auth.token);\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        success: res.data.msg\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const getOwnProjects = auth => async dispatch => {\n  try {\n    dispatch({\n      type: 'LOADING_PROJECT',\n      payload: {\n        loading: true\n      }\n    });\n    const res = await getAPI('project', auth.token);\n    dispatch({\n      type: 'GET_OWN_PROJECTS',\n      payload: res.data.codes\n    });\n    dispatch({\n      type: 'LOADING_PROJECT',\n      payload: {\n        loading: false\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const getShareProjects = auth => async dispatch => {\n  try {\n    dispatch({\n      type: 'LOADING_PROJECT',\n      payload: {\n        loading: true\n      }\n    });\n    const res = await getAPI('project', auth.token);\n    dispatch({\n      type: 'GET_SHARE_PROJECTS',\n      payload: res.data.codes\n    });\n    dispatch({\n      type: 'LOADING_PROJECT',\n      payload: {\n        loading: false\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/store/actions/projectAction.js"],"names":["postAPI","getAPI","deleteAPI","patchAPI","createProject","auth","body","dispatch","type","payload","loading","res","token","data","newCode","success","msg","err","error","response","editableProject","id","console","log","newPost","openProject","project","saveProject","deleteProject","getOwnProjects","codes","getShareProjects"],"mappings":"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","sourcesContent":["import {postAPI, getAPI, deleteAPI, patchAPI} from '../../apis/Axios';\r\n\r\nexport const createProject = (auth, body) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: 'ALERT', payload: {loading: true}});\r\n        const res = await postAPI('project', body, auth.token);\r\n        dispatch({type: 'OPEN_PROJECT', payload: res.data.newCode})\r\n        dispatch({type: 'CHANGE_TAB', payload: 1})\r\n        dispatch({type: 'ALERT', payload: {success: res.data.msg}});\r\n\r\n    } catch (err) {       \r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}});\r\n    }\r\n}\r\n\r\nexport const editableProject = (auth, id) => async (dispatch) => {\r\n    try {\r\n        const res = await patchAPI(`project/${id}/changeEditable`, null, auth.token)\r\n        console.log(res.data.newPost)\r\n        \r\n        // dispatch({type: 'UPDATE_PROJECT', payload: res.data.newPost});\r\n        dispatch({type: 'ALERT', payload: {success: res.data.msg}});\r\n\r\n    } catch (err) {       \r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}});\r\n    }\r\n}\r\n\r\nexport const openProject = (project) => async (dispatch) => {\r\n    dispatch({type: 'OPEN_PROJECT', payload: project})\r\n    dispatch({type: 'CHANGE_TAB', payload: 1})\r\n}\r\n\r\nexport const saveProject = (auth, body, id) => async (dispatch) => {\r\n    try {\r\n        const res = await patchAPI(`project/${id}`, body, auth.token)\r\n\r\n        dispatch({type: 'UPDATE_PROJECT', payload: res.data.newCode})\r\n        dispatch({type: 'ALERT', payload: {success: res.data.msg}})\r\n\r\n    } catch (err) {       \r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}});\r\n    }\r\n}\r\n\r\nexport const deleteProject = (auth, id) => async (dispatch) => {\r\n    try {\r\n        const res = await deleteAPI(`project/${id}`, auth.token);\r\n\r\n        dispatch({type: 'ALERT', payload: {success: res.data.msg}});\r\n\r\n    } catch (err) { \r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}});\r\n    }\r\n}\r\n\r\nexport const getOwnProjects = (auth) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: 'LOADING_PROJECT', payload: {loading: true}});\r\n        const res = await getAPI('project', auth.token);\r\n       \r\n        dispatch({type: 'GET_OWN_PROJECTS', payload: res.data.codes});\r\n        dispatch({type: 'LOADING_PROJECT', payload: {loading: false}});\r\n\r\n    } catch (err) {       \r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}});\r\n    }\r\n}\r\n\r\nexport const getShareProjects = (auth) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: 'LOADING_PROJECT', payload: {loading: true}});\r\n        const res = await getAPI('project', auth.token);\r\n       \r\n        dispatch({type: 'GET_SHARE_PROJECTS', payload: res.data.codes});\r\n        dispatch({type: 'LOADING_PROJECT', payload: {loading: false}});\r\n\r\n    } catch (err) {       \r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}});\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}