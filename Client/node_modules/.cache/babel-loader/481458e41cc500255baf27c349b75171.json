{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\Alert\\\\Toast.js\";\nimport React from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ntoast.configure();\nexport const Toast = props => {\n  const config = {\n    position: \"bottom-right\",\n    autoClose: 5000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined\n  };\n\n  if (props.type == 'success') {\n    toast.success('body', config);\n  } else if (props.type == 'error') {\n    toast.error('body', config);\n  }\n\n  const notify = () => {\n    toast('ðŸ¦„ Wow so !', config);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: notify,\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"bottom-right\",\n      autoClose: 5000,\n      hideProgressBar: true,\n      newestOnTop: true,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      pauseOnHover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = Toast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toast\");","map":{"version":3,"sources":["D:/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/Alert/Toast.js"],"names":["React","ToastContainer","toast","configure","Toast","props","config","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","type","success","error","notify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;;;AACAA,KAAK,CAACC,SAAN;AAEA,OAAO,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAC5B,QAAMC,MAAM,GAAG;AACXC,IAAAA,QAAQ,EAAE,cADC;AAEXC,IAAAA,SAAS,EAAE,IAFA;AAGXC,IAAAA,eAAe,EAAE,IAHN;AAIXC,IAAAA,YAAY,EAAE,IAJH;AAKXC,IAAAA,YAAY,EAAE,IALH;AAMXC,IAAAA,SAAS,EAAE,IANA;AAOXC,IAAAA,QAAQ,EAAEC;AAPC,GAAf;;AAUA,MAAGT,KAAK,CAACU,IAAN,IAAc,SAAjB,EAA4B;AACxBb,IAAAA,KAAK,CAACc,OAAN,CAAc,MAAd,EAAsBV,MAAtB;AACH,GAFD,MAGK,IAAGD,KAAK,CAACU,IAAN,IAAc,OAAjB,EAA0B;AAC3Bb,IAAAA,KAAK,CAACe,KAAN,CAAY,MAAZ,EAAoBX,MAApB;AACH;;AAED,QAAMY,MAAM,GAAG,MAAM;AACjBhB,IAAAA,KAAK,CAAC,aAAD,EAAgBI,MAAhB,CAAL;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAEY,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,cAAD;AACI,MAAA,QAAQ,EAAC,cADb;AAEI,MAAA,SAAS,EAAE,IAFf;AAGI,MAAA,eAAe,MAHnB;AAII,MAAA,WAAW,MAJf;AAKI,MAAA,YAAY,MALhB;AAMI,MAAA,GAAG,EAAE,KANT;AAOI,MAAA,gBAAgB,MAPpB;AAQI,MAAA,SAAS,MARb;AASI,MAAA,YAAY;AAThB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAgBH,CAtCM;KAAMd,K","sourcesContent":["import React from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure();\r\n\r\nexport const Toast = (props) => {\r\n    const config = {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    }\r\n\r\n    if(props.type == 'success') {\r\n        toast.success('body', config);\r\n    }\r\n    else if(props.type == 'error') {\r\n        toast.error('body', config);\r\n    }\r\n\r\n    const notify = () => {\r\n        toast('ðŸ¦„ Wow so !', config);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button onClick={notify}>Click</button>\r\n            <ToastContainer\r\n                position=\"bottom-right\"\r\n                autoClose={5000}\r\n                hideProgressBar\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}