{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\notification\\\\notices\\\\NoticeOption.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport { GoCheck } from 'react-icons/go';\nimport DropdownCard from '../../util/DropdownCard';\nimport { deleteNotice, readNotice, unreadNotice, getNotices } from '../../../store/actions/noticeAction';\nimport styles from './NoticeOption.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoticeOption = ({\n  setIsShow,\n  isShow,\n  msg,\n  setExiting,\n  top\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    auth\n  } = useSelector(state => state);\n\n  const markHandler = () => {\n    msg.isRead.includes(auth.user._id) ? dispatch(unreadNotice(auth, msg)) : dispatch(readNotice(auth, msg));\n  };\n\n  const deleteHandler = () => {\n    // setExiting(true)\n    dispatch(deleteNotice(auth, msg._id)); // dispatch(getNotices(auth))\n  };\n\n  return /*#__PURE__*/_jsxDEV(DropdownCard, {\n    setIsShow: setIsShow,\n    isShow: isShow,\n    right: \"25%\",\n    top: top - 150,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: markHandler,\n      className: styles.option_item,\n      children: [/*#__PURE__*/_jsxDEV(GoCheck, {\n        className: styles.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.text,\n        children: msg.isRead.includes(auth.user._id) ? `Mark unread` : `Mark read`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: deleteHandler,\n      className: styles.option_item,\n      children: [/*#__PURE__*/_jsxDEV(RiDeleteBinLine, {\n        className: styles.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.text,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NoticeOption, \"HgQh1OyohgDLM2rIYx/B3h+wTw0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = NoticeOption;\nexport default NoticeOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoticeOption\");","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/notification/notices/NoticeOption.js"],"names":["React","useDispatch","useSelector","RiDeleteBinLine","GoCheck","DropdownCard","deleteNotice","readNotice","unreadNotice","getNotices","styles","NoticeOption","setIsShow","isShow","msg","setExiting","top","dispatch","auth","state","markHandler","isRead","includes","user","_id","deleteHandler","option_item","icon","text"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAAQC,eAAR,QAA8B,gBAA9B;AACA,SAAQC,OAAR,QAAsB,gBAAtB;AAEA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,YAAnC,EAAiDC,UAAjD,QAAmE,qCAAnE;AAEA,OAAOC,MAAP,MAAmB,2BAAnB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA,GAApB;AAAyBC,EAAAA,UAAzB;AAAqCC,EAAAA;AAArC,CAAD,KAA+C;AAAA;;AAChE,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AACA,QAAM;AAACiB,IAAAA;AAAD,MAAShB,WAAW,CAACiB,KAAK,IAAEA,KAAR,CAA1B;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACtBN,IAAAA,GAAG,CAACO,MAAJ,CAAWC,QAAX,CAAoBJ,IAAI,CAACK,IAAL,CAAUC,GAA9B,IAAqCP,QAAQ,CAACT,YAAY,CAACU,IAAD,EAAOJ,GAAP,CAAb,CAA7C,GAAyEG,QAAQ,CAACV,UAAU,CAACW,IAAD,EAAOJ,GAAP,CAAX,CAAjF;AACH,GAFD;;AAIA,QAAMW,aAAa,GAAG,MAAM;AACxB;AACAR,IAAAA,QAAQ,CAACX,YAAY,CAACY,IAAD,EAAOJ,GAAG,CAACU,GAAX,CAAb,CAAR,CAFwB,CAGxB;AACH,GAJD;;AAMA,sBACI,QAAC,YAAD;AAAc,IAAA,SAAS,EAAEZ,SAAzB;AAAoC,IAAA,MAAM,EAAEC,MAA5C;AAAoD,IAAA,KAAK,EAAC,KAA1D;AAAgE,IAAA,GAAG,EAAEG,GAAG,GAAC,GAAzE;AAAA,4BACI;AAAK,MAAA,OAAO,EAAEI,WAAd;AAA2B,MAAA,SAAS,EAAEV,MAAM,CAACgB,WAA7C;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,SAAS,EAAEhB,MAAM,CAACiB;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAEjB,MAAM,CAACkB,IAAvB;AAAA,kBAA8Bd,GAAG,CAACO,MAAJ,CAAWC,QAAX,CAAoBJ,IAAI,CAACK,IAAL,CAAUC,GAA9B,IAAsC,aAAtC,GAAsD;AAApF;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,OAAO,EAAEC,aAAd;AAA6B,MAAA,SAAS,EAAEf,MAAM,CAACgB,WAA/C;AAAA,8BACI,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAEhB,MAAM,CAACiB;AAAnC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAEjB,MAAM,CAACkB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA1BD;;GAAMjB,Y;UACeV,W,EACFC,W;;;KAFbS,Y;AA4BN,eAAeA,YAAf","sourcesContent":["import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport {RiDeleteBinLine} from 'react-icons/ri'\r\nimport {GoCheck} from 'react-icons/go'\r\n\r\nimport DropdownCard from '../../util/DropdownCard'\r\nimport { deleteNotice, readNotice, unreadNotice, getNotices } from '../../../store/actions/noticeAction'\r\n\r\nimport styles from './NoticeOption.module.css'\r\n\r\nconst NoticeOption = ({setIsShow, isShow, msg, setExiting, top}) => {\r\n    const dispatch = useDispatch()\r\n    const {auth} = useSelector(state=>state)\r\n\r\n    const markHandler = () => {\r\n        msg.isRead.includes(auth.user._id) ? dispatch(unreadNotice(auth, msg)) : dispatch(readNotice(auth, msg))\r\n    }\r\n\r\n    const deleteHandler = () => {\r\n        // setExiting(true)\r\n        dispatch(deleteNotice(auth, msg._id))\r\n        // dispatch(getNotices(auth))\r\n    }\r\n    \r\n    return (\r\n        <DropdownCard setIsShow={setIsShow} isShow={isShow} right='25%' top={top-150} >\r\n            <div onClick={markHandler} className={styles.option_item}  >\r\n                <GoCheck className={styles.icon}/>\r\n                <div className={styles.text}>{msg.isRead.includes(auth.user._id) ? `Mark unread` : `Mark read`}</div>\r\n            </div>      \r\n            <div onClick={deleteHandler} className={styles.option_item} >\r\n                <RiDeleteBinLine className={styles.icon}/>\r\n                <div className={styles.text}>Delete</div>\r\n            </div>\r\n        </DropdownCard>\r\n    )\r\n}\r\n\r\nexport default NoticeOption\r\n"]},"metadata":{},"sourceType":"module"}