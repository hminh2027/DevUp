{"ast":null,"code":"import { postAPI, getAPI, deleteAPI, patchAPI } from '../../apis/Axios';\nimport { createNotice } from './noticeAction';\nexport const createProject = (auth, body) => async dispatch => {\n  try {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        loading: true\n      }\n    });\n    const res = await postAPI('project', body, auth.token);\n    dispatch({\n      type: 'OPEN_PROJECT',\n      payload: res.data.newCode\n    });\n    dispatch({\n      type: 'CHANGE_TAB',\n      payload: 1\n    });\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        success: res.data.msg\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const editableProject = (auth, id) => async dispatch => {\n  try {\n    const res = await patchAPI(`project/${id}/changeEditable`, null, auth.token);\n    dispatch({\n      type: 'UPDATE_PROJECT',\n      payload: res.data.newCode\n    });\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        success: res.data.msg\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const openProject = project => dispatch => {\n  dispatch({\n    type: 'OPEN_PROJECT',\n    payload: project\n  });\n  dispatch({\n    type: 'CHANGE_TAB',\n    payload: 1\n  });\n};\nexport const renameProject = (auth, name, id) => async dispatch => {\n  try {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        loading: true\n      }\n    });\n    const res = await patchAPI(`project/${id}/rename`, {\n      name\n    }, auth.token);\n    dispatch({\n      type: 'RENAME_PROJECT',\n      payload: res.data.newCode\n    });\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        success: res.data.msg\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const saveProject = (auth, body, id) => async dispatch => {\n  try {\n    const res = await patchAPI(`project/${id}`, body, auth.token);\n    dispatch({\n      type: 'UPDATE_PROJECT',\n      payload: res.data.newCode\n    });\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        success: res.data.msg\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const deleteProject = (auth, id) => async dispatch => {\n  try {\n    const res = await deleteAPI(`project/${id}`, auth.token);\n    dispatch({\n      type: 'DELETE_OWN_PROJECT',\n      payload: res.data.deletedCode\n    });\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        success: res.data.msg\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const deleteReceivedProject = (auth, id) => async dispatch => {\n  try {\n    const res = await patchAPI(`project/${id}/received`, null, auth.token);\n    dispatch({\n      type: 'DELETE_SHARE_PROJECT',\n      payload: res.data.deletedCode\n    });\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        success: res.data.msg\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const getOwnProjects = auth => async dispatch => {\n  try {\n    dispatch({\n      type: 'LOADING_PROJECT',\n      payload: true\n    });\n    const res = await getAPI('project/own', auth.token);\n    dispatch({\n      type: 'GET_OWN_PROJECTS',\n      payload: res.data.codes\n    });\n    dispatch({\n      type: 'LOADING_PROJECT',\n      payload: false\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const getShareProjects = auth => async dispatch => {\n  try {\n    dispatch({\n      type: 'LOADING_PROJECT',\n      payload: true\n    });\n    const res = await getAPI('project/share', auth.token);\n    dispatch({\n      type: 'GET_SHARE_PROJECTS',\n      payload: res.data.codes\n    });\n    dispatch({\n      type: 'LOADING_PROJECT',\n      payload: false\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const shareProject = (receivers, id, auth, socket) => async dispatch => {\n  try {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        loading: true\n      }\n    });\n    const res = await postAPI(`project/${id}/share`, receivers, auth.token);\n    let msg = {\n      id: auth.user._id,\n      receivers: receivers,\n      url: auth.user._id,\n      text: 'share a project with you!',\n      type: 'profile',\n      body: '',\n      tag: 'PROJECT'\n    };\n    dispatch(createNotice(auth, msg, socket));\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        success: res.data.msg\n      }\n    });\n    dispatch({\n      type: 'UPDATE_OWN_PROJECT',\n      payload: res.data.code\n    });\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        loading: false\n      }\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/store/actions/projectAction.js"],"names":["postAPI","getAPI","deleteAPI","patchAPI","createNotice","createProject","auth","body","dispatch","type","payload","loading","res","token","data","newCode","success","msg","err","error","response","editableProject","id","openProject","project","renameProject","name","saveProject","deleteProject","deletedCode","deleteReceivedProject","getOwnProjects","codes","getShareProjects","shareProject","receivers","socket","user","_id","url","text","tag","code","console","log"],"mappings":"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","sourcesContent":["import {postAPI, getAPI, deleteAPI, patchAPI} from '../../apis/Axios'\r\nimport { createNotice } from './noticeAction'\r\n\r\nexport const createProject = (auth, body) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: 'ALERT', payload: {loading: true}})\r\n\r\n        const res = await postAPI('project', body, auth.token)\r\n\r\n        dispatch({type: 'OPEN_PROJECT', payload: res.data.newCode})\r\n        dispatch({type: 'CHANGE_TAB', payload: 1})\r\n        \r\n        dispatch({type: 'ALERT', payload: {success: res.data.msg}})\r\n\r\n    } catch (err) {       \r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}})\r\n    }\r\n}\r\n\r\nexport const editableProject = (auth, id) => async (dispatch) => {\r\n    try {\r\n        const res = await patchAPI(`project/${id}/changeEditable`, null, auth.token)\r\n        \r\n        dispatch({type: 'UPDATE_PROJECT', payload: res.data.newCode})\r\n        dispatch({type: 'ALERT', payload: {success: res.data.msg}})\r\n\r\n    } catch (err) {       \r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}})\r\n    }\r\n}\r\n\r\nexport const openProject = (project) => (dispatch) => {\r\n    dispatch({type: 'OPEN_PROJECT', payload: project})\r\n    dispatch({type: 'CHANGE_TAB', payload: 1})\r\n}\r\n\r\nexport const renameProject = (auth, name, id) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: 'ALERT', payload: {loading: true}})\r\n        const res = await patchAPI(`project/${id}/rename`, {name}, auth.token)\r\n\r\n        dispatch({type: 'RENAME_PROJECT', payload: res.data.newCode})\r\n        dispatch({type: 'ALERT', payload: {success: res.data.msg}})\r\n\r\n    } catch (err) {       \r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}})\r\n    }\r\n}\r\n\r\nexport const saveProject = (auth, body, id) => async (dispatch) => {\r\n    try {\r\n        const res = await patchAPI(`project/${id}`, body, auth.token)\r\n\r\n        dispatch({type: 'UPDATE_PROJECT', payload: res.data.newCode})\r\n        dispatch({type: 'ALERT', payload: {success: res.data.msg}})\r\n\r\n    } catch (err) {       \r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}})\r\n    }\r\n}\r\n\r\nexport const deleteProject = (auth, id) => async (dispatch) => {\r\n    try {\r\n        const res = await deleteAPI(`project/${id}`, auth.token)\r\n\r\n        dispatch({type: 'DELETE_OWN_PROJECT', payload: res.data.deletedCode})\r\n        dispatch({type: 'ALERT', payload: {success: res.data.msg}})\r\n\r\n    } catch (err) { \r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}})\r\n    }\r\n}\r\n\r\nexport const deleteReceivedProject = (auth, id) => async (dispatch) => {\r\n    try {\r\n        const res = await patchAPI(`project/${id}/received`, null,  auth.token)\r\n\r\n        dispatch({type: 'DELETE_SHARE_PROJECT', payload: res.data.deletedCode})\r\n        dispatch({type: 'ALERT', payload: {success: res.data.msg}})\r\n\r\n    } catch (err) { \r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}})\r\n    }\r\n}\r\n\r\nexport const getOwnProjects = (auth) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: 'LOADING_PROJECT', payload: true})\r\n        const res = await getAPI('project/own', auth.token)\r\n       \r\n        dispatch({type: 'GET_OWN_PROJECTS', payload: res.data.codes})\r\n        dispatch({type: 'LOADING_PROJECT', payload: false})\r\n\r\n    } catch (err) {       \r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}})\r\n    }\r\n}\r\n\r\nexport const getShareProjects = (auth) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: 'LOADING_PROJECT', payload: true})\r\n        const res = await getAPI('project/share', auth.token)\r\n       \r\n        dispatch({type: 'GET_SHARE_PROJECTS', payload: res.data.codes})\r\n        dispatch({type: 'LOADING_PROJECT', payload: false})\r\n\r\n    } catch (err) {       \r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}})\r\n    }\r\n}\r\n\r\nexport const shareProject = (receivers, id, auth, socket) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: 'ALERT', payload: {loading: true}})\r\n        const res = await postAPI(`project/${id}/share`, receivers, auth.token)\r\n\r\n        let msg = {\r\n            id: auth.user._id,\r\n            receivers: receivers,\r\n            url: auth.user._id,\r\n            text: 'share a project with you!',\r\n            type: 'profile',\r\n            body: '',\r\n            tag: 'PROJECT'\r\n        }\r\n\r\n        dispatch(createNotice(auth, msg, socket))\r\n\r\n        dispatch({type: 'ALERT', payload: {success: res.data.msg}})\r\n        dispatch({type: 'UPDATE_OWN_PROJECT', payload: res.data.code})\r\n        \r\n        dispatch({type: 'ALERT', payload: {loading: false}})\r\n\r\n    } catch(err) {\r\n        console.log(err)\r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}})\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}