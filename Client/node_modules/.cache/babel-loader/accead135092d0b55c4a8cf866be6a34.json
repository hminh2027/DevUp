{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\views\\\\Home\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPosts } from '../../store/actions/postAction';\nimport { useMediaQuery } from 'react-responsive';\nimport NavList from '../../components/home/left-side/NavList';\nimport Header from '../../components/header/Header';\nimport Status from '../../components/home/Status';\nimport RightSideBar from '../../components/home/RightSideBar';\nimport InfiniteList from '../../components/util/InfiniteList';\nimport Spinner from '../../assets/Spinner.png';\nimport styles from './Home.module.css';\nimport PostCard from '../../components/post/PostCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    auth,\n    post\n  } = useSelector(state => state);\n  useEffect(() => {\n    dispatch(getPosts(auth));\n  }, [auth]);\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1224px)'\n  });\n  const isTablet = useMediaQuery({\n    query: '(min-device-width : 768px) and (max-device-width: 1224px)'\n  });\n  const isMobile = useMediaQuery({\n    query: '(max-device-width : 480px)'\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: [isDesktop && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.leftside,\n          children: /*#__PURE__*/_jsxDEV(NavList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"inf_posts\",\n          className: styles.middle,\n          children: [/*#__PURE__*/_jsxDEV(Status, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), post.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.spinner_wrapper,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: Spinner,\n              alt: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(InfiniteList, {\n            action: \"GET_MORE_POSTS\",\n            api: \"post\",\n            list: post.posts,\n            elem: \"inf_posts\",\n            children: post.posts.length > 0 ? post.posts.map(e => /*#__PURE__*/_jsxDEV(PostCard, {\n              post: e\n            }, e._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.no_post,\n              children: \"No post available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), isDesktop && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.rightside,\n          children: /*#__PURE__*/_jsxDEV(RightSideBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"/qRP2Hhjz63Eu4RUqZyQuBeKl7U=\", false, function () {\n  return [useDispatch, useSelector, useMediaQuery, useMediaQuery, useMediaQuery];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/views/Home/Home.js"],"names":["React","useEffect","useState","useDispatch","useSelector","getPosts","useMediaQuery","NavList","Header","Status","RightSideBar","InfiniteList","Spinner","styles","PostCard","Home","dispatch","auth","post","state","isDesktop","query","isTablet","isMobile","content","container","leftside","middle","loading","spinner_wrapper","posts","length","map","e","_id","no_post","rightside"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAAQC,QAAR,QAAuB,gCAAvB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,OAAOC,OAAP,MAAoB,yCAApB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AAEA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,gCAArB;;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAM;AAACc,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAed,WAAW,CAACe,KAAK,IAAEA,KAAR,CAAhC;AAEAlB,EAAAA,SAAS,CAAC,MAAI;AACVe,IAAAA,QAAQ,CAACX,QAAQ,CAACY,IAAD,CAAT,CAAR;AACH,GAFQ,EAEP,CAACA,IAAD,CAFO,CAAT;AAIA,QAAMG,SAAS,GAAGd,aAAa,CAAC;AAAEe,IAAAA,KAAK,EAAE;AAAT,GAAD,CAA/B;AACA,QAAMC,QAAQ,GAAGhB,aAAa,CAAC;AAAEe,IAAAA,KAAK,EAAE;AAAT,GAAD,CAA9B;AACA,QAAME,QAAQ,GAAGjB,aAAa,CAAC;AAAEe,IAAAA,KAAK,EAAE;AAAT,GAAD,CAA9B;AAEA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAER,MAAM,CAACW,OAAvB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAEX,MAAM,CAACY,SAAvB;AAAA,mBACKL,SAAS,iBAAI;AAAK,UAAA,SAAS,EAAEP,MAAM,CAACa,QAAvB;AAAA,iCACV,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADU;AAAA;AAAA;AAAA;AAAA,gBADlB,eAII;AAAK,UAAA,EAAE,EAAC,WAAR;AAAoB,UAAA,SAAS,EAAEb,MAAM,CAACc,MAAtC;AAAA,kCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKT,IAAI,CAACU,OAAL,gBACD;AAAK,YAAA,SAAS,EAAEf,MAAM,CAACgB,eAAvB;AAAA,mCACI;AAAK,cAAA,GAAG,EAAEjB,OAAV;AAAmB,cAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADC,gBAKD,QAAC,YAAD;AAAc,YAAA,MAAM,EAAC,gBAArB;AAAsC,YAAA,GAAG,EAAC,MAA1C;AAAiD,YAAA,IAAI,EAAEM,IAAI,CAACY,KAA5D;AAAmE,YAAA,IAAI,EAAC,WAAxE;AAAA,sBACKZ,IAAI,CAACY,KAAL,CAAWC,MAAX,GAAkB,CAAlB,GAAoBb,IAAI,CAACY,KAAL,CAAWE,GAAX,CAAeC,CAAC,iBACjC,QAAC,QAAD;AAAsB,cAAA,IAAI,EAAEA;AAA5B,eAAeA,CAAC,CAACC,GAAjB;AAAA;AAAA;AAAA;AAAA,oBADiB,CAApB,gBAID;AAAK,cAAA,SAAS,EAAErB,MAAM,CAACsB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAoBKf,SAAS,iBAAI;AAAK,UAAA,SAAS,EAAEP,MAAM,CAACuB,SAAvB;AAAA,iCACV,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADU;AAAA;AAAA;AAAA;AAAA,gBApBlB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AA+BH;;GA3CuBrB,I;UACHZ,W,EACIC,W,EAMHE,a,EACDA,a,EACAA,a;;;KAVGS,I","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport {getPosts} from '../../store/actions/postAction'\r\nimport { useMediaQuery } from 'react-responsive'\r\n\r\nimport NavList from '../../components/home/left-side/NavList'\r\nimport Header from '../../components/header/Header'\r\nimport Status from '../../components/home/Status'\r\nimport RightSideBar from '../../components/home/RightSideBar'\r\nimport InfiniteList from '../../components/util/InfiniteList'\r\n\r\nimport Spinner from '../../assets/Spinner.png'\r\nimport styles from './Home.module.css'\r\nimport PostCard from '../../components/post/PostCard'\r\n\r\nexport default function Home() {\r\n    const dispatch = useDispatch();\r\n    const {auth, post} = useSelector(state=>state);\r\n\r\n    useEffect(()=>{\r\n        dispatch(getPosts(auth));\r\n    },[auth])\r\n\r\n    const isDesktop = useMediaQuery({ query: '(min-width: 1224px)' })\r\n    const isTablet = useMediaQuery({ query: '(min-device-width : 768px) and (max-device-width: 1224px)' })\r\n    const isMobile = useMediaQuery({ query: '(max-device-width : 480px)'})\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <div className={styles.content}>\r\n                <div className={styles.container}>\r\n                    {isDesktop && <div className={styles.leftside}>\r\n                        <NavList/>\r\n                    </div> }\r\n                    <div id='inf_posts' className={styles.middle}>\r\n                        <Status/>\r\n                        {post.loading?\r\n                        <div className={styles.spinner_wrapper}>\r\n                            <img src={Spinner} alt='spinner' />\r\n                        </div>                      \r\n                        :\r\n                        <InfiniteList action='GET_MORE_POSTS' api='post' list={post.posts} elem='inf_posts' >\r\n                            {post.posts.length>0?post.posts.map(e=>(\r\n                                <PostCard key={e._id} post={e} />\r\n                            ))\r\n                            :\r\n                            <div className={styles.no_post}>No post available</div>}\r\n                        </InfiniteList>\r\n                        }                       \r\n                    </div>\r\n                    {isDesktop && <div className={styles.rightside}>\r\n                        <RightSideBar/>           \r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}