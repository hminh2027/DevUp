{"ast":null,"code":"import { postAPI, deleteAPI, getAPI, patchAPI } from '../../apis/Axios';\nexport const createNotice = (auth, msg, socket) => async dispatch => {\n  try {\n    console.log('vkl');\n    const res = await postAPI(`notice`, msg, auth.token);\n    socket.emit('createNotice', { ...res.data.notice,\n      user: {\n        username: auth.user.username,\n        avatar: auth.user.avatar\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: err.response.data.msg\n    });\n  }\n};\nexport const deleteNotice = (auth, msg, notices) => async dispatch => {\n  try {\n    const res = await deleteAPI(`notice/${msg.id}?url=${msg.url}`, auth.token);\n    let newNotices = notices.filter(n => n.id !== msg.id);\n    dispatch({\n      type: 'DELETE_NOTICE',\n      payload: newNotices\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: err.response.data.msg\n    });\n  }\n};\nexport const deleteNotices = auth => async dispatch => {\n  try {\n    const res = await deleteAPI(`notice`, auth.token);\n    dispatch({\n      type: 'DELETE_NOTICE',\n      payload: []\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: err.response.data.msg\n    });\n  }\n};\nexport const unreadNotice = (auth, msg, notices) => async dispatch => {\n  try {\n    const res = await patchAPI(`notice/unread/${msg.id}`, null, auth.token);\n    const newNotices = notices.map(n => n.id === res.data.notice.id ? res.data.notice : n);\n    dispatch({\n      type: 'UPDATE_NOTICE',\n      payload: newNotices\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: err.response.data.msg\n    });\n  }\n};\nexport const readNotice = (auth, msg, notices) => async dispatch => {\n  try {\n    const res = await patchAPI(`notice/${msg.id}`, null, auth.token);\n    const newNotices = notices.map(n => n.id === res.data.notice.id ? res.data.notice : n);\n    dispatch({\n      type: 'UPDATE_NOTICE',\n      payload: newNotices\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: err.response.data.msg\n    });\n  }\n};\nexport const readNotices = auth => async dispatch => {\n  try {\n    const res = await patchAPI('notice', null, auth.token);\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: err.response.data.msg\n    });\n  }\n};\nexport const getNotices = auth => async dispatch => {\n  try {\n    const res = await getAPI(`notice`, auth.token);\n    dispatch({\n      type: 'GET_NOTICES',\n      payload: res.data.notices\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: err.response.data\n    });\n  }\n};","map":{"version":3,"sources":["D:/Project Web/PROJECT 12 (Only MERN)/Client/client/src/store/actions/noticeAction.js"],"names":["postAPI","deleteAPI","getAPI","patchAPI","createNotice","auth","msg","socket","dispatch","console","log","res","token","emit","data","notice","user","username","avatar","err","type","payload","response","deleteNotice","notices","id","url","newNotices","filter","n","deleteNotices","unreadNotice","map","readNotice","readNotices","getNotices"],"mappings":"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","sourcesContent":["import {postAPI, deleteAPI, getAPI, patchAPI} from '../../apis/Axios'\r\n\r\nexport const createNotice = (auth, msg, socket) => async (dispatch) => {\r\n  try {\r\n    console.log('vkl')\r\n    const res = await postAPI(`notice`, msg, auth.token);\r\n\r\n    socket.emit('createNotice', {\r\n      ...res.data.notice,\r\n      user: {\r\n        username: auth.user.username,\r\n        avatar: auth.user.avatar\r\n      }\r\n    })\r\n\r\n  }   catch (err) {\r\n      dispatch({type: 'ALERT', payload: err.response.data.msg});\r\n  }\r\n}\r\n\r\nexport const deleteNotice = (auth, msg, notices) => async (dispatch) => {\r\n  try {\r\n    const res = await deleteAPI(`notice/${msg.id}?url=${msg.url}`, auth.token);\r\n    \r\n    let newNotices = notices.filter(n=>n.id!==msg.id);\r\n    \r\n    dispatch({type: 'DELETE_NOTICE', payload: newNotices});\r\n\r\n\r\n  } catch(err) {\r\n    dispatch({type: 'ALERT', payload: err.response.data.msg});\r\n  }\r\n}\r\n\r\nexport const deleteNotices = (auth) => async (dispatch) => {\r\n  try {\r\n    const res = await deleteAPI(`notice`, auth.token);\r\n    dispatch({type: 'DELETE_NOTICE', payload: []});\r\n\r\n  } catch(err) {\r\n    dispatch({type: 'ALERT', payload: err.response.data.msg});\r\n  }\r\n}\r\n\r\nexport const unreadNotice = (auth, msg, notices) => async (dispatch) => {\r\n  try {\r\n    const res = await patchAPI(`notice/unread/${msg.id}`, null, auth.token);\r\n\r\n    const newNotices = notices.map(n=>n.id===res.data.notice.id?res.data.notice:n);\r\n    \r\n    dispatch({type: 'UPDATE_NOTICE' , payload: newNotices});\r\n\r\n  } catch(err) {\r\n    dispatch({type: 'ALERT', payload: err.response.data.msg});\r\n  }\r\n}\r\n\r\nexport const readNotice = (auth, msg, notices) => async (dispatch) => {\r\n  try {\r\n    const res = await patchAPI(`notice/${msg.id}`, null, auth.token);\r\n\r\n    const newNotices = notices.map(n=>n.id===res.data.notice.id?res.data.notice:n);\r\n    \r\n    dispatch({type: 'UPDATE_NOTICE' , payload: newNotices});\r\n\r\n  } catch(err) {\r\n    dispatch({type: 'ALERT', payload: err.response.data.msg});\r\n  }\r\n}\r\n\r\nexport const readNotices = (auth) => async (dispatch) => {\r\n  try {\r\n    const res = await patchAPI('notice', null, auth.token);\r\n\r\n\r\n  } catch(err) {\r\n    dispatch({type: 'ALERT', payload: err.response.data.msg});\r\n  }\r\n}\r\n\r\nexport const getNotices = (auth) => async (dispatch) => {\r\n  try {\r\n    const res = await getAPI(`notice`, auth.token);\r\n    dispatch({type: 'GET_NOTICES' , payload: res.data.notices})\r\n\r\n  } catch(err) {\r\n    dispatch({type: 'ALERT', payload: err.response.data})\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}