{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\code\\\\projectManager\\\\ProjectCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteProject, openProject } from '../../../store/actions/projectAction';\nimport { AiOutlineEdit, AiOutlineShareAlt, AiOutlineDelete } from 'react-icons/ai';\nimport { MdOpenInNew } from 'react-icons/md';\nimport styles from './ProjectCard.module.css';\nimport Modal from '../../util/Modal';\nimport EditProjectModal from '../../modal/EditProjectModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectCard = ({\n  project\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    auth\n  } = useSelector(state => state);\n  const [isShowEditModal, setShowEditModal] = useState(false);\n\n  const editHandler = () => {\n    dispatch({\n      type: 'MODAL',\n      payload: true\n    });\n    setShowEditModal(true);\n  };\n\n  const openHandler = () => {\n    dispatch(openProject(project));\n  };\n\n  const deleteHandler = () => {\n    dispatch(deleteProject(auth, project._id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundImage: `url(${project.author.avatar})`\n    },\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.infor,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.name,\n          children: project.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.author,\n          children: [\"Author: \", project.author.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.btn_group,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: editHandler,\n          className: styles.icon_wrapper,\n          children: /*#__PURE__*/_jsxDEV(AiOutlineEdit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 80\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: deleteHandler,\n          className: styles.icon_wrapper,\n          children: /*#__PURE__*/_jsxDEV(AiOutlineDelete, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 82\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.icon_wrapper,\n          children: /*#__PURE__*/_jsxDEV(AiOutlineShareAlt, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: openHandler,\n      className: styles.open,\n      children: /*#__PURE__*/_jsxDEV(MdOpenInNew, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), isShowEditModal && /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(Modal, {\n      setIsEdit: setShowEditModal,\n      width: \"30%\",\n      children: /*#__PURE__*/_jsxDEV(EditProjectModal, {\n        setIsEdit: setShowEditModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), portal)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProjectCard, \"Knu+9Xiu3ifPaEkDTEmqpKI843g=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ProjectCard;\nexport default ProjectCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectCard\");","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/code/projectManager/ProjectCard.js"],"names":["React","useState","ReactDOM","useDispatch","useSelector","deleteProject","openProject","AiOutlineEdit","AiOutlineShareAlt","AiOutlineDelete","MdOpenInNew","styles","Modal","EditProjectModal","ProjectCard","project","dispatch","auth","state","isShowEditModal","setShowEditModal","editHandler","type","payload","openHandler","deleteHandler","_id","backgroundImage","author","avatar","container","placeholder","content","infor","name","username","btn_group","icon_wrapper","open","createPortal","portal"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { deleteProject, openProject } from '../../../store/actions/projectAction'\r\n\r\nimport { AiOutlineEdit, AiOutlineShareAlt, AiOutlineDelete} from 'react-icons/ai'\r\nimport {MdOpenInNew} from 'react-icons/md'\r\n\r\nimport styles from './ProjectCard.module.css'\r\nimport Modal from '../../util/Modal'\r\nimport EditProjectModal from '../../modal/EditProjectModal'\r\n\r\nconst ProjectCard = ({project}) => {\r\n    const dispatch = useDispatch()\r\n    const {auth} = useSelector(state=>state)\r\n\r\n    const [isShowEditModal, setShowEditModal] = useState(false);\r\n\r\n    const editHandler = () => {\r\n        dispatch({type: 'MODAL', payload: true});\r\n        setShowEditModal(true)\r\n    }\r\n\r\n    const openHandler = () => {\r\n        dispatch(openProject(project))\r\n    }\r\n\r\n    const deleteHandler = () => {\r\n        dispatch(deleteProject(auth, project._id))\r\n    }\r\n\r\n    return (\r\n        <div style={{backgroundImage:`url(${project.author.avatar})`}} className={styles.container}>\r\n            <div className={styles.placeholder}></div>\r\n            <div className={styles.content}>\r\n                <div className={styles.infor}>\r\n                    <div className={styles.name}>{project.name}</div>\r\n                    <div className={styles.author}>Author: {project.author.username}</div>\r\n                </div>\r\n                <div className={styles.btn_group}>\r\n                    <div onClick={editHandler} className={styles.icon_wrapper}><AiOutlineEdit/></div>\r\n                    <div onClick={deleteHandler} className={styles.icon_wrapper}><AiOutlineDelete/></div>\r\n                    <div className={styles.icon_wrapper}><AiOutlineShareAlt/></div>\r\n                </div>\r\n            </div>\r\n            <div onClick={openHandler} className={styles.open}><MdOpenInNew/></div>\r\n            {isShowEditModal && ReactDOM.createPortal(\r\n            <Modal setIsEdit={setShowEditModal} width='30%' >\r\n                <EditProjectModal setIsEdit={setShowEditModal} />\r\n            </Modal>\r\n            , portal)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectCard\r\n"]},"metadata":{},"sourceType":"module"}