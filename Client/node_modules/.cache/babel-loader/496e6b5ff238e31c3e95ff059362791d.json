{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\code\\\\projectManager\\\\ProjectFolder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useMediaQuery } from 'react-responsive';\nimport { FiPlusCircle } from 'react-icons/fi';\nimport { AiOutlineReload } from 'react-icons/ai';\nimport NewProjectModal from '../../modal/NewProjectModal';\nimport Modal from '../../util/Modal';\nimport ProjectCard from './ProjectCard';\nimport styles from './ProjectFolder.module.css';\nimport GridGallery from '../../util/GridGallery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectFolder = ({\n  projects,\n  name,\n  showAdd\n}) => {\n  _s();\n\n  const [isShowNewModal, setShowNewModal] = useState(false);\n  const [prjs, setPrjs] = useState([]);\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1224px)'\n  });\n  useEffect(() => {\n    let projectTempArr = [];\n    {\n      showAdd && projectTempArr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setShowNewModal(true),\n        className: styles.add_card,\n        children: /*#__PURE__*/_jsxDEV(FiPlusCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 110\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 41\n      }, this));\n    }\n    projects.map(e => {\n      projectTempArr.push( /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: e\n      }, e._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 37\n      }, this));\n      projectTempArr.push( /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: e\n      }, e._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 37\n      }, this));\n      projectTempArr.push( /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: e\n      }, e._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 37\n      }, this));\n      projectTempArr.push( /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: e\n      }, e._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 37\n      }, this));\n      projectTempArr.push( /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: e\n      }, e._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 37\n      }, this));\n      projectTempArr.push( /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: e\n      }, e._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 37\n      }, this));\n      projectTempArr.push( /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: e\n      }, e._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 37\n      }, this));\n      projectTempArr.push( /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: e\n      }, e._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 37\n      }, this));\n      projectTempArr.push( /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: e\n      }, e._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 37\n      }, this));\n      projectTempArr.push( /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: e\n      }, e._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 37\n      }, this));\n      projectTempArr.push( /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: e\n      }, e._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 37\n      }, this));\n    });\n    setPrjs(projectTempArr);\n  }, [projects]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.heading,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.title,\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.icon_wrapper,\n        children: /*#__PURE__*/_jsxDEV(AiOutlineReload, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: /*#__PURE__*/_jsxDEV(GridGallery, {\n        length: \"9\",\n        list: prjs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), isShowNewModal && /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(Modal, {\n      setIsEdit: setShowNewModal,\n      width: isDesktop ? '30%' : '100%',\n      children: /*#__PURE__*/_jsxDEV(NewProjectModal, {\n        setIsEdit: setShowNewModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), portal)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProjectFolder, \"sHgnmN9PltaC84hsxHAIeiQYHlM=\", false, function () {\n  return [useMediaQuery];\n});\n\n_c = ProjectFolder;\nexport default ProjectFolder;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectFolder\");","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/code/projectManager/ProjectFolder.js"],"names":["React","useEffect","useState","ReactDOM","useMediaQuery","FiPlusCircle","AiOutlineReload","NewProjectModal","Modal","ProjectCard","styles","GridGallery","ProjectFolder","projects","name","showAdd","isShowNewModal","setShowNewModal","prjs","setPrjs","isDesktop","query","projectTempArr","push","add_card","map","e","_id","container","heading","title","icon_wrapper","content","createPortal","portal"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { useMediaQuery } from 'react-responsive'\r\n\r\nimport {FiPlusCircle} from 'react-icons/fi'\r\nimport {AiOutlineReload} from 'react-icons/ai'\r\nimport NewProjectModal from '../../modal/NewProjectModal'\r\nimport Modal from '../../util/Modal'\r\n\r\nimport ProjectCard from './ProjectCard'\r\n\r\nimport styles from './ProjectFolder.module.css'\r\nimport GridGallery from '../../util/GridGallery'\r\n\r\nconst ProjectFolder = ({projects, name, showAdd}) => {\r\n\r\n    const [isShowNewModal, setShowNewModal] = useState(false)\r\n    const [prjs, setPrjs] = useState([])\r\n\r\n    const isDesktop = useMediaQuery({ query: '(min-width: 1224px)' })\r\n\r\n    useEffect(() => {\r\n        let projectTempArr = []\r\n        \r\n        {showAdd && projectTempArr.push(<div onClick={()=>setShowNewModal(true)} className={styles.add_card}><FiPlusCircle/></div>)}\r\n\r\n        projects.map(e => {\r\n                projectTempArr.push(<ProjectCard key={e._id} project={e} />)\r\n                projectTempArr.push(<ProjectCard key={e._id} project={e} />)\r\n                projectTempArr.push(<ProjectCard key={e._id} project={e} />)\r\n                projectTempArr.push(<ProjectCard key={e._id} project={e} />)\r\n                projectTempArr.push(<ProjectCard key={e._id} project={e} />)\r\n                projectTempArr.push(<ProjectCard key={e._id} project={e} />)\r\n                projectTempArr.push(<ProjectCard key={e._id} project={e} />)\r\n                projectTempArr.push(<ProjectCard key={e._id} project={e} />)\r\n                projectTempArr.push(<ProjectCard key={e._id} project={e} />)\r\n                projectTempArr.push(<ProjectCard key={e._id} project={e} />)\r\n                projectTempArr.push(<ProjectCard key={e._id} project={e} />)\r\n        })\r\n        \r\n        setPrjs(projectTempArr)\r\n\r\n    }, [projects])\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.heading}>\r\n                <div className={styles.title}>{name}</div>\r\n                <div className={styles.icon_wrapper}><AiOutlineReload/></div>\r\n            </div>\r\n            <div className={styles.content}>\r\n                <GridGallery length='9' list={prjs} />\r\n            </div>\r\n\r\n            {isShowNewModal && ReactDOM.createPortal(\r\n            <Modal setIsEdit={setShowNewModal} width={isDesktop ? '30%': '100%'} >\r\n                <NewProjectModal setIsEdit={setShowNewModal} />\r\n            </Modal>\r\n            , portal)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectFolder\r\n"]},"metadata":{},"sourceType":"module"}