{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\post\\\\comment\\\\CommentCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport RoundWrapper from '../../util/RoundWrapper';\nimport styles from './CommentCard.module.css';\nimport ContentEditable from \"react-contenteditable\";\nimport moment from 'moment';\nimport { CgMoreAlt } from 'react-icons/cg';\nimport CommentOption from './CommentOption';\nimport { updateComment } from '../../../store/actions/commentAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentCard = ({\n  post,\n  comment\n}) => {\n  _s();\n\n  const ref = useRef();\n  const dispatch = useDispatch();\n  const [isShowOption, setShowOption] = useState(false);\n  const [body, setBody] = useState('');\n  const [showMore, setShowMore] = useState(false);\n  const [isLong, setIsLong] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const [onReply, setOnReply] = useState(false);\n  const [onSubmit, setOnSubmit] = useState(false);\n  const {\n    auth\n  } = useSelector(state => state);\n  useEffect(() => {\n    // Function to check if click outside the object\n    const checkIfClickOutside = e => {\n      if (isShowOption && ref.current && !ref.current.contains(e.target)) setShowOption(false);\n    }; // Set event 'when click' trigger\n\n\n    document.addEventListener(\"mousedown\", checkIfClickOutside);\n    return () => {\n      // Clean the event\n      document.removeEventListener(\"mousedown\", checkIfClickOutside);\n    };\n  }, [isShowOption]);\n  useEffect(() => {\n    if (onSubmit) submitHandler();\n  }, [onSubmit]);\n  useEffect(() => {\n    setBody(comment.body);\n  }, [comment.body, isEdit]);\n  useEffect(() => {\n    if (body && body.length > 250) {\n      setIsLong(true);\n      setShowMore(true);\n    } else setIsLong(false);\n  }, [body]);\n\n  const submitHandler = () => {\n    // dispatch(updateComment(auth, body, post, comment));\n    console.log(body);\n    setOnSubmit(false);\n  };\n\n  const checkHandler = e => {\n    if (e.charCode == 13) {\n      e.preventDefault();\n      setOnSubmit(true);\n    }\n  }; // useEffect(()=>{\n  //     console.log(body)\n  // },[body])\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.cmt_wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.avatar,\n      children: /*#__PURE__*/_jsxDEV(RoundWrapper, {\n        diameter: \"50px\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: comment.user.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.name,\n        children: comment.user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.text,\n        children: [isEdit ? /*#__PURE__*/_jsxDEV(ContentEditable, {\n          className: styles.editable,\n          onKeyPress: checkHandler,\n          spellCheck: \"false\",\n          onChange: e => setBody(e.target.value),\n          html: body,\n          tagName: \"label\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this) : isLong && showMore ? `${body.slice(0, 250)}... ` : body.trim(), isLong && (showMore ? /*#__PURE__*/_jsxDEV(\"label\", {\n          onClick: () => setShowMore(false),\n          className: styles.toggle_text,\n          children: \"[show more]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n          onClick: () => setShowMore(true),\n          className: styles.toggle_text,\n          children: \"[hidden]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)), isEdit && /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setIsEdit(false),\n          className: styles.cancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), (auth.user._id === post.user._id || auth.user._id === comment.user._id) && /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: ref,\n        style: {\n          opacity: `${isShowOption ? '1' : '0'}`\n        },\n        onClick: () => setShowOption(!isShowOption),\n        className: styles.option_btn,\n        children: [/*#__PURE__*/_jsxDEV(CgMoreAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), isShowOption && /*#__PURE__*/_jsxDEV(CommentOption, {\n          post: post,\n          setIsEdit: setIsEdit,\n          comment: comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.time,\n      children: moment(post.createdAt).fromNow().replace(/(ago)+/g, '')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CommentCard, \"g8kRXd5Hwe8M7tooWF3C6234TJ8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CommentCard;\nexport default CommentCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentCard\");","map":{"version":3,"sources":["D:/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/post/comment/CommentCard.js"],"names":["React","useEffect","useState","useRef","useDispatch","useSelector","RoundWrapper","styles","ContentEditable","moment","CgMoreAlt","CommentOption","updateComment","CommentCard","post","comment","ref","dispatch","isShowOption","setShowOption","body","setBody","showMore","setShowMore","isLong","setIsLong","isEdit","setIsEdit","onReply","setOnReply","onSubmit","setOnSubmit","auth","state","checkIfClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","submitHandler","length","console","log","checkHandler","charCode","preventDefault","cmt_wrapper","avatar","user","content","name","username","text","editable","value","slice","trim","toggle_text","cancel","_id","opacity","option_btn","time","createdAt","fromNow","replace"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport RoundWrapper from '../../util/RoundWrapper'\r\nimport styles from './CommentCard.module.css'\r\nimport ContentEditable from \"react-contenteditable\";\r\nimport moment from 'moment'\r\nimport {CgMoreAlt} from 'react-icons/cg'\r\nimport CommentOption from './CommentOption'\r\nimport { updateComment } from '../../../store/actions/commentAction';\r\n\r\nconst CommentCard = ({post, comment}) => {\r\n    const ref = useRef();\r\n    const dispatch = useDispatch();\r\n\r\n    const [isShowOption, setShowOption] = useState(false);\r\n    const [body, setBody] = useState('');\r\n    const [showMore, setShowMore] = useState(false);\r\n    const [isLong, setIsLong] = useState(false);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [onReply, setOnReply] = useState(false);\r\n    const [onSubmit, setOnSubmit] = useState(false);\r\n\r\n    const {auth} = useSelector(state=>state);\r\n\r\n    useEffect(()=>{\r\n        // Function to check if click outside the object\r\n        const checkIfClickOutside = e => {\r\n            if(isShowOption && ref.current &&!ref.current.contains(e.target)) setShowOption(false); \r\n        }\r\n        // Set event 'when click' trigger\r\n        document.addEventListener(\"mousedown\", checkIfClickOutside)\r\n        return () => {\r\n            // Clean the event\r\n            document.removeEventListener(\"mousedown\", checkIfClickOutside)\r\n        }\r\n    },[isShowOption]);\r\n\r\n    useEffect(()=>{\r\n        if(onSubmit) submitHandler();\r\n    },[onSubmit]);\r\n    \r\n    useEffect(()=>{\r\n        setBody(comment.body);\r\n    },[comment.body, isEdit])\r\n\r\n    useEffect(()=> {\r\n        if(body && body.length > 250) {\r\n            setIsLong(true);\r\n            setShowMore(true);\r\n        }\r\n        else setIsLong(false);\r\n    },[body])\r\n\r\n    const submitHandler = () => {\r\n        // dispatch(updateComment(auth, body, post, comment));\r\n        console.log(body);\r\n        setOnSubmit(false);\r\n    }\r\n\r\n    const checkHandler = (e) => {\r\n        if(e.charCode == 13) {\r\n            e.preventDefault();\r\n            setOnSubmit(true);\r\n        }\r\n    }\r\n\r\n    // useEffect(()=>{\r\n    //     console.log(body)\r\n\r\n    // },[body])\r\n\r\n    return (\r\n        <div className={styles.cmt_wrapper}>\r\n            <div className={styles.avatar}>\r\n                <RoundWrapper diameter='50px' >\r\n                    <img src={comment.user.avatar} />\r\n                </RoundWrapper>\r\n            </div>\r\n            \r\n            <div className={styles.content}>\r\n                <div className={styles.name}>{comment.user.username}</div>\r\n                <div className={styles.text}>\r\n                    {isEdit ? \r\n                    <ContentEditable className={styles.editable} onKeyPress={checkHandler} spellCheck='false' onChange={e=>setBody(e.target.value)} html={body} tagName=\"label\" />       \r\n                     : \r\n                    isLong && showMore ?\r\n                    `${body.slice(0,250)}... ` : \r\n                    body.trim()\r\n                    }\r\n                    {isLong && (showMore ? \r\n                    <label onClick={()=>setShowMore(false)} className={styles.toggle_text}>[show more]</label> : \r\n                    <label onClick={()=>setShowMore(true)} className={styles.toggle_text}>[hidden]</label>\r\n                    )}\r\n                    {isEdit && <div onClick={()=>setIsEdit(false)} className={styles.cancel}>Cancel</div>}\r\n                </div>\r\n                {(auth.user._id === post.user._id || auth.user._id ===  comment.user._id) && \r\n                <div ref={ref} style={{opacity: `${isShowOption ? '1' : '0'}`}} onClick={()=>setShowOption(!isShowOption)} className={styles.option_btn}>\r\n                    <CgMoreAlt/>\r\n                    {isShowOption && <CommentOption post={post} setIsEdit={setIsEdit} comment={comment} />}\r\n                </div>\r\n                }\r\n            </div>\r\n            <div className={styles.time}>{moment(post.createdAt).fromNow().replace(/(ago)+/g , '')}</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentCard\r\n"]},"metadata":{},"sourceType":"module"}