{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\code\\\\Editor.js\";\nimport React, { useState } from 'react';\nimport { Controlled } from 'react-codemirror2';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/mode/xml/xml';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/css/css';\nimport styles from './Editor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Editor = ({\n  language,\n  value,\n  name,\n  onChange,\n  icon,\n  labelColor,\n  textColor\n}) => {\n  function handleChange(editor, data, value) {\n    onChange(value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `editor-container ${open ? '' : 'collapsed'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: labelColor,\n        color: textColor\n      },\n      className: styles.name_display,\n      children: [icon, name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controlled, {\n      onBeforeChange: handleChange,\n      value: value,\n      className: \"editor\",\n      options: {\n        lineWrapping: true,\n        lint: true,\n        mode: language,\n        theme: 'material',\n        lineNumbers: true,\n        scrollbarStyle: null,\n        autocorrect: true,\n        inputStyle: 'input'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/code/Editor.js"],"names":["React","useState","Controlled","styles","Editor","language","value","name","onChange","icon","labelColor","textColor","handleChange","editor","data","open","backgroundColor","color","name_display","lineWrapping","lint","mode","theme","lineNumbers","scrollbarStyle","autocorrect","inputStyle"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAAQC,UAAR,QAAyB,mBAAzB;AAEA,OAAO,+BAAP;AACA,OAAO,+BAAP;AACA,OAAO,yBAAP;AACA,OAAO,uCAAP;AACA,OAAO,yBAAP;AAEA,OAAOC,MAAP,MAAmB,cAAnB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA,IAAlB;AAAwBC,EAAAA,QAAxB;AAAkCC,EAAAA,IAAlC;AAAwCC,EAAAA,UAAxC;AAAoDC,EAAAA;AAApD,CAAD,KAAoE;AAE/E,WAASC,YAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCR,KAApC,EAA2C;AACvCE,IAAAA,QAAQ,CAACF,KAAD,CAAR;AACD;;AAEH,sBACA;AAAK,IAAA,SAAS,EAAG,oBAAmBS,IAAI,GAAG,EAAH,GAAQ,WAAY,EAA5D;AAAA,4BACE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAACN,UAAjB;AAA6BO,QAAAA,KAAK,EAAEN;AAApC,OAAZ;AAA4D,MAAA,SAAS,EAAER,MAAM,CAACe,YAA9E;AAAA,iBACGT,IADH,EAEGF,IAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,UAAD;AACE,MAAA,cAAc,EAAEK,YADlB;AAEE,MAAA,KAAK,EAAEN,KAFT;AAGE,MAAA,SAAS,EAAC,QAHZ;AAIE,MAAA,OAAO,EAAE;AACPa,QAAAA,YAAY,EAAE,IADP;AAEPC,QAAAA,IAAI,EAAE,IAFC;AAGPC,QAAAA,IAAI,EAAEhB,QAHC;AAIPiB,QAAAA,KAAK,EAAE,UAJA;AAKPC,QAAAA,WAAW,EAAE,IALN;AAMPC,QAAAA,cAAc,EAAE,IANT;AAOPC,QAAAA,WAAW,EAAE,IAPN;AAQPC,QAAAA,UAAU,EAAE;AARL;AAJX;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAuBH,CA7BD;;KAAMtB,M;AA+BN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport {Controlled} from 'react-codemirror2'\r\n\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\n\r\nimport styles from './Editor.css'\r\n\r\nconst Editor = ({language, value, name, onChange, icon, labelColor, textColor}) => {\r\n\r\n    function handleChange(editor, data, value) {\r\n        onChange(value)\r\n      }\r\n\r\n    return (\r\n    <div className={`editor-container ${open ? '' : 'collapsed'}`}>\r\n      <div style={{backgroundColor:labelColor, color: textColor}} className={styles.name_display}>\r\n        {icon}\r\n        {name}\r\n      </div>\r\n      <Controlled\r\n        onBeforeChange={handleChange}\r\n        value={value}\r\n        className='editor'\r\n        options={{\r\n          lineWrapping: true,\r\n          lint: true,\r\n          mode: language,\r\n          theme: 'material',\r\n          lineNumbers: true,\r\n          scrollbarStyle: null,\r\n          autocorrect: true,\r\n          inputStyle: 'input'\r\n        }}\r\n      />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Editor\r\n"]},"metadata":{},"sourceType":"module"}