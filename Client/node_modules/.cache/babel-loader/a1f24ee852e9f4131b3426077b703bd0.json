{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\post\\\\comment\\\\InputComment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Logo from '../../../assets/logo.png';\nimport RoundWrapper from '../../util/RoundWrapper';\nimport { createComment } from '../../../store/actions/commentAction';\nimport ContentEditable from 'react-contenteditable';\nimport styles from './InputComment.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputComment = ({\n  onReply,\n  setOnReply,\n  post\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [body, setBody] = useState('');\n  const [onSubmit, setOnSubmit] = useState(false);\n  const {\n    auth\n  } = useSelector(state => state);\n  const posts = useSelector(state => state.post.posts);\n  useEffect(() => {\n    if (onSubmit) submitHandler();\n  }, [onSubmit]); // useEffect(()=>{\n  //     if(onReply) setBody(``);\n  // },[body])\n\n  const submitHandler = () => {\n    const trimBody = body.trim();\n    console.log('c');\n    if (trimBody == '') console.log('none');\n    const newComment = {\n      body: trimBody,\n      user: auth.user,\n      createdAt: new Date().toISOString(),\n      reply: onReply && onReply._id,\n      tag: onReply && onReply.user\n    };\n    dispatch(createComment(auth, newComment, post, posts));\n    setBody('');\n    setOnSubmit(false);\n  };\n\n  const inputHandler = e => {\n    if (e.charCode == 13) {\n      e.preventDefault();\n      setOnSubmit(true);\n    }\n\n    if (e.charCode == 64) {\n      e.preventDefault();\n      setBody('tag ne');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.avatar,\n      children: /*#__PURE__*/_jsxDEV(RoundWrapper, {\n        diameter: \"50px\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: auth.user.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.input_wrapper,\n      children: /*#__PURE__*/_jsxDEV(ContentEditable, {\n        \"data-placeholder\": \"Write your comment here...\",\n        className: styles.input,\n        onKeyPress: inputHandler,\n        spellCheck: \"false\",\n        onChange: e => setBody(e.target.value),\n        html: body,\n        tagName: \"label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InputComment, \"M92U2zdydNQCgUs0QJCro6nQ4vM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = InputComment;\nexport default InputComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputComment\");","map":{"version":3,"sources":["D:/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/post/comment/InputComment.js"],"names":["React","useEffect","useState","useSelector","useDispatch","Logo","RoundWrapper","createComment","ContentEditable","styles","InputComment","onReply","setOnReply","post","dispatch","body","setBody","onSubmit","setOnSubmit","auth","state","posts","submitHandler","trimBody","trim","console","log","newComment","user","createdAt","Date","toISOString","reply","_id","tag","inputHandler","e","charCode","preventDefault","container","avatar","input_wrapper","input","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAAQC,aAAR,QAA4B,sCAA5B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,UAAV;AAAsBC,EAAAA;AAAtB,CAAD,KAAiC;AAAA;;AAClD,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAACiB,IAAAA;AAAD,MAAShB,WAAW,CAACiB,KAAK,IAAEA,KAAR,CAA1B;AACA,QAAMC,KAAK,GAAGlB,WAAW,CAACiB,KAAK,IAAEA,KAAK,CAACP,IAAN,CAAWQ,KAAnB,CAAzB;AAEApB,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGgB,QAAH,EAAaK,aAAa;AAC7B,GAFQ,EAEP,CAACL,QAAD,CAFO,CAAT,CAPkD,CAWlD;AACA;AACA;;AAEA,QAAMK,aAAa,GAAG,MAAM;AACxB,UAAMC,QAAQ,GAAGR,IAAI,CAACS,IAAL,EAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,QAAGH,QAAQ,IAAE,EAAb,EAAiBE,OAAO,CAACC,GAAR,CAAY,MAAZ;AACjB,UAAMC,UAAU,GAAG;AACfZ,MAAAA,IAAI,EAAEQ,QADS;AAEfK,MAAAA,IAAI,EAAET,IAAI,CAACS,IAFI;AAGfC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAHI;AAIfC,MAAAA,KAAK,EAAErB,OAAO,IAAIA,OAAO,CAACsB,GAJX;AAKfC,MAAAA,GAAG,EAAEvB,OAAO,IAAIA,OAAO,CAACiB;AALT,KAAnB;AAOAd,IAAAA,QAAQ,CAACP,aAAa,CAACY,IAAD,EAAOQ,UAAP,EAAmBd,IAAnB,EAAyBQ,KAAzB,CAAd,CAAR;AACAL,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAdD;;AAgBA,QAAMiB,YAAY,GAAIC,CAAD,IAAO;AACxB,QAAGA,CAAC,CAACC,QAAF,IAAc,EAAjB,EAAqB;AACjBD,MAAAA,CAAC,CAACE,cAAF;AACApB,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AACD,QAAGkB,CAAC,CAACC,QAAF,IAAc,EAAjB,EAAqB;AACjBD,MAAAA,CAAC,CAACE,cAAF;AACAtB,MAAAA,OAAO,CAAC,QAAD,CAAP;AACH;AACJ,GATD;;AAWA,sBACI;AAAM,IAAA,QAAQ,EAAEM,aAAhB;AAA+B,IAAA,SAAS,EAAEb,MAAM,CAAC8B,SAAjD;AAAA,4BACI;AAAK,MAAA,SAAS,EAAE9B,MAAM,CAAC+B,MAAvB;AAAA,6BACI,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAC,MAAvB;AAAA,+BACI;AAAK,UAAA,GAAG,EAAErB,IAAI,CAACS,IAAL,CAAUY;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAE/B,MAAM,CAACgC,aAAvB;AAAA,6BACI,QAAC,eAAD;AAAiB,4BAAiB,4BAAlC;AAA+D,QAAA,SAAS,EAAEhC,MAAM,CAACiC,KAAjF;AAAwF,QAAA,UAAU,EAAEP,YAApG;AAAkH,QAAA,UAAU,EAAC,OAA7H;AAAqI,QAAA,QAAQ,EAAEC,CAAC,IAAEpB,OAAO,CAACoB,CAAC,CAACO,MAAF,CAASC,KAAV,CAAzJ;AAA2K,QAAA,IAAI,EAAE7B,IAAjL;AAAuL,QAAA,OAAO,EAAC;AAA/L;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAtDD;;GAAML,Y;UACeN,W,EAGFD,W,EACDA,W;;;KALZO,Y;AAwDN,eAAeA,YAAf","sourcesContent":["import React, {useEffect, useState } from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport Logo from '../../../assets/logo.png'\r\nimport RoundWrapper from '../../util/RoundWrapper'\r\nimport {createComment} from '../../../store/actions/commentAction'\r\nimport ContentEditable from 'react-contenteditable'\r\nimport styles from './InputComment.module.css'\r\n\r\nconst InputComment = ({onReply, setOnReply, post}) => {\r\n    const dispatch = useDispatch();\r\n    const [body, setBody] = useState('');\r\n    const [onSubmit, setOnSubmit] = useState(false);\r\n    const {auth} = useSelector(state=>state);\r\n    const posts = useSelector(state=>state.post.posts);\r\n\r\n    useEffect(()=>{\r\n        if(onSubmit) submitHandler();\r\n    },[onSubmit])\r\n\r\n    // useEffect(()=>{\r\n    //     if(onReply) setBody(``);\r\n    // },[body])\r\n\r\n    const submitHandler = () => {\r\n        const trimBody = body.trim();\r\n        console.log('c');\r\n        if(trimBody=='') console.log('none');\r\n        const newComment = {\r\n            body: trimBody,\r\n            user: auth.user,\r\n            createdAt: new Date().toISOString(),\r\n            reply: onReply && onReply._id,\r\n            tag: onReply && onReply.user\r\n        }\r\n        dispatch(createComment(auth, newComment, post, posts));\r\n        setBody('');\r\n        setOnSubmit(false);\r\n    }\r\n\r\n    const inputHandler = (e) => {\r\n        if(e.charCode == 13) {\r\n            e.preventDefault();\r\n            setOnSubmit(true);\r\n        }\r\n        if(e.charCode == 64) {\r\n            e.preventDefault();\r\n            setBody('tag ne')\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={submitHandler} className={styles.container}>\r\n            <div className={styles.avatar}>\r\n                <RoundWrapper diameter='50px' >\r\n                    <img src={auth.user.avatar} />\r\n                </RoundWrapper>\r\n            </div>\r\n            <div className={styles.input_wrapper}>\r\n                <ContentEditable data-placeholder='Write your comment here...' className={styles.input} onKeyPress={inputHandler} spellCheck='false' onChange={e=>setBody(e.target.value)} html={body} tagName=\"label\" />       \r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default InputComment\r\n"]},"metadata":{},"sourceType":"module"}