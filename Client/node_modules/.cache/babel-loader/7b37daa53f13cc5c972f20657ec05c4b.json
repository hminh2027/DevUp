{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\post\\\\comment\\\\CommentCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport RoundWrapper from '../../util/RoundWrapper';\nimport styles from './CommentCard.module.css';\nimport ContentEditable from \"react-contenteditable\";\nimport moment from 'moment';\nimport { CgMoreAlt } from 'react-icons/cg';\nimport CommentOption from './CommentOption';\nimport { updateComment } from '../../../store/actions/commentAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentCard = ({\n  post,\n  comment\n}) => {\n  _s();\n\n  const ref = useRef();\n  const dispatch = useDispatch();\n  const [isShowOption, setShowOption] = useState(false);\n  const [body, setBody] = useState('');\n  const [showMore, setShowMore] = useState(false);\n  const [isLong, setIsLong] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const [onReply, setOnReply] = useState(false);\n  const [onSubmit, setOnSubmit] = useState(false);\n  const {\n    auth\n  } = useSelector(state => state);\n  const posts = useSelector(state => state.post.posts);\n  useEffect(() => {\n    // Function to check if click outside the object\n    const checkIfClickOutside = e => {\n      if (isShowOption && ref.current && !ref.current.contains(e.target)) setShowOption(false);\n    }; // Set event 'when click' trigger\n\n\n    document.addEventListener(\"mousedown\", checkIfClickOutside);\n    return () => {\n      // Clean the event\n      document.removeEventListener(\"mousedown\", checkIfClickOutside);\n    };\n  }, [isShowOption]);\n  useEffect(() => {\n    if (onSubmit) submitHandler();\n  }, [onSubmit]);\n  useEffect(() => {\n    setBody(comment.body);\n  }, [comment.body, isEdit]);\n  useEffect(() => {\n    if (body && body.length > 250) {\n      setIsLong(true);\n      setShowMore(true);\n    } else setIsLong(false);\n  }, [body]);\n\n  const submitHandler = () => {\n    dispatch(updateComment(auth, body, post, posts, comment));\n    setIsEdit(false);\n    setOnSubmit(false);\n  };\n\n  const checkHandler = e => {\n    if (e.charCode == 13) {\n      e.preventDefault();\n      setOnSubmit(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.cmt_wrapper\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CommentCard, \"SItkTTguLP5FGsArLSa3cdyzjXI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = CommentCard;\nexport default CommentCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentCard\");","map":{"version":3,"sources":["D:/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/post/comment/CommentCard.js"],"names":["React","useEffect","useState","useRef","useDispatch","useSelector","RoundWrapper","styles","ContentEditable","moment","CgMoreAlt","CommentOption","updateComment","CommentCard","post","comment","ref","dispatch","isShowOption","setShowOption","body","setBody","showMore","setShowMore","isLong","setIsLong","isEdit","setIsEdit","onReply","setOnReply","onSubmit","setOnSubmit","auth","state","posts","checkIfClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","submitHandler","length","checkHandler","charCode","preventDefault","cmt_wrapper"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport RoundWrapper from '../../util/RoundWrapper'\r\nimport styles from './CommentCard.module.css'\r\nimport ContentEditable from \"react-contenteditable\";\r\nimport moment from 'moment'\r\nimport {CgMoreAlt} from 'react-icons/cg'\r\nimport CommentOption from './CommentOption'\r\nimport { updateComment } from '../../../store/actions/commentAction';\r\n\r\nconst CommentCard = ({post, comment}) => {\r\n    const ref = useRef();\r\n    const dispatch = useDispatch();\r\n\r\n    const [isShowOption, setShowOption] = useState(false);\r\n    const [body, setBody] = useState('');\r\n    const [showMore, setShowMore] = useState(false);\r\n    const [isLong, setIsLong] = useState(false);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [onReply, setOnReply] = useState(false);\r\n    const [onSubmit, setOnSubmit] = useState(false);\r\n\r\n    const {auth} = useSelector(state=>state);\r\n    const posts = useSelector(state=>state.post.posts)\r\n\r\n    useEffect(()=>{\r\n        // Function to check if click outside the object\r\n        const checkIfClickOutside = e => {\r\n            if(isShowOption && ref.current &&!ref.current.contains(e.target)) setShowOption(false); \r\n        }\r\n        // Set event 'when click' trigger\r\n        document.addEventListener(\"mousedown\", checkIfClickOutside)\r\n        return () => {\r\n            // Clean the event\r\n            document.removeEventListener(\"mousedown\", checkIfClickOutside)\r\n        }\r\n    },[isShowOption]);\r\n\r\n    useEffect(()=>{\r\n        if(onSubmit) submitHandler();\r\n    },[onSubmit]);\r\n    \r\n    useEffect(()=>{\r\n        setBody(comment.body);\r\n    },[comment.body, isEdit])\r\n\r\n    useEffect(()=> {\r\n        if(body && body.length > 250) {\r\n            setIsLong(true);\r\n            setShowMore(true);\r\n        }\r\n        else setIsLong(false);\r\n    },[body])\r\n\r\n    const submitHandler = () => {\r\n        dispatch(updateComment(auth, body, post, posts, comment));\r\n        setIsEdit(false);\r\n        setOnSubmit(false);\r\n    }\r\n\r\n    const checkHandler = (e) => {\r\n        if(e.charCode == 13) {\r\n            e.preventDefault();\r\n            setOnSubmit(true);\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className={styles.cmt_wrapper}>\r\n            {/* <div className={styles.avatar}>\r\n                <RoundWrapper diameter='50px' >\r\n                    <img src={comment.user.avatar} />\r\n                </RoundWrapper>\r\n            </div>\r\n            \r\n            <div className={styles.content}>\r\n                <div className={styles.name}>{comment.user.username}</div>\r\n                <div className={styles.text}>\r\n                    {isEdit ? \r\n                    <ContentEditable className={styles.editable} onKeyPress={checkHandler} spellCheck='false' onChange={e=>setBody(e.target.value)} html={body} tagName=\"label\" />       \r\n                     : \r\n                    isLong && showMore ?\r\n                    `${body.slice(0,250)}... ` : \r\n                    body.trim()\r\n                    }\r\n                    {isLong && (showMore ? \r\n                    <label onClick={()=>setShowMore(false)} className={styles.toggle_text}>[show more]</label> : \r\n                    <label onClick={()=>setShowMore(true)} className={styles.toggle_text}>[hidden]</label>\r\n                    )}\r\n                    {isEdit && <div onClick={()=>setIsEdit(false)} className={styles.cancel}>Cancel</div>}\r\n                </div>\r\n                {(auth.user._id === post.user._id || auth.user._id ===  comment.user._id) && \r\n                <div ref={ref} style={{opacity: `${isShowOption ? '1' : '0'}`}} onClick={()=>setShowOption(!isShowOption)} className={styles.option_btn}>\r\n                    <CgMoreAlt/>\r\n                    {isShowOption && <CommentOption post={post} setIsEdit={setIsEdit} comment={comment} />}\r\n                </div>\r\n                }\r\n            </div>\r\n            <div className={styles.time}>{moment(post.createdAt).fromNow().replace(/(ago)+/g , '')}</div> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentCard\r\n"]},"metadata":{},"sourceType":"module"}