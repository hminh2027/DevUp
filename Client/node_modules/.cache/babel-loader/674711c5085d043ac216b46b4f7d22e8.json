{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\post\\\\PostCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { AiFillRightCircle } from 'react-icons/ai';\nimport { CgMoreAlt } from 'react-icons/cg';\nimport ReactBar from './ReactBar';\nimport { updatePost } from '../../store/actions/postAction';\nimport PostOption from './PostOption';\nimport PostCounter from './PostCounter';\nimport Comment from './comment/Comment';\nimport PostContent from './PostContent';\nimport InputComment from './comment/InputComment';\nimport Card from '../../components/util/Card';\nimport RoundWrapper from '../util/RoundWrapper';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport moment from 'moment';\nimport styles from './PostCard.module.css';\nimport Avatar from '../util/Avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  post,\n  isShared\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [isComment, setIsComment] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const [showOption, setShowOption] = useState(false);\n  const [body, setBody] = useState();\n  const {\n    auth\n  } = useSelector(state => state);\n  useEffect(() => {\n    setBody(post.body);\n  }, [post.body, isEdit]);\n  useEffect(() => {\n    const checkIfClickOutside = e => {\n      if (showOption && ref.current && !ref.current.contains(e.target)) setShowOption(false);\n    };\n\n    document.addEventListener(\"mousedown\", checkIfClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", checkIfClickOutside);\n    };\n  }, [showOption]);\n\n  const bodyChangeHandler = e => {\n    setBody(e.target.value);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updatePost(body, auth, post._id));\n    setIsEdit(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    width: \"100%\",\n    bg: \"white\",\n    mg: \"0 0 4rem 0\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.heading,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.avatar,\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: post.user.avatar,\n            id: post.user._id,\n            diameter: \"3rem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.name,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/profile/${post.user._id}`,\n            replace: true,\n            children: post.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.time,\n          children: moment(post.createdAt).fromNow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), isEdit ? /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n        maxRows: 8,\n        spellCheck: false,\n        type: \"text\",\n        name: \"body\",\n        className: styles.textarea,\n        onChange: bodyChangeHandler,\n        value: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.text,\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), isEdit && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.btn_group,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setIsEdit(false),\n          className: `${styles.cancel_btn} ${styles.button}`,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: submitHandler,\n          className: `${styles.submit_btn} ${styles.button}`,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), post.shareContent ? /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post.shareContent,\n        isShared: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(PostContent, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 94\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), !isShared && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          opacity: `${showOption ? '1' : '.5'}`\n        },\n        onClick: () => setShowOption(!showOption),\n        className: styles.option_btn,\n        children: [/*#__PURE__*/_jsxDEV(CgMoreAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PostOption, {\n          setIsShow: setShowOption,\n          isShow: showOption,\n          post: post,\n          setIsEdit: setIsEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostCounter, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactBar, {\n        isComment: isComment,\n        setIsComment: setIsComment,\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.bottom_wrapper,\n        children: [/*#__PURE__*/_jsxDEV(Comment, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), isComment && /*#__PURE__*/_jsxDEV(InputComment, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostCard, \"n3A1stSGxPUBbpUxrMH38jWkRC4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostCard;\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/post/PostCard.js"],"names":["React","useEffect","useRef","useState","useDispatch","useSelector","Link","AiFillRightCircle","CgMoreAlt","ReactBar","updatePost","PostOption","PostCounter","Comment","PostContent","InputComment","Card","RoundWrapper","TextareaAutosize","moment","styles","Avatar","PostCard","post","isShared","dispatch","isComment","setIsComment","isEdit","setIsEdit","showOption","setShowOption","body","setBody","auth","state","checkIfClickOutside","e","ref","current","contains","target","document","addEventListener","removeEventListener","bodyChangeHandler","value","submitHandler","preventDefault","_id","content","heading","avatar","user","name","username","time","createdAt","fromNow","textarea","text","btn_group","cancel_btn","button","submit_btn","shareContent","opacity","option_btn","bottom_wrapper"],"mappings":"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","sourcesContent":["import React, { useEffect,useRef,useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {AiFillRightCircle} from 'react-icons/ai'\r\nimport {CgMoreAlt} from 'react-icons/cg'\r\n\r\nimport ReactBar from './ReactBar'\r\nimport { updatePost } from '../../store/actions/postAction'\r\nimport PostOption from './PostOption'\r\nimport PostCounter from './PostCounter'\r\nimport Comment from './comment/Comment'\r\nimport PostContent from './PostContent'\r\nimport InputComment from './comment/InputComment'\r\nimport Card from '../../components/util/Card'\r\nimport RoundWrapper from '../util/RoundWrapper'\r\n\r\nimport TextareaAutosize from 'react-textarea-autosize'\r\nimport moment from 'moment'\r\nimport styles from './PostCard.module.css'\r\nimport Avatar from '../util/Avatar'\r\n\r\n\r\n\r\nconst PostCard = ({post, isShared}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [isComment, setIsComment] = useState(false);\r\n    const [isEdit,setIsEdit] = useState(false);\r\n    const [showOption, setShowOption] = useState(false);\r\n    const [body,setBody] = useState();\r\n\r\n    const {auth} = useSelector(state=>state);\r\n\r\n    useEffect(() => {\r\n        setBody(post.body);\r\n    }, [post.body, isEdit]);\r\n\r\n    useEffect(()=>{\r\n        const checkIfClickOutside = e => {\r\n            if(showOption && ref.current &&!ref.current.contains(e.target)) setShowOption(false); \r\n        }\r\n        document.addEventListener(\"mousedown\", checkIfClickOutside)\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", checkIfClickOutside)\r\n        }\r\n    },[showOption]);\r\n\r\n    const bodyChangeHandler = e => {\r\n        setBody(e.target.value);\r\n    }\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        dispatch(updatePost(body, auth, post._id));\r\n        setIsEdit(false);\r\n    }\r\n\r\n    return (\r\n        <Card width='100%' bg='white' mg='0 0 4rem 0'>\r\n            <div className={styles.content}>\r\n                <div className={styles.heading}>\r\n                    <div className={styles.avatar}>\r\n                        <Avatar src={post.user.avatar} id={post.user._id} diameter='3rem' />\r\n                    </div>\r\n                    <div className={styles.name}>\r\n                        <Link to={`/profile/${post.user._id}`} replace>\r\n                            {post.user.username}\r\n                        </Link>\r\n                    </div>\r\n                    <div className={styles.time}>{moment(post.createdAt).fromNow()}</div>\r\n                </div>\r\n\r\n                {isEdit ?\r\n                <TextareaAutosize maxRows={8} spellCheck={false} type=\"text\" name=\"body\" className={styles.textarea} onChange={bodyChangeHandler} value={body} />\r\n                : \r\n                <div className={styles.text}>{post.body}</div>\r\n                }\r\n\r\n                {isEdit &&\r\n                <div className={styles.btn_group}>\r\n                    <div onClick={()=>setIsEdit(false)} className={`${styles.cancel_btn} ${styles.button}`}>Cancel</div>\r\n                    <div onClick={submitHandler} className={`${styles.submit_btn} ${styles.button}`}>Submit</div> \r\n                </div>\r\n                }\r\n\r\n                {post.shareContent ? <PostCard post={post.shareContent} isShared={true} /> : <PostContent post={post} />}\r\n            </div>\r\n            {!isShared && \r\n            (<div>\r\n                <div style={{opacity: `${showOption ? '1' : '.5'}`}} onClick={()=>setShowOption(!showOption)} className={styles.option_btn}>\r\n                    <CgMoreAlt />\r\n                    <PostOption setIsShow={setShowOption} isShow={showOption} post={post} setIsEdit={setIsEdit} />\r\n                </div>\r\n                <PostCounter post={post} />\r\n                <ReactBar isComment={isComment} setIsComment={setIsComment} post={post} /> \r\n                <div className={styles.bottom_wrapper}>\r\n                    <Comment post={post} />\r\n                    {isComment && <InputComment post={post} />}             \r\n                </div> \r\n                {/* <div onClick={()=>setIsComment(true)} className={styles.reply_btn}>\r\n                    <div className={styles.label}>Reply</div>\r\n                    <div className={styles.icon_wrapper}><AiFillRightCircle/></div>              \r\n                </div> */}\r\n            </div>)}\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PostCard\r\n"]},"metadata":{},"sourceType":"module"}