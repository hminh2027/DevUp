{"ast":null,"code":"import { postAPI, getAPI, deleteAPI } from '../../apis/Axios';\nexport const createProject = (auth, body) => async dispatch => {\n  try {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        loading: true\n      }\n    });\n    const res = await postAPI('project', body, auth.token);\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        success: res.data.msg\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const openProject = code => async dispatch => {\n  const {\n    src,\n    html,\n    css,\n    js\n  } = code;\n  console.log('cc');\n  dispatch({\n    type: 'OPEN_CODE',\n    payload: {\n      src,\n      html,\n      css,\n      js,\n      isFirstTab: false\n    }\n  });\n};\nexport const deleteProject = (auth, id) => async dispatch => {\n  try {\n    const res = await deleteAPI(`project/${id}`, auth.token);\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        success: res.data.msg\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const getOwnProjects = auth => async dispatch => {\n  try {\n    dispatch({\n      type: 'LOADING_PROJECT',\n      payload: {\n        loading: true\n      }\n    });\n    const res = await getAPI('project', auth.token);\n    dispatch({\n      type: 'GET_OWN_PROJECTS',\n      payload: res.data.codes\n    });\n    dispatch({\n      type: 'LOADING_PROJECT',\n      payload: {\n        loading: false\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const getShareProjects = auth => async dispatch => {\n  try {\n    dispatch({\n      type: 'LOADING_PROJECT',\n      payload: {\n        loading: true\n      }\n    });\n    const res = await getAPI('project', auth.token);\n    dispatch({\n      type: 'GET_SHARE_PROJECTS',\n      payload: res.data.codes\n    });\n    dispatch({\n      type: 'LOADING_PROJECT',\n      payload: {\n        loading: false\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/store/actions/projectAction.js"],"names":["postAPI","getAPI","deleteAPI","createProject","auth","body","dispatch","type","payload","loading","res","token","success","data","msg","err","error","response","openProject","code","src","html","css","js","console","log","isFirstTab","deleteProject","id","getOwnProjects","codes","getShareProjects"],"mappings":"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","sourcesContent":["import {postAPI, getAPI, deleteAPI} from '../../apis/Axios';\r\n\r\nexport const createProject = (auth, body) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: 'ALERT', payload: {loading: true}});\r\n        const res = await postAPI('project', body, auth.token);\r\n       \r\n\r\n        dispatch({type: 'ALERT', payload: {success: res.data.msg}});\r\n\r\n    } catch (err) {       \r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}});\r\n    }\r\n}\r\n\r\nexport const openProject = (code) => async (dispatch) => {\r\n    const {src, html, css, js} = code;\r\n    console.log('cc')\r\n\r\n    dispatch({type: 'OPEN_CODE', payload: {src, html, css, js, isFirstTab: false}});\r\n\r\n}\r\n\r\nexport const deleteProject = (auth, id) => async (dispatch) => {\r\n    try {\r\n        const res = await deleteAPI(`project/${id}`, auth.token);\r\n\r\n        dispatch({type: 'ALERT', payload: {success: res.data.msg}});\r\n\r\n    } catch (err) { \r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}});\r\n    }\r\n}\r\n\r\nexport const getOwnProjects = (auth) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: 'LOADING_PROJECT', payload: {loading: true}});\r\n        const res = await getAPI('project', auth.token);\r\n       \r\n        dispatch({type: 'GET_OWN_PROJECTS', payload: res.data.codes});\r\n        dispatch({type: 'LOADING_PROJECT', payload: {loading: false}});\r\n\r\n    } catch (err) {       \r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}});\r\n    }\r\n}\r\n\r\nexport const getShareProjects = (auth) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: 'LOADING_PROJECT', payload: {loading: true}});\r\n        const res = await getAPI('project', auth.token);\r\n       \r\n        dispatch({type: 'GET_SHARE_PROJECTS', payload: res.data.codes});\r\n        dispatch({type: 'LOADING_PROJECT', payload: {loading: false}});\r\n\r\n    } catch (err) {       \r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}});\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}