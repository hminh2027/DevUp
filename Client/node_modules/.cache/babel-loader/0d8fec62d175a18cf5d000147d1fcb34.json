{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\notification\\\\NotificationDropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport styles from './NotificationDropdown.module.css';\nimport DropdownCard from '../util/DropdownCard';\nimport { CgMoreAlt } from 'react-icons/cg';\nimport { useSelector } from 'react-redux';\nimport NoticeCard from './notices/NoticeCard';\nimport NotificationOption from './NotificationOption';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotificationDropdown = ({\n  isShow\n}) => {\n  _s();\n\n  const ref = useRef();\n  const {\n    notice\n  } = useSelector(state => state);\n  const [isShowOption, setShowOption] = useState(false);\n  useEffect(() => {\n    // Function to check if click outside the object\n    const checkIfClickOutside = e => {\n      if (isShowOption && ref.current && !ref.current.contains(e.target)) setShowOption(false);\n    }; // Set event 'when click' trigger\n\n\n    document.addEventListener(\"mousedown\", checkIfClickOutside);\n    return () => {\n      // Clean the event\n      document.removeEventListener(\"mousedown\", checkIfClickOutside);\n    };\n  }, [isShowOption]);\n  let delay = 0;\n  const variants = {\n    initial: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1,\n      transition: {\n        delay: delay,\n        duration: .6,\n        when: \"beforeChildren\"\n      }\n    },\n    exit: {\n      opacity: 0,\n      transition: {\n        duration: 0.2\n      }\n    }\n  };\n\n  const plus = () => {\n    delay += 0.5;\n  };\n\n  return /*#__PURE__*/_jsxDEV(DropdownCard, {\n    isShow: isShow,\n    bottom: '-50%',\n    right: '200%',\n    width: '450px',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.heading,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.title,\n          children: \"Notification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: ref,\n          style: {\n            opacity: `${isShowOption ? '1' : '.5'}`\n          },\n          onClick: () => setShowOption(!isShowOption),\n          className: styles.heading_option,\n          children: [/*#__PURE__*/_jsxDEV(CgMoreAlt, {\n            className: styles.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), isShowOption && /*#__PURE__*/_jsxDEV(NotificationOption, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.content,\n        children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          children: notice.data.length > 0 ? notice.data.map(msg => {\n            // <motion.div\n            // variants ={variants}\n            // key=\"dog\"\n            // initial='initial'\n            // animate='enter'\n            // exit='exit'\n            // >\n            //     <NoticeCard msg={msg} />\n            // </motion.div>\n\n            /*#__PURE__*/\n            _jsxDEV(\"div\", {\n              children: delay\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: \"No notifications available!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NotificationDropdown, \"DpOSaN35NfixBa6FO062Vj3dqT8=\", false, function () {\n  return [useSelector];\n});\n\n_c = NotificationDropdown;\nexport default NotificationDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationDropdown\");","map":{"version":3,"sources":["D:/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/notification/NotificationDropdown.js"],"names":["React","useEffect","useRef","useState","styles","DropdownCard","CgMoreAlt","useSelector","NoticeCard","NotificationOption","NotificationDropdown","isShow","ref","notice","state","isShowOption","setShowOption","checkIfClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","delay","variants","initial","opacity","enter","transition","duration","when","exit","plus","container","heading","title","heading_option","icon","content","data","length","map","msg","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport styles from './NotificationDropdown.module.css'\r\nimport DropdownCard from '../util/DropdownCard'\r\nimport {CgMoreAlt} from 'react-icons/cg'\r\nimport { useSelector } from 'react-redux'\r\nimport NoticeCard from './notices/NoticeCard'\r\nimport NotificationOption from './NotificationOption'\r\n\r\n\r\nconst NotificationDropdown = ({isShow}) => {\r\n    const ref = useRef();\r\n    \r\n    const {notice} = useSelector(state=>state);\r\n    const [isShowOption, setShowOption] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        // Function to check if click outside the object\r\n        const checkIfClickOutside = e => {\r\n            if(isShowOption && ref.current &&!ref.current.contains(e.target)) setShowOption(false); \r\n        }\r\n        // Set event 'when click' trigger\r\n        document.addEventListener(\"mousedown\", checkIfClickOutside)\r\n        return () => {\r\n            // Clean the event\r\n            document.removeEventListener(\"mousedown\", checkIfClickOutside)\r\n        }\r\n    },[isShowOption]);\r\n\r\n    let delay=0;\r\n    const variants = {\r\n        initial: {\r\n            opacity: 0,\r\n        },\r\n        enter: {\r\n            opacity: 1,\r\n            transition: {\r\n                delay: delay,\r\n                duration: .6,\r\n                when: \"beforeChildren\",\r\n            },\r\n        },\r\n        exit: {\r\n            opacity: 0,\r\n          transition: { duration: 0.2 },\r\n        },\r\n    }\r\n\r\n    const plus = () => {\r\n        delay+=0.5;\r\n    }\r\n\r\n    return (\r\n        <DropdownCard isShow={isShow} bottom={'-50%'} right={'200%'} width={'450px'}>\r\n            <div className={styles.container}>\r\n                <div className={styles.heading}>\r\n                    <div className={styles.title}>Notification</div>\r\n                    <div ref={ref} style={{opacity: `${isShowOption ? '1' : '.5'}`}} onClick={()=>setShowOption(!isShowOption)} className={styles.heading_option}>\r\n                        <CgMoreAlt className={styles.icon}/>\r\n                        {isShowOption && <NotificationOption/>}\r\n                    </div>\r\n                </div>\r\n                <div className={styles.content}>\r\n                <AnimatePresence >\r\n                    {notice.data.length>0 ? notice.data.map(msg=>{\r\n                        // <motion.div\r\n                        // variants ={variants}\r\n                        // key=\"dog\"\r\n                        // initial='initial'\r\n                        // animate='enter'\r\n                        // exit='exit'\r\n                        // >\r\n                        //     <NoticeCard msg={msg} />\r\n                        // </motion.div>\r\n                        <div>{delay}</div>\r\n                    }) : <div style={{textAlign: 'center'}}>No notifications available!</div>\r\n                    \r\n                    }\r\n                </AnimatePresence>\r\n                    {/* // {notice.data.length>0 ? notice.data.map(msg=>(\r\n\r\n                    //     <NoticeCard msg={msg} />\r\n                    // )):\r\n                    // <div style={{textAlign: 'center'}}>No notifications available!</div>\r\n                    // } */}\r\n                </div>\r\n            </div>\r\n        </DropdownCard>\r\n    )\r\n}\r\n\r\nexport default NotificationDropdown\r\n"]},"metadata":{},"sourceType":"module"}