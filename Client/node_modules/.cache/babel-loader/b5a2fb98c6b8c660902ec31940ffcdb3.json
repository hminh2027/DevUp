{"ast":null,"code":"import _slicedToArray from\"D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{AiOutlineExpandAlt}from'react-icons/ai';import{CgMinimizeAlt}from'react-icons/cg';import{Controlled}from'react-codemirror2';import'codemirror/lib/codemirror.css';import'codemirror/theme/material.css';import'codemirror/mode/xml/xml';import'codemirror/mode/javascript/javascript';import'codemirror/mode/css/css';import'./Editor.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Editor=function Editor(_ref){var language=_ref.language,value=_ref.value,name=_ref.name,onChange=_ref.onChange,icon=_ref.icon,labelColor=_ref.labelColor;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];function handleChange(value){onChange(value);}return/*#__PURE__*/_jsxs(\"div\",{className:\"container \".concat(open?'':'collapsed'),children:[/*#__PURE__*/_jsx(\"div\",{className:\"heading\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"label_wrapper\",children:[/*#__PURE__*/_jsx(\"div\",{style:{color:labelColor},className:\"icon\",children:icon}),/*#__PURE__*/_jsx(\"div\",{className:\"name\",children:name})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"editor-container\",children:[/*#__PURE__*/_jsx(Controlled,{onBeforeChange:function onBeforeChange(editor,data,value){return handleChange(value);},value:value,className:\"editor\",options:{lineWrapping:true,lint:true,mode:language,theme:'material',lineNumbers:true,scrollbarStyle:null,autocorrect:true}}),/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){return setOpen(!open);},className:\"expand-btn\",children:open?/*#__PURE__*/_jsx(CgMinimizeAlt,{}):/*#__PURE__*/_jsx(AiOutlineExpandAlt,{})})]})]});};export default Editor;","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/src/components/code/sourceCode/Editor.js"],"names":["React","useState","AiOutlineExpandAlt","CgMinimizeAlt","Controlled","Editor","language","value","name","onChange","icon","labelColor","open","setOpen","handleChange","color","editor","data","lineWrapping","lint","mode","theme","lineNumbers","scrollbarStyle","autocorrect"],"mappings":"+KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAAQC,kBAAR,KAAiC,gBAAjC,CACA,OAAQC,aAAR,KAA4B,gBAA5B,CAEA,OAAQC,UAAR,KAAyB,mBAAzB,CAEA,MAAO,+BAAP,CACA,MAAO,+BAAP,CACA,MAAO,yBAAP,CACA,MAAO,uCAAP,CACA,MAAO,yBAAP,CAEA,MAAO,cAAP,C,wFAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAyD,IAAvDC,CAAAA,QAAuD,MAAvDA,QAAuD,CAA7CC,KAA6C,MAA7CA,KAA6C,CAAtCC,IAAsC,MAAtCA,IAAsC,CAAhCC,QAAgC,MAAhCA,QAAgC,CAAtBC,IAAsB,MAAtBA,IAAsB,CAAhBC,UAAgB,MAAhBA,UAAgB,CAEpE,cAAwBV,QAAQ,CAAC,IAAD,CAAhC,wCAAOW,IAAP,eAAaC,OAAb,eAEA,QAASC,CAAAA,YAAT,CAAsBP,KAAtB,CAA6B,CACzBE,QAAQ,CAACF,KAAD,CAAR,CACD,CAEH,mBACE,aAAK,SAAS,qBAAeK,IAAI,CAAG,EAAH,CAAQ,WAA3B,CAAd,wBACE,YAAK,SAAS,CAAC,SAAf,uBACE,aAAK,SAAS,CAAC,eAAf,wBACE,YAAK,KAAK,CAAE,CAACG,KAAK,CAAEJ,UAAR,CAAZ,CAAiC,SAAS,CAAC,MAA3C,UAAmDD,IAAnD,EADF,cAEE,YAAK,SAAS,CAAC,MAAf,UAAuBF,IAAvB,EAFF,GADF,EADF,cAOE,aAAK,SAAS,mBAAd,wBACE,KAAC,UAAD,EACE,cAAc,CAAE,wBAACQ,MAAD,CAASC,IAAT,CAAeV,KAAf,QAAuBO,CAAAA,YAAY,CAACP,KAAD,CAAnC,EADlB,CAEE,KAAK,CAAEA,KAFT,CAGE,SAAS,CAAC,QAHZ,CAIE,OAAO,CAAE,CACPW,YAAY,CAAE,IADP,CAEPC,IAAI,CAAE,IAFC,CAGPC,IAAI,CAAEd,QAHC,CAIPe,KAAK,CAAE,UAJA,CAKPC,WAAW,CAAE,IALN,CAMPC,cAAc,CAAE,IANT,CAOPC,WAAW,CAAE,IAPN,CAJX,EADF,cAeE,YAAK,OAAO,CAAE,yBAAIX,CAAAA,OAAO,CAAC,CAACD,IAAF,CAAX,EAAd,CAAkC,SAAS,CAAC,YAA5C,UACGA,IAAI,cAAG,KAAC,aAAD,IAAH,cAAsB,KAAC,kBAAD,IAD7B,EAfF,GAPF,GADF,CA6BH,CArCD,CAuCA,cAAeP,CAAAA,MAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport {AiOutlineExpandAlt} from 'react-icons/ai'\r\nimport {CgMinimizeAlt} from 'react-icons/cg'\r\n\r\nimport {Controlled} from 'react-codemirror2'\r\n\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\n\r\nimport './Editor.css'\r\n\r\nconst Editor = ({language, value, name, onChange, icon, labelColor}) => {\r\n\r\n    const [open, setOpen] = useState(true)\r\n\r\n    function handleChange(value) {\r\n        onChange(value)\r\n      }\r\n\r\n    return (\r\n      <div className={`container ${open ? '' : 'collapsed'}`}>\r\n        <div className='heading'>\r\n          <div className='label_wrapper'>\r\n            <div style={{color: labelColor}} className='icon'>{icon}</div>\r\n            <div className='name'>{name}</div>\r\n          </div>    \r\n        </div>\r\n        <div className={`editor-container`}>\r\n          <Controlled\r\n            onBeforeChange={(editor, data, value)=>handleChange(value)}\r\n            value={value}\r\n            className='editor'\r\n            options={{\r\n              lineWrapping: true,\r\n              lint: true,\r\n              mode: language,\r\n              theme: 'material',\r\n              lineNumbers: true,\r\n              scrollbarStyle: null,\r\n              autocorrect: true,\r\n            }}\r\n          />\r\n          <div onClick={()=>setOpen(!open)} className='expand-btn'>\r\n            {open ? <CgMinimizeAlt/> : <AiOutlineExpandAlt/>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Editor\r\n"]},"metadata":{},"sourceType":"module"}