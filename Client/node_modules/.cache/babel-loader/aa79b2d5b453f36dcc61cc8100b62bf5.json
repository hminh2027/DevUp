{"ast":null,"code":"import _slicedToArray from\"D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import ReactDOM from'react-dom';import{useMediaQuery}from'react-responsive';import{FiPlusCircle}from'react-icons/fi';import NewProjectModal from'../../modal/NewProjectModal';import Modal from'../../util/Modal';import ProjectCard from'./ProjectCard';import styles from'./ProjectFolder.module.css';import GridGallery from'../../util/GridGallery';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ProjectFolder=function ProjectFolder(_ref){var projects=_ref.projects,name=_ref.name,showAdd=_ref.showAdd;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isShowNewModal=_useState2[0],setShowNewModal=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),prjs=_useState4[0],setPrjs=_useState4[1];var isDesktop=useMediaQuery({query:'(min-width: 1224px)'});useEffect(function(){var projectTempArr=[];{showAdd&&projectTempArr.push(/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){return setShowNewModal(true);},className:styles.add_card,children:/*#__PURE__*/_jsx(FiPlusCircle,{})},'plus'));}projects.map(function(e,index){projectTempArr.push(/*#__PURE__*/_jsx(ProjectCard,{project:e},e._id));});setPrjs(projectTempArr);},[projects]);return/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.heading,children:/*#__PURE__*/_jsx(\"div\",{className:styles.title,children:name})}),/*#__PURE__*/_jsx(\"div\",{className:styles.content,children:/*#__PURE__*/_jsx(GridGallery,{length:isDesktop?'9':'3',list:prjs})}),isShowNewModal&&/*#__PURE__*/ReactDOM.createPortal(/*#__PURE__*/_jsx(Modal,{setIsEdit:setShowNewModal,width:isDesktop?'30%':'100%',children:/*#__PURE__*/_jsx(NewProjectModal,{setIsEdit:setShowNewModal})}),portal)]});};export default ProjectFolder;","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/src/components/code/projectManager/ProjectFolder.js"],"names":["React","useEffect","useState","ReactDOM","useMediaQuery","FiPlusCircle","NewProjectModal","Modal","ProjectCard","styles","GridGallery","ProjectFolder","projects","name","showAdd","isShowNewModal","setShowNewModal","prjs","setPrjs","isDesktop","query","projectTempArr","push","add_card","map","e","index","_id","container","heading","title","content","createPortal","portal"],"mappings":"+KAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,OAASC,aAAT,KAA8B,kBAA9B,CAEA,OAAQC,YAAR,KAA2B,gBAA3B,CACA,MAAOC,CAAAA,eAAP,KAA4B,6BAA5B,CACA,MAAOC,CAAAA,KAAP,KAAkB,kBAAlB,CAEA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,C,wFAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAA+B,IAA7BC,CAAAA,QAA6B,MAA7BA,QAA6B,CAAnBC,IAAmB,MAAnBA,IAAmB,CAAbC,OAAa,MAAbA,OAAa,CAEjD,cAA0CZ,QAAQ,CAAC,KAAD,CAAlD,wCAAOa,cAAP,eAAuBC,eAAvB,eACA,eAAwBd,QAAQ,CAAC,EAAD,CAAhC,yCAAOe,IAAP,eAAaC,OAAb,eAEA,GAAMC,CAAAA,SAAS,CAAGf,aAAa,CAAC,CAAEgB,KAAK,CAAE,qBAAT,CAAD,CAA/B,CAEAnB,SAAS,CAAC,UAAM,CACZ,GAAIoB,CAAAA,cAAc,CAAG,EAArB,CAEA,CAACP,OAAO,EAAIO,cAAc,CAACC,IAAf,cAAoB,YAAgB,OAAO,CAAE,yBAAIN,CAAAA,eAAe,CAAC,IAAD,CAAnB,EAAzB,CAAoD,SAAS,CAAEP,MAAM,CAACc,QAAtE,uBAAgF,KAAC,YAAD,IAAhF,EAAS,MAAT,CAApB,CAAX,CAAsI,CAEvIX,QAAQ,CAACY,GAAT,CAAa,SAACC,CAAD,CAAIC,KAAJ,CAAc,CACnBL,cAAc,CAACC,IAAf,cAAoB,KAAC,WAAD,EAAyB,OAAO,CAAEG,CAAlC,EAAkBA,CAAC,CAACE,GAApB,CAApB,EACP,CAFD,EAIAT,OAAO,CAACG,cAAD,CAAP,CAEH,CAXQ,CAWN,CAACT,QAAD,CAXM,CAAT,CAcA,mBACI,aAAK,SAAS,CAAEH,MAAM,CAACmB,SAAvB,wBACI,YAAK,SAAS,CAAEnB,MAAM,CAACoB,OAAvB,uBACI,YAAK,SAAS,CAAEpB,MAAM,CAACqB,KAAvB,UAA+BjB,IAA/B,EADJ,EADJ,cAII,YAAK,SAAS,CAAEJ,MAAM,CAACsB,OAAvB,uBACI,KAAC,WAAD,EAAa,MAAM,CAAEZ,SAAS,CAAG,GAAH,CAAS,GAAvC,CAA4C,IAAI,CAAEF,IAAlD,EADJ,EAJJ,CAQKF,cAAc,eAAIZ,QAAQ,CAAC6B,YAAT,cACnB,KAAC,KAAD,EAAO,SAAS,CAAEhB,eAAlB,CAAmC,KAAK,CAAEG,SAAS,CAAG,KAAH,CAAU,MAA7D,uBACI,KAAC,eAAD,EAAiB,SAAS,CAAEH,eAA5B,EADJ,EADmB,CAIjBiB,MAJiB,CARvB,GADJ,CAgBH,CArCD,CAuCA,cAAetB,CAAAA,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { useMediaQuery } from 'react-responsive'\r\n\r\nimport {FiPlusCircle} from 'react-icons/fi'\r\nimport NewProjectModal from '../../modal/NewProjectModal'\r\nimport Modal from '../../util/Modal'\r\n\r\nimport ProjectCard from './ProjectCard'\r\n\r\nimport styles from './ProjectFolder.module.css'\r\nimport GridGallery from '../../util/GridGallery'\r\n\r\nconst ProjectFolder = ({projects, name, showAdd}) => {\r\n\r\n    const [isShowNewModal, setShowNewModal] = useState(false)\r\n    const [prjs, setPrjs] = useState([])\r\n\r\n    const isDesktop = useMediaQuery({ query: '(min-width: 1224px)' })\r\n\r\n    useEffect(() => {\r\n        let projectTempArr = []\r\n        \r\n        {showAdd && projectTempArr.push(<div key='plus' onClick={()=>setShowNewModal(true)} className={styles.add_card}><FiPlusCircle/></div>)}\r\n\r\n        projects.map((e, index) => {\r\n                projectTempArr.push(<ProjectCard key={e._id} project={e} />)\r\n        })\r\n        \r\n        setPrjs(projectTempArr)\r\n\r\n    }, [projects])\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.heading}>\r\n                <div className={styles.title}>{name}</div>\r\n            </div>\r\n            <div className={styles.content}>\r\n                <GridGallery length={isDesktop ? '9' : '3'} list={prjs} />\r\n            </div>\r\n\r\n            {isShowNewModal && ReactDOM.createPortal(\r\n            <Modal setIsEdit={setShowNewModal} width={isDesktop ? '30%': '100%'} >\r\n                <NewProjectModal setIsEdit={setShowNewModal} />\r\n            </Modal>\r\n            , portal)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectFolder\r\n"]},"metadata":{},"sourceType":"module"}