{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\notification\\\\NotificationDropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { CgMoreAlt } from 'react-icons/cg';\nimport DropdownCard from '../util/DropdownCard';\nimport NoticeCard from './notices/NoticeCard';\nimport NotificationOption from './NotificationOption';\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport styles from './NotificationDropdown.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotificationDropdown = ({\n  isShow\n}) => {\n  _s();\n\n  const ref = useRef();\n  const {\n    notice\n  } = useSelector(state => state);\n  const [isShowOption, setShowOption] = useState(false);\n  useEffect(() => {\n    const checkIfClickOutside = e => {\n      if (isShowOption && ref.current && !ref.current.contains(e.target)) setShowOption(false);\n    };\n\n    document.addEventListener(\"mousedown\", checkIfClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", checkIfClickOutside);\n    };\n  }, [isShowOption]);\n  const variants = {\n    initial: {\n      transform: 'translate(150%,0)'\n    },\n    exit: {\n      opacity: 0,\n      transition: {\n        duration: 0.1\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(DropdownCard, {\n      isShow: isShow,\n      bottom: '-50%',\n      right: '200%',\n      width: '450px',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.heading,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.title,\n            children: \"Notification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: ref,\n            style: {\n              opacity: `${isShowOption ? '1' : '.5'}`\n            },\n            onClick: () => setShowOption(!isShowOption),\n            className: styles.heading_option,\n            children: /*#__PURE__*/_jsxDEV(CgMoreAlt, {\n              className: styles.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.content,\n          children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n            children: notice.data.length > 0 ? notice.data.map((msg, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n              variants: variants,\n              initial: {\n                transform: 'translate(150%,0)'\n              },\n              animate: {\n                transform: 'translate(0,0)',\n                transitionDuration: `.6s`,\n                transitionDelay: `${(index + 1) * 0.2}s`\n              },\n              exit: {\n                opacity: 0,\n                transitionDuration: 0.1\n              },\n              children: /*#__PURE__*/_jsxDEV(NoticeCard, {\n                msg: msg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: \"No notifications available!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dropdown\",\n      children: /*#__PURE__*/_jsxDEV(NotificationOption, {\n        bottom: ref.current && ref.current.getBoundingClientRect().y,\n        isShow: isShowOption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NotificationDropdown, \"DpOSaN35NfixBa6FO062Vj3dqT8=\", false, function () {\n  return [useSelector];\n});\n\n_c = NotificationDropdown;\nexport default NotificationDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationDropdown\");","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/notification/NotificationDropdown.js"],"names":["React","useEffect","useRef","useState","useSelector","CgMoreAlt","DropdownCard","NoticeCard","NotificationOption","motion","AnimatePresence","styles","NotificationDropdown","isShow","ref","notice","state","isShowOption","setShowOption","checkIfClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","variants","initial","transform","exit","opacity","transition","duration","container","heading","title","heading_option","icon","content","data","length","map","msg","index","transitionDuration","transitionDelay","textAlign","getBoundingClientRect","y"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport {CgMoreAlt} from 'react-icons/cg'\r\n\r\nimport DropdownCard from '../util/DropdownCard'\r\nimport NoticeCard from './notices/NoticeCard'\r\nimport NotificationOption from './NotificationOption'\r\n\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\n\r\nimport styles from './NotificationDropdown.module.css'\r\n\r\n\r\n\r\nconst NotificationDropdown = ({isShow}) => {\r\n    const ref = useRef();\r\n    \r\n    const {notice} = useSelector(state=>state);\r\n    const [isShowOption, setShowOption] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        const checkIfClickOutside = e => {\r\n            if(isShowOption && ref.current &&!ref.current.contains(e.target)) setShowOption(false); \r\n        }\r\n        document.addEventListener(\"mousedown\", checkIfClickOutside)\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", checkIfClickOutside)\r\n        }\r\n    },[isShowOption]);\r\n\r\n    const variants = {\r\n        initial: {\r\n            transform: 'translate(150%,0)',\r\n        },\r\n        exit: {\r\n        opacity: 0,\r\n          transition: { duration: 0.1 },\r\n        },\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <DropdownCard isShow={isShow} bottom={'-50%'} right={'200%'} width={'450px'}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.heading}>\r\n                        <div className={styles.title}>Notification</div>\r\n                        <div ref={ref} style={{opacity: `${isShowOption ? '1' : '.5'}`}} onClick={()=>setShowOption(!isShowOption)} className={styles.heading_option}>\r\n                            <CgMoreAlt className={styles.icon}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.content}>\r\n                    <AnimatePresence >\r\n                        {notice.data.length>0 ? notice.data.map((msg,index)=>(\r\n                            <motion.div\r\n                            variants ={variants}\r\n                            key={index}\r\n                            initial={{transform: 'translate(150%,0)'}}\r\n                            animate={{transform: 'translate(0,0)', transitionDuration: `.6s`, transitionDelay:`${(index+1)*0.2}s`}}\r\n                            exit={{opacity: 0, transitionDuration: 0.1}}\r\n                            >\r\n                                <NoticeCard msg={msg} />\r\n                            </motion.div>\r\n                        )) : \r\n                        <div style={{textAlign: 'center'}}>No notifications available!</div>                   \r\n                        }\r\n                    </AnimatePresence>\r\n                    </div>\r\n                </div>\r\n            </DropdownCard>\r\n            <div  id='dropdown'>\r\n                <NotificationOption bottom={ref.current && ref.current.getBoundingClientRect().y} isShow={isShowOption} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotificationDropdown\r\n"]},"metadata":{},"sourceType":"module"}