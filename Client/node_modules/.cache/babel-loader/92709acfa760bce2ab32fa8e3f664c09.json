{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\post\\\\comment\\\\CommentCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport RoundWrapper from '../../util/RoundWrapper';\nimport styles from './CommentCard.module.css';\nimport Logo from '../../../assets/logo.png';\nimport moment from 'moment';\nimport { CgMoreAlt } from 'react-icons/cg';\nimport CommentOption from './CommentOption';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentCard = ({\n  post,\n  comment\n}) => {\n  _s();\n\n  const ref = useRef();\n  const [isShowOption, setShowOption] = useState(false);\n  const [body, setBody] = useState('');\n  const [showMore, setShowMore] = useState(false);\n  const [isLong, setIsLong] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const [onReply, setOnReply] = useState(false);\n  const {\n    auth\n  } = useSelector(state => state);\n  useEffect(() => {\n    // Function to check if click outside the object\n    const checkIfClickOutside = e => {\n      if (isShowOption && ref.current && !ref.current.contains(e.target)) setShowOption(false);\n    }; // Set event 'when click' trigger\n\n\n    document.addEventListener(\"mousedown\", checkIfClickOutside);\n    return () => {\n      // Clean the event\n      document.removeEventListener(\"mousedown\", checkIfClickOutside);\n    };\n  }, [isShowOption]);\n  useEffect(() => {\n    setBody(comment.body);\n  }, [comment.body]);\n  useEffect(() => {\n    if (body.length > 250) {\n      setIsLong(true);\n      setShowMore(true);\n    } else setIsLong(false);\n  }, [body]);\n\n  const submitHandler = e => {\n    console.log('send');\n  };\n\n  useEffect(() => {\n    const id = document.getElementById('text');\n\n    if (id) {\n      id.addEventListener(\"input\", function (e) {\n        console.log(e);\n        setBody(id.innerText);\n      }, false); // id.addEventListener(\"keypress\", function(e) {\n      //     if(e.code == 'Enter') submitHandler(e);\n      //     else setBody(id.innerText);\n      // }, false);\n    }\n  }, [body]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.cmt_wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.avatar,\n      children: /*#__PURE__*/_jsxDEV(RoundWrapper, {\n        diameter: \"50px\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: comment.user.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.name,\n        children: comment.user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.text,\n        children: [isEdit ? /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"text\",\n          \"aria-value\": \"cc\",\n          role: \"textbox\",\n          contentEditable: true,\n          children: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this) : isLong && showMore ? `${body.slice(0, 250)}... ` : body.trim(), isLong && (showMore ? /*#__PURE__*/_jsxDEV(\"label\", {\n          onClick: () => setShowMore(false),\n          className: styles.toggle_text,\n          children: \"[show more]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n          onClick: () => setShowMore(true),\n          className: styles.toggle_text,\n          children: \"[hidden]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), (auth.user._id === post.user._id || auth.user._id === comment.user._id) && /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: ref,\n        style: {\n          opacity: `${isShowOption ? '1' : '0'}`\n        },\n        onClick: () => setShowOption(!isShowOption),\n        className: styles.option_btn,\n        children: [/*#__PURE__*/_jsxDEV(CgMoreAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), isShowOption && /*#__PURE__*/_jsxDEV(CommentOption, {\n          post: post,\n          setIsEdit: setIsEdit,\n          comment: comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.time,\n      children: moment(post.createdAt).fromNow().replace(/(ago)+/g, '')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CommentCard, \"yYzSkTlEibi/nkHZTnOdbIdxvJc=\", false, function () {\n  return [useSelector];\n});\n\n_c = CommentCard;\nexport default CommentCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentCard\");","map":{"version":3,"sources":["D:/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/post/comment/CommentCard.js"],"names":["React","useEffect","useState","useRef","useSelector","RoundWrapper","styles","Logo","moment","CgMoreAlt","CommentOption","CommentCard","post","comment","ref","isShowOption","setShowOption","body","setBody","showMore","setShowMore","isLong","setIsLong","isEdit","setIsEdit","onReply","setOnReply","auth","state","checkIfClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","length","submitHandler","console","log","id","getElementById","innerText","cmt_wrapper","avatar","user","content","name","username","text","slice","trim","toggle_text","_id","opacity","option_btn","time","createdAt","fromNow","replace"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport {useSelector} from 'react-redux';\r\nimport RoundWrapper from '../../util/RoundWrapper'\r\nimport styles from './CommentCard.module.css'\r\nimport Logo from '../../../assets/logo.png'\r\nimport moment from 'moment'\r\nimport {CgMoreAlt} from 'react-icons/cg'\r\nimport CommentOption from './CommentOption'\r\n\r\nconst CommentCard = ({post, comment}) => {\r\n    const ref = useRef();\r\n\r\n    const [isShowOption, setShowOption] = useState(false);\r\n    const [body, setBody] = useState('');\r\n    const [showMore, setShowMore] = useState(false);\r\n    const [isLong, setIsLong] = useState(false);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [onReply, setOnReply] = useState(false);\r\n\r\n    const {auth} = useSelector(state=>state);\r\n\r\n    useEffect(()=>{\r\n        // Function to check if click outside the object\r\n        const checkIfClickOutside = e => {\r\n            if(isShowOption && ref.current &&!ref.current.contains(e.target)) setShowOption(false); \r\n        }\r\n        // Set event 'when click' trigger\r\n        document.addEventListener(\"mousedown\", checkIfClickOutside)\r\n        return () => {\r\n            // Clean the event\r\n            document.removeEventListener(\"mousedown\", checkIfClickOutside)\r\n        }\r\n    },[isShowOption]);\r\n    \r\n    useEffect(()=>{\r\n        setBody(comment.body);\r\n    },[comment.body])\r\n\r\n    useEffect(()=> {\r\n        if(body.length > 250) {\r\n            setIsLong(true);\r\n            setShowMore(true);\r\n        }\r\n        else setIsLong(false);\r\n    },[body])\r\n\r\n    const submitHandler = (e) => {\r\n        console.log('send')\r\n    }\r\n\r\n    useEffect(() =>{\r\n        const id = document.getElementById('text')\r\n        if(id)\r\n        {\r\n            id.addEventListener(\"input\", function(e) {\r\n                console.log(e)\r\n                setBody(id.innerText);\r\n            }, false);\r\n            // id.addEventListener(\"keypress\", function(e) {\r\n            //     if(e.code == 'Enter') submitHandler(e);\r\n            //     else setBody(id.innerText);\r\n            // }, false);\r\n        }      \r\n    },[body])\r\n\r\n    return (\r\n        <div className={styles.cmt_wrapper}>\r\n            <div className={styles.avatar}>\r\n                <RoundWrapper diameter='50px' >\r\n                    <img src={comment.user.avatar} />\r\n                </RoundWrapper>\r\n            </div>\r\n            \r\n            <div className={styles.content}>\r\n                <div className={styles.name}>{comment.user.username}</div>\r\n                <div className={styles.text}>\r\n                    {isEdit ? \r\n                    <div id='text' aria-value='cc' role=\"textbox\"  contentEditable >\r\n                        {body}          \r\n                    </div> : \r\n                    isLong && showMore ?\r\n                    `${body.slice(0,250)}... ` : \r\n                    body.trim()\r\n                    }\r\n\r\n                    {isLong && (showMore ? \r\n                    <label onClick={()=>setShowMore(false)} className={styles.toggle_text}>[show more]</label> : \r\n                    <label onClick={()=>setShowMore(true)} className={styles.toggle_text}>[hidden]</label>\r\n                    )}\r\n                </div>\r\n                {(auth.user._id === post.user._id || auth.user._id ===  comment.user._id) && \r\n                <div ref={ref} style={{opacity: `${isShowOption ? '1' : '0'}`}} onClick={()=>setShowOption(!isShowOption)} className={styles.option_btn}>\r\n                    <CgMoreAlt/>\r\n                    {isShowOption && <CommentOption post={post} setIsEdit={setIsEdit} comment={comment} />}\r\n                </div>\r\n                }\r\n            </div>\r\n            <div className={styles.time}>{moment(post.createdAt).fromNow().replace(/(ago)+/g , '')}</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentCard\r\n"]},"metadata":{},"sourceType":"module"}