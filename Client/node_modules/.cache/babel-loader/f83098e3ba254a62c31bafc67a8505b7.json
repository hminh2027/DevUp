{"ast":null,"code":"import { deleteAPI, postAPI } from \"../../apis/Axios\";\nexport const createComment = (auth, newComment, post) => async dispatch => {\n  // logic\n  const newPost = { ...post,\n    comments: [...post.comments, newComment]\n  };\n  let newPosts = [];\n\n  for (let i = 0; i < post.length; i++) {\n    if (post[i]._id === post._id) newPosts.push(newPost);else newPosts.push(post[i]);\n  }\n\n  dispatch({\n    type: 'UPDATE_POST',\n    payload: newPost\n  });\n\n  try {\n    const data = { ...newComment,\n      postId: post._id,\n      postUserId: post.user._id\n    };\n    const res = await postAPI('comment', data, auth.token);\n    console.log(res);\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const deleteComment = (auth, comment, post) => async dispatch => {\n  try {\n    // delete the main and reply comments\n    const deleteArr = [...post.comments.filter(cmt => cmt.reply === comment._id), comment];\n    deleteArr.forEach(item => {\n      deleteAPI(`comment/${item._id}`, auth.token);\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};","map":{"version":3,"sources":["D:/Project Web/PROJECT 12 (Only MERN)/Client/client/src/store/actions/commentAction.js"],"names":["deleteAPI","postAPI","createComment","auth","newComment","post","dispatch","newPost","comments","newPosts","i","length","_id","push","type","payload","data","postId","postUserId","user","res","token","console","log","err","error","response","msg","deleteComment","comment","deleteArr","filter","cmt","reply","forEach","item"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,OAApB,QAAmC,kBAAnC;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,IAAD,EAAOC,UAAP,EAAmBC,IAAnB,KAA4B,MAAOC,QAAP,IAAoB;AACzE;AACA,QAAMC,OAAO,GAAG,EAAC,GAAGF,IAAJ;AAAUG,IAAAA,QAAQ,EAAE,CAAC,GAAGH,IAAI,CAACG,QAAT,EAAmBJ,UAAnB;AAApB,GAAhB;AACA,MAAIK,QAAQ,GAAG,EAAf;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAACL,IAAI,CAACM,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAChC,QAAGL,IAAI,CAACK,CAAD,CAAJ,CAAQE,GAAR,KAAgBP,IAAI,CAACO,GAAxB,EAA6BH,QAAQ,CAACI,IAAT,CAAcN,OAAd,EAA7B,KACKE,QAAQ,CAACI,IAAT,CAAcR,IAAI,CAACK,CAAD,CAAlB;AACR;;AACDJ,EAAAA,QAAQ,CAAC;AAACQ,IAAAA,IAAI,EAAE,aAAP;AAAsBC,IAAAA,OAAO,EAAER;AAA/B,GAAD,CAAR;;AAEA,MAAI;AACA,UAAMS,IAAI,GAAG,EAAC,GAAGZ,UAAJ;AAAgBa,MAAAA,MAAM,EAAEZ,IAAI,CAACO,GAA7B;AAAkCM,MAAAA,UAAU,EAAEb,IAAI,CAACc,IAAL,CAAUP;AAAxD,KAAb;AACA,UAAMQ,GAAG,GAAG,MAAMnB,OAAO,CAAC,SAAD,EAAYe,IAAZ,EAAkBb,IAAI,CAACkB,KAAvB,CAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAEH,GALD,CAKE,OAAMI,GAAN,EAAW;AACTlB,IAAAA,QAAQ,CAAC;AAACQ,MAAAA,IAAI,EAAE,OAAP;AAAgBC,MAAAA,OAAO,EAAE;AAACU,QAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaV,IAAb,CAAkBW;AAA1B;AAAzB,KAAD,CAAR;AACH;AACJ,CAnBM;AAqBP,OAAO,MAAMC,aAAa,GAAG,CAACzB,IAAD,EAAO0B,OAAP,EAAgBxB,IAAhB,KAAyB,MAAOC,QAAP,IAAoB;AACtE,MAAI;AACA;AACA,UAAMwB,SAAS,GAAG,CAAC,GAAGzB,IAAI,CAACG,QAAL,CAAcuB,MAAd,CAAqBC,GAAG,IAAEA,GAAG,CAACC,KAAJ,KAAYJ,OAAO,CAACjB,GAA9C,CAAJ,EAAwDiB,OAAxD,CAAlB;AAEAC,IAAAA,SAAS,CAACI,OAAV,CAAkBC,IAAI,IAAE;AACpBnC,MAAAA,SAAS,CAAE,WAAUmC,IAAI,CAACvB,GAAI,EAArB,EAAwBT,IAAI,CAACkB,KAA7B,CAAT;AACH,KAFD;AAIH,GARD,CAQE,OAAMG,GAAN,EAAW;AACTlB,IAAAA,QAAQ,CAAC;AAACQ,MAAAA,IAAI,EAAE,OAAP;AAAgBC,MAAAA,OAAO,EAAE;AAACU,QAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaV,IAAb,CAAkBW;AAA1B;AAAzB,KAAD,CAAR;AACH;AACJ,CAZM","sourcesContent":["import { deleteAPI, postAPI } from \"../../apis/Axios\";\r\n\r\nexport const createComment = (auth, newComment, post) => async (dispatch) => {\r\n    // logic\r\n    const newPost = {...post, comments: [...post.comments, newComment]};\r\n    let newPosts = [];\r\n\r\n    for (let i = 0; i<post.length; i++) {\r\n        if(post[i]._id === post._id) newPosts.push(newPost);\r\n        else newPosts.push(post[i]);\r\n    }\r\n    dispatch({type: 'UPDATE_POST', payload: newPost});\r\n\r\n    try {\r\n        const data = {...newComment, postId: post._id, postUserId: post.user._id}\r\n        const res = await postAPI('comment', data, auth.token);\r\n        console.log(res);\r\n\r\n    } catch(err) {\r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}});\r\n    }\r\n}\r\n\r\nexport const deleteComment = (auth, comment, post) => async (dispatch) => {\r\n    try {\r\n        // delete the main and reply comments\r\n        const deleteArr = [...post.comments.filter(cmt=>cmt.reply===comment._id), comment];\r\n\r\n        deleteArr.forEach(item=>{\r\n            deleteAPI(`comment/${item._id}`, auth.token);\r\n        })\r\n\r\n    } catch(err) {\r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}});\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}