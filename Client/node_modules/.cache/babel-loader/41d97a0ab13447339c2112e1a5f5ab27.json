{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\notification\\\\NotificationDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { GrFormClose } from 'react-icons/gr';\nimport { readNotice } from '../../store/actions/noticeAction';\nimport RoundWrapper from '../util/RoundWrapper';\nimport TagIcon from '../util/TagIcon';\nimport styles from './NotificationDisplay.module.css';\nimport moment from 'moment';\nimport Avatar from '../util/Avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NotificationDisplay = () => {\n  _s();\n\n  const ref = useRef();\n  const dispatch = useDispatch();\n  const {\n    notice,\n    auth\n  } = useSelector(state => state);\n  const [isShow, setIsShow] = useState(false);\n  const [msg, setMsg] = useState({});\n  useEffect(() => {\n    if (!notice.popup) return;\n    setIsShow(true);\n    setMsg(notice.data[0]);\n  }, [notice]);\n  useEffect(() => {\n    isShow && setTimeout(() => {\n      closeHandler();\n    }, 5000);\n  }, [isShow]);\n\n  const readHandler = () => {\n    dispatch(readNotice(auth, msg));\n  };\n\n  const closeHandler = () => {// ref.current.style.left = '-20%'\n    // setTimeout(() => {\n    //     dispatch({type:'SHOW_NOTICE', payload: false})\n    //     setIsShow(false)\n    // }, 300)\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isShow && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      className: styles.notice_wrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.heading,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.title,\n            children: \"New Notification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: closeHandler,\n            className: styles.close,\n            children: /*#__PURE__*/_jsxDEV(GrFormClose, {\n              className: styles.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 78\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          onClick: readHandler,\n          to: `/post/${msg.url}`,\n          replace: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.content,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.avatar,\n              children: /*#__PURE__*/_jsxDEV(RoundWrapper, {\n                margin: \"0 .7rem 0 0\",\n                diameter: \"60px\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: msg.user.avatar,\n                  alt: \"avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.tag_icon_wrapper,\n                  children: /*#__PURE__*/_jsxDEV(TagIcon, {\n                    tag: msg.tag\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.body,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.text_noti,\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  className: styles.name,\n                  children: msg.user.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 37\n                }, this), \" \", msg.text]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.time,\n                children: moment(msg.createdAt).fromNow()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), msg.media && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.image_wrapper,\n              children: msg.media.match(/video/i) ? /*#__PURE__*/_jsxDEV(\"video\", {\n                src: msg.media,\n                alt: \"media\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                src: msg.media,\n                alt: \"media\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(NotificationDisplay, \"Aw3WW+DDPqKNaAWr9TdQFBjelpk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = NotificationDisplay;\nexport default NotificationDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationDisplay\");","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/notification/NotificationDisplay.js"],"names":["React","useEffect","useRef","useState","useDispatch","useSelector","Link","GrFormClose","readNotice","RoundWrapper","TagIcon","styles","moment","Avatar","NotificationDisplay","ref","dispatch","notice","auth","state","isShow","setIsShow","msg","setMsg","popup","data","setTimeout","closeHandler","readHandler","notice_wrapper","container","heading","title","close","icon","url","content","avatar","user","tag_icon_wrapper","tag","body","text_noti","name","username","text","time","createdAt","fromNow","media","image_wrapper","match"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link  } from 'react-router-dom'\r\n\r\nimport {GrFormClose} from 'react-icons/gr'\r\n\r\nimport { readNotice } from '../../store/actions/noticeAction'\r\n\r\nimport RoundWrapper from '../util/RoundWrapper'\r\nimport TagIcon from '../util/TagIcon'\r\n\r\nimport styles from './NotificationDisplay.module.css'\r\nimport moment from 'moment'\r\nimport Avatar from '../util/Avatar'\r\n\r\nconst NotificationDisplay = () => {\r\n    const ref = useRef()\r\n    const dispatch = useDispatch()\r\n\r\n    const {notice, auth} = useSelector(state=>state)\r\n    const [isShow, setIsShow] = useState(false)\r\n    const [msg, setMsg] = useState({})\r\n\r\n    useEffect(()=>{\r\n        if(!notice.popup) return\r\n        setIsShow(true)\r\n        setMsg(notice.data[0])\r\n\r\n    },[notice])\r\n\r\n    useEffect(()=>{\r\n        isShow && setTimeout(() => {\r\n            closeHandler()\r\n        }, 5000)\r\n    },[isShow])\r\n\r\n    const readHandler = () => {\r\n        dispatch(readNotice(auth, msg))\r\n    }\r\n\r\n    const closeHandler = () => {\r\n        // ref.current.style.left = '-20%'\r\n        // setTimeout(() => {\r\n        //     dispatch({type:'SHOW_NOTICE', payload: false})\r\n        //     setIsShow(false)\r\n        // }, 300)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isShow && \r\n            <div ref={ref} className={styles.notice_wrapper}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.heading}>\r\n                        <div className={styles.title}>New Notification</div>\r\n                        <div onClick={closeHandler} className={styles.close}><GrFormClose className={styles.icon} /></div>\r\n                    </div>\r\n                    <Link onClick={readHandler} to={`/post/${msg.url}`} replace>\r\n                        <div className={styles.content}>\r\n                            <div className={styles.avatar}>\r\n                                {/* <Avatar id={msg.id} src={msg.user.avatar} diameter='4rem' /> */}\r\n                                <RoundWrapper margin='0 .7rem 0 0' diameter='60px'>\r\n                                    <img src={msg.user.avatar} alt='avatar'/>\r\n                                    <div className={styles.tag_icon_wrapper}>\r\n                                        <TagIcon tag={msg.tag} />\r\n                                    </div>\r\n                                </RoundWrapper>                          \r\n                            </div>\r\n                            <div className={styles.body}>\r\n                                <div className={styles.text_noti}>\r\n                                    <b className={styles.name}>{msg.user.username}</b> {msg.text}\r\n                                </div>\r\n                                <div className={styles.time}>{moment(msg.createdAt).fromNow()}</div>\r\n                            </div>\r\n                            {msg.media && <div className={styles.image_wrapper}>\r\n                                {msg.media.match(/video/i) ? \r\n                                <video src={msg.media} alt='media' />\r\n                                :\r\n                                <img src={msg.media} alt='media' />\r\n                                }    \r\n                            </div>}\r\n                        </div>                        \r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotificationDisplay\r\n"]},"metadata":{},"sourceType":"module"}