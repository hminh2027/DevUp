{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\custom router\\\\PageRender.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport PageNotFound from '../../views/PageNotFound/PageNotFound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PageRender = () => {\n  _s();\n\n  const {\n    page\n  } = useParams();\n  const {\n    auth\n  } = useSelector(state => state);\n  let pageName = '';\n  if (auth.token) pageName = `${page}`;\n  return generatePage(pageName);\n};\n\n_s(PageRender, \"lpJpoh9Cg8FPZUvrK5mQWVD577I=\", false, function () {\n  return [useParams, useSelector];\n});\n\n_c = PageRender;\n\nconst generatePage = pageName => {\n  const page = pageName.charAt(0).toUpperCase() + pageName.slice(1);\n\n  const component = () => require(`../../views/${page}/${page}`).default;\n\n  try {\n    return /*#__PURE__*/React.createElement(component());\n  } catch (err) {\n    return /*#__PURE__*/_jsxDEV(PageNotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"PageRender\");","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/custom router/PageRender.js"],"names":["React","useSelector","useParams","PageNotFound","PageRender","page","auth","state","pageName","token","generatePage","charAt","toUpperCase","slice","component","require","default","createElement","err"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAC5B,QAAM;AAACC,IAAAA;AAAD,MAASH,SAAS,EAAxB;AACA,QAAM;AAACI,IAAAA;AAAD,MAASL,WAAW,CAACM,KAAK,IAAEA,KAAR,CAA1B;AAEA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAGF,IAAI,CAACG,KAAR,EAAeD,QAAQ,GAAI,GAAEH,IAAK,EAAnB;AAEf,SACIK,YAAY,CAACF,QAAD,CADhB;AAGH,CAVM;;GAAMJ,U;UACMF,S,EACAD,W;;;KAFNG,U;;AAYb,MAAMM,YAAY,GAAIF,QAAD,IAAc;AAC/B,QAAMH,IAAI,GAAGG,QAAQ,CAACG,MAAT,CAAgB,CAAhB,EAAmBC,WAAnB,KAAmCJ,QAAQ,CAACK,KAAT,CAAe,CAAf,CAAhD;;AACA,QAAOC,SAAS,GAAG,MAAMC,OAAO,CAAE,eAAcV,IAAK,IAAGA,IAAK,EAA7B,CAAP,CAAuCW,OAAhE;;AAEA,MAAI;AACA,wBAAOhB,KAAK,CAACiB,aAAN,CAAoBH,SAAS,EAA7B,CAAP;AAEH,GAHD,CAGE,OAAOI,GAAP,EAAY;AACV,wBAAO,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACJ,CAVD","sourcesContent":["import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport PageNotFound from '../../views/PageNotFound/PageNotFound'\r\n\r\nexport const PageRender = () => {\r\n    const {page} = useParams()\r\n    const {auth} = useSelector(state=>state)\r\n\r\n    let pageName = ''\r\n    if(auth.token) pageName = `${page}`\r\n\r\n    return (\r\n        generatePage(pageName)  \r\n    )\r\n}\r\n\r\nconst generatePage = (pageName) => {\r\n    const page = pageName.charAt(0).toUpperCase() + pageName.slice(1)\r\n    const  component = () => require(`../../views/${page}/${page}`).default\r\n\r\n    try {\r\n        return React.createElement(component())\r\n\r\n    } catch (err) {\r\n        return <PageNotFound/>\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}