{"ast":null,"code":"import { getAPI, patchAPI } from \"../../apis/Axios\";\nexport const getUser = (auth, id) => async dispatch => {\n  try {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        loading: true\n      }\n    });\n    const res = await getAPI(`/user/${id}`, auth.token);\n    console.log(res.data); // dispatch({type:'GET_USER', payload: res.data});\n\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        loading: false\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const follow = (auth, user) => async dispatch => {\n  let profileUser = { ...user,\n    followers: [...user.followers, auth.user]\n  };\n  dispatch({\n    type: 'FOLLOW',\n    payload: profileUser\n  });\n  dispatch({\n    type: 'AUTH',\n    payload: { ...auth,\n      user: { ...auth.user,\n        following: [...auth.user.following, profileUser]\n      }\n    }\n  });\n\n  try {\n    const res = await patchAPI(`user/${user._id}/follow`, null, auth.token);\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const unfollow = (auth, user) => async dispatch => {\n  let newFollowers = [];\n\n  for (let i = 0; i < user.followers.length; i++) {\n    if (auth.user._id === user.followers[i]._id) console.log('u out!');else newFollowers.push(user.followers[i]);\n  }\n\n  console.log(newFollowers);\n  let profileUser = { ...user,\n    followers: newFollowers\n  };\n  dispatch({\n    type: 'UNFOLLOW',\n    payload: profileUser\n  });\n  dispatch({\n    type: 'AUTH',\n    payload: { ...auth,\n      user: { ...auth.user,\n        following: [...auth.user.following, profileUser]\n      }\n    }\n  });\n\n  try {\n    const res = await patchAPI(`user/${user._id}/unfollow`, null, auth.token);\n  } catch (err) {\n    dispatch({\n      type: 'ALERT',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};","map":{"version":3,"sources":["D:/Project Web/PROJECT 12 (Only MERN)/Client/client/src/store/actions/profileAction.js"],"names":["getAPI","patchAPI","getUser","auth","id","dispatch","type","payload","loading","res","token","console","log","data","err","error","response","msg","follow","user","profileUser","followers","following","_id","unfollow","newFollowers","i","length","push"],"mappings":"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","sourcesContent":["import { getAPI, patchAPI } from \"../../apis/Axios\"\r\n\r\nexport const getUser= (auth, id) => async (dispatch)=> {\r\n    try {\r\n        dispatch({type: 'ALERT', payload: {loading: true}})\r\n        const res = await getAPI(`/user/${id}`, auth.token);\r\n        console.log(res.data)\r\n        // dispatch({type:'GET_USER', payload: res.data});\r\n        dispatch({type: 'ALERT', payload: {loading: false}})\r\n\r\n    } catch(err) {\r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}});\r\n    }\r\n}\r\n\r\nexport const follow = (auth, user) => async (dispatch) => {\r\n    let profileUser = {...user, followers: [...user.followers, auth.user]};\r\n\r\n        dispatch({type: 'FOLLOW' , payload: profileUser});        \r\n        dispatch({type: 'AUTH', payload: {...auth, user: {...auth.user, following: [...auth.user.following, profileUser]}}});\r\n\r\n    try {\r\n        const res = await patchAPI(`user/${user._id}/follow`, null, auth.token);\r\n    \r\n    } catch(err) {\r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}});\r\n    }\r\n}\r\n\r\nexport const unfollow = (auth, user) => async (dispatch) => {\r\n    let  newFollowers = []; \r\n    for (let i = 0; i < user.followers.length; i++) {\r\n        if(auth.user._id === user.followers[i]._id) console.log('u out!');\r\n        else newFollowers.push(user.followers[i]);\r\n    }\r\n\r\n    console.log(newFollowers)\r\n    let profileUser = {...user, followers: newFollowers};\r\n\r\n        dispatch({type: 'UNFOLLOW' , payload: profileUser});\r\n        dispatch({type: 'AUTH', payload: {...auth, user: {...auth.user, following: [...auth.user.following, profileUser]}}});\r\n\r\n    try {\r\n        const res = await patchAPI(`user/${user._id}/unfollow`, null, auth.token);\r\n\r\n    } catch(err) {\r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}});\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}