{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\views\\\\Profile\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport { getUser } from '../../store/actions/profileAction';\nimport { useMediaQuery } from 'react-responsive';\nimport Header from '../../components/header/Header';\nimport FollowBtn from '../../components/profile/FollowBtn';\nimport EditBtn from '../../components/profile/EditBtn';\nimport FollowBar from '../../components/profile/FollowBar';\nimport InfiniteList from '../../components/util/InfiniteList';\nimport PostCard from '../../components/post/PostCard';\nimport { IoInformation } from 'react-icons/io5';\nimport { IoMdGrid } from 'react-icons/io';\nimport { GoFileMedia } from 'react-icons/go';\nimport { FaUser } from 'react-icons/fa';\nimport { GiPhone } from 'react-icons/gi';\nimport { HiHome } from 'react-icons/hi';\nimport Avatar from '../../components/util/Avatar';\nimport Spinner from '../../assets/Spinner.png';\nimport styles from './Profile.module.css';\nimport GridGallery from '../../components/util/GridGallery';\nimport FriendCard from '../../components/profile/Tab/FriendCard';\nimport MediaCard from '../../components/profile/Tab/MediaCard';\nimport Modal from '../../components/util/Modal';\nimport FollowModal from '../../components/modal/FollowModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    dispatch({\n      type: 'GET_USER',\n      payload: {}\n    });\n    dispatch({\n      type: 'GET_POSTS',\n      payload: []\n    });\n  }, [id]);\n  const {\n    auth,\n    profile,\n    post\n  } = useSelector(state => state);\n  const [isMe, setIsMe] = useState(false);\n  const [isFollower, setIsFollower] = useState(true);\n  const [media, setMedia] = useState([]);\n  const [activeTab, setActiveTab] = useState(0);\n  const [showFollow, setShowFollow] = useState(false);\n  useEffect(() => {\n    dispatch(getUser(auth, id));\n  }, [auth.user._id, dispatch, id]);\n  useEffect(() => {\n    let media = [];\n    post.posts.map(e => {\n      if (e.media.length > 0) {\n        media.push( /*#__PURE__*/_jsxDEV(MediaCard, {\n          post: e\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 28\n        }, this));\n      }\n    });\n    setMedia(media);\n  }, [post.posts]);\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1224px)'\n  });\n  useEffect(() => {\n    if (profile.loading || Object.keys(profile.user).length === 0) return;\n    let tempFollowers = profile.user.followers.slice(0, 6);\n    let tempFollowing = profile.user.following.slice(0, 6);\n    let output = [];\n    tempFollowers.map(e => {\n      output.push( /*#__PURE__*/_jsxDEV(FriendCard, {\n        user: e\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }, this));\n    });\n    setFollowers(output);\n    output = [];\n    tempFollowing.map(e => {\n      output.push( /*#__PURE__*/_jsxDEV(FriendCard, {\n        user: e\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this));\n    });\n    setFollowing(output);\n  }, [profile]);\n  useEffect(() => {\n    if (profile.user._id === auth.user._id) setIsMe(true);else setIsMe(false);\n  }, [auth.user._id, profile.user._id]);\n  const tabs = [{\n    icon: /*#__PURE__*/_jsxDEV(IoMdGrid, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 16\n    }, this),\n    label: 'post'\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(IoInformation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 16\n    }, this),\n    label: 'about'\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(GoFileMedia, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 16\n    }, this),\n    label: 'media'\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showFollow && /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(Modal, {\n      setIsEdit: setShowFollow,\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(FollowModal, {\n        title: isFollower ? 'Followers' : 'Following',\n        list: isFollower ? profile.user.followers : profile.user.following\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this), portal), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.profile_wrapper,\n      children: [isDesktop && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.leftside,\n        children: !profile.loading && /*#__PURE__*/_jsxDEV(FollowBar, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"inf_user_posts\",\n        className: styles.container,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.profile,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundImage: `url('${profile.user.background}')`\n            },\n            className: styles.background\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.information,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.avatar_wrapper,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.avatar,\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  src: profile.user.avatar,\n                  id: profile.user._id,\n                  diameter: \"15rem\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.introduce,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.name,\n                children: [!profile.loading && profile.user.username, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.bios,\n                children: [!profile.loading && profile.user.bio, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), isMe ? /*#__PURE__*/_jsxDEV(EditBtn, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 37\n            }, this) : !profile.loading && /*#__PURE__*/_jsxDEV(FollowBtn, {\n              user: profile.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 71\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tabs_wrapper,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.tabs,\n              children: tabs.map((tab, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: activeTab == index ? {\n                  borderTop: '1px solid #262626',\n                  margin: '-1px 2rem 0'\n                } : {},\n                onClick: () => setActiveTab(index),\n                className: styles.tab,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.icon_wrapper,\n                  children: tab.icon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.text,\n                  children: tab.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 41\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this), activeTab == 0 && (profile.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.spinner_wrapper,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Spinner,\n                alt: \"spinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 73\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(InfiniteList, {\n              action: \"GET_MORE_POSTS\",\n              api: \"post/user_posts\",\n              list: post.posts,\n              elem: \"inf_user_posts\",\n              id: profile.user._id,\n              children: post.posts.length > 0 ? post.posts.map(e => /*#__PURE__*/_jsxDEV(PostCard, {\n                post: e\n              }, e._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 41\n              }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.null,\n                children: \"No post available!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 33\n            }, this)), activeTab == 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.tab_content,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.details,\n                children: [/*#__PURE__*/_jsxDEV(FaUser, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 69\n                }, this), \" Gender: \", profile.user.gender]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.details,\n                children: [/*#__PURE__*/_jsxDEV(GiPhone, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 69\n                }, this), \" Tel: \", profile.user.tel]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.details,\n                children: [/*#__PURE__*/_jsxDEV(HiHome, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 69\n                }, this), \" Address: \", profile.user.address]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this), activeTab == 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.tab_content,\n              children: media.length > 0 ? /*#__PURE__*/_jsxDEV(GridGallery, {\n                length: \"3\",\n                list: media\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.null,\n                children: \"No media available!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Profile, \"hKF02/a+61U7R2ao8g3IZxaLaxY=\", false, function () {\n  return [useDispatch, useParams, useSelector, useMediaQuery];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/views/Profile/Profile.js"],"names":["React","useEffect","useState","useParams","useDispatch","useSelector","ReactDOM","getUser","useMediaQuery","Header","FollowBtn","EditBtn","FollowBar","InfiniteList","PostCard","IoInformation","IoMdGrid","GoFileMedia","FaUser","GiPhone","HiHome","Avatar","Spinner","styles","GridGallery","FriendCard","MediaCard","Modal","FollowModal","Profile","dispatch","id","type","payload","auth","profile","post","state","isMe","setIsMe","isFollower","setIsFollower","media","setMedia","activeTab","setActiveTab","showFollow","setShowFollow","user","_id","posts","map","e","length","push","isDesktop","query","loading","Object","keys","tempFollowers","followers","slice","tempFollowing","following","output","setFollowers","setFollowing","tabs","icon","label","createPortal","portal","profile_wrapper","leftside","container","backgroundImage","background","information","avatar_wrapper","avatar","introduce","name","username","bios","bio","tabs_wrapper","tab","index","borderTop","margin","icon_wrapper","text","spinner_wrapper","null","tab_content","details","gender","tel","address"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {useParams} from 'react-router'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport { getUser } from '../../store/actions/profileAction'\r\nimport { useMediaQuery } from 'react-responsive'\r\n\r\nimport Header from '../../components/header/Header'\r\nimport FollowBtn from '../../components/profile/FollowBtn'\r\nimport EditBtn from '../../components/profile/EditBtn'\r\nimport FollowBar from '../../components/profile/FollowBar'\r\nimport InfiniteList from '../../components/util/InfiniteList'\r\nimport PostCard from '../../components/post/PostCard'\r\n\r\nimport {IoInformation} from 'react-icons/io5'\r\nimport {IoMdGrid} from 'react-icons/io'\r\nimport {GoFileMedia} from 'react-icons/go'\r\nimport {FaUser} from 'react-icons/fa'\r\nimport {GiPhone} from 'react-icons/gi'\r\nimport {HiHome} from 'react-icons/hi'\r\n\r\nimport Avatar from '../../components/util/Avatar'\r\nimport Spinner from '../../assets/Spinner.png'\r\n\r\nimport styles from './Profile.module.css'\r\nimport GridGallery from '../../components/util/GridGallery'\r\nimport FriendCard from '../../components/profile/Tab/FriendCard'\r\nimport MediaCard from '../../components/profile/Tab/MediaCard'\r\nimport Modal from '../../components/util/Modal'\r\nimport FollowModal from '../../components/modal/FollowModal'\r\n\r\nconst Profile = () => {   \r\n    const dispatch = useDispatch()\r\n    const {id} = useParams()\r\n\r\n    useEffect(() => {\r\n        dispatch({type:'GET_USER', payload: {}})\r\n        dispatch({type:'GET_POSTS', payload: []})\r\n        \r\n    }, [id])\r\n\r\n    const {auth, profile, post} = useSelector(state=> state)\r\n\r\n    const [isMe, setIsMe] = useState(false)\r\n    const [isFollower, setIsFollower] = useState(true)\r\n    \r\n    const [media, setMedia] = useState([])\r\n    const [activeTab, setActiveTab] = useState(0)\r\n    const [showFollow, setShowFollow] = useState(false)\r\n\r\n    useEffect(() => {\r\n        dispatch(getUser(auth, id))\r\n\r\n    },[auth.user._id, dispatch, id])\r\n\r\n    useEffect(() => {\r\n        let media = []\r\n        post.posts.map(e => {\r\n            if(e.media.length > 0){\r\n                media.push(<MediaCard post={e} />)\r\n            }\r\n        })\r\n        \r\n        setMedia(media)\r\n\r\n    }, [post.posts])\r\n\r\n    const isDesktop = useMediaQuery({ query: '(min-width: 1224px)' })\r\n\r\n    useEffect(() => {\r\n        if(profile.loading || Object.keys(profile.user).length === 0) return\r\n        let tempFollowers =  profile.user.followers.slice(0, 6)\r\n        let tempFollowing =  profile.user.following.slice(0, 6)\r\n\r\n        let output = []\r\n\r\n        tempFollowers.map(e=>{\r\n            output.push(<FriendCard user={e} />)\r\n        })\r\n\r\n        setFollowers(output)\r\n        output = []\r\n\r\n        tempFollowing.map(e=>{\r\n            output.push(<FriendCard user={e} />)\r\n        })\r\n\r\n        setFollowing(output)\r\n\r\n    }, [profile])\r\n\r\n    useEffect(() => {\r\n        if(profile.user._id === auth.user._id) setIsMe(true);\r\n        else setIsMe(false)\r\n\r\n    }, [auth.user._id, profile.user._id])\r\n\r\n    const tabs = [\r\n        {icon: <IoMdGrid/>, label:'post'},\r\n        {icon: <IoInformation/>, label:'about'},\r\n        {icon: <GoFileMedia/>, label:'media'}\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            {showFollow && ReactDOM.createPortal(\r\n                <Modal setIsEdit={setShowFollow} width='100%' height='100%' >\r\n                    <FollowModal title={isFollower ? 'Followers':'Following'} list={isFollower ? profile.user.followers : profile.user.following} />\r\n                </Modal>\r\n            , portal)}\r\n            <Header/>\r\n            <div className={styles.profile_wrapper}>\r\n                {isDesktop && <div className={styles.leftside}>\r\n                    {!profile.loading && <FollowBar profile={profile} />}\r\n                </div>}\r\n\r\n                <div id='inf_user_posts' className={styles.container}>\r\n                    <div className={styles.profile}>\r\n                        <div style={{backgroundImage: `url('${profile.user.background}')`}} className={styles.background}></div>\r\n                        {/* Information */}\r\n                        <div className={styles.information}>\r\n                            <div className={styles.avatar_wrapper}>\r\n                                <div className={styles.avatar}>\r\n                                    <Avatar src={profile.user.avatar} id={profile.user._id} diameter='15rem' />\r\n                                </div>\r\n                            </div>\r\n                            <div className={styles.introduce}>\r\n                                <div className={styles.name}>{!profile.loading && profile.user.username} </div>\r\n                                <div className={styles.bios}>{!profile.loading && profile.user.bio} </div>\r\n                            </div>\r\n                            {isMe ? <EditBtn/> : (!profile.loading && <FollowBtn user={profile.user} />)}                      \r\n                        </div>\r\n                        {/* Follow */}\r\n                        \r\n                        {/* Tabs */}\r\n                        <div className={styles.tabs_wrapper}>\r\n                            <div className={styles.tabs}>\r\n                                {tabs.map((tab, index) => (\r\n                                    <div style={activeTab==index ? {borderTop:'1px solid #262626', margin: '-1px 2rem 0'} : {}} onClick={()=>setActiveTab(index)} key={index} className={styles.tab}>\r\n                                        <div className={styles.icon_wrapper}>{tab.icon}</div>\r\n                                        <div className={styles.text}>{tab.label}</div>\r\n                                    </div>)\r\n                                )}\r\n                            </div>\r\n                            {activeTab == 0 && \r\n                                (profile.loading ? \r\n                                <div className={styles.spinner_wrapper}><img src={Spinner} alt='spinner' /></div>\r\n                                : \r\n                                <InfiniteList action='GET_MORE_POSTS' api='post/user_posts' list={post.posts} elem='inf_user_posts' id={profile.user._id}>\r\n                                    {post.posts.length > 0 \r\n                                    ? \r\n                                    post.posts.map(e=>(\r\n                                        <PostCard key={e._id} post={e} />\r\n                                    ))\r\n                                    :\r\n                                    <div className={styles.null}>No post available!</div>}\r\n                                </InfiniteList>)}\r\n                            {activeTab == 1 &&\r\n                                <div className={styles.tab_content}>\r\n                                    <div className={styles.details}><FaUser/> Gender: {profile.user.gender}</div>\r\n                                    <div className={styles.details}><GiPhone/> Tel: {profile.user.tel}</div>\r\n                                    <div className={styles.details}><HiHome/> Address: {profile.user.address}</div>                                \r\n                                </div>\r\n                            }\r\n                            {activeTab == 2 &&\r\n                                <div className={styles.tab_content}>\r\n                                    {media.length > 0 \r\n                                    ? \r\n                                    <GridGallery length='3' list={media} />\r\n                                    :\r\n                                    <div className={styles.null}>No media available!</div>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n"]},"metadata":{},"sourceType":"module"}