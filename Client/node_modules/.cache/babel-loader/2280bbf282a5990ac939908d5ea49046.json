{"ast":null,"code":"export const imageUpload = async images => {\n  let imgArr = [];\n\n  for (const i of images) {\n    const formData = new FormData();\n    formData.append(\"file\", i);\n    formData.append(\"cloud_name\", \"minh2027\");\n    formData.append(\"upload_preset\", \"xf9mllsp\");\n    const res = await fetch(\"https://api.cloudinary.com/v1_1/minh2027/upload\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await res.json();\n    imgArr.push({\n      public_id: data.public_id,\n      url: data.secure_url\n    });\n  }\n\n  return imgArr;\n};\nexport const checkImage = image => {\n  let err;\n  if (!image) return err = 'Image not found!';\n  if (image.size > 1024 * 1024) return err = 'Image is larger than 1mb';\n  if (image.type !== 'image/png' && image.type !== 'image/jpeg' && image.type !== 'image/jpg') return err = 'Format is not supported';\n  return err;\n};","map":{"version":3,"sources":["D:/Project Web/PROJECT 12 (Only MERN)/Client/client/src/apis/Cloudinary.js"],"names":["imageUpload","images","imgArr","i","formData","FormData","append","res","fetch","method","body","data","json","push","public_id","url","secure_url","checkImage","image","err","size","type"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,MAAOC,MAAP,IAAkB;AACzC,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAI,MAAMC,CAAV,IAAeF,MAAf,EAAsB;AAClB,UAAMG,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,CAAxB;AACAC,IAAAA,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8B,UAA9B;AACAF,IAAAA,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiC,UAAjC;AAEA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iDAAD,EAAoD;AACvEC,MAAAA,MAAM,EAAE,MAD+D;AAEvEC,MAAAA,IAAI,EAAEN;AAFiE,KAApD,CAAvB;AAKA,UAAMO,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;AACAV,IAAAA,MAAM,CAACW,IAAP,CAAY;AAACC,MAAAA,SAAS,EAAEH,IAAI,CAACG,SAAjB;AAA4BC,MAAAA,GAAG,EAAEJ,IAAI,CAACK;AAAtC,KAAZ;AACH;;AACD,SAAOd,MAAP;AACH,CAjBM;AAmBP,OAAO,MAAMe,UAAU,GAAIC,KAAD,IAAW;AACjC,MAAIC,GAAJ;AACA,MAAG,CAACD,KAAJ,EAAW,OAAOC,GAAG,GAAC,kBAAX;AACX,MAAGD,KAAK,CAACE,IAAN,GAAa,OAAK,IAArB,EAA2B,OAAOD,GAAG,GAAC,0BAAX;AAC3B,MAAGD,KAAK,CAACG,IAAN,KAAe,WAAf,IAA8BH,KAAK,CAACG,IAAN,KAAe,YAA7C,IAA6DH,KAAK,CAACG,IAAN,KAAe,WAA/E,EAA4F,OAAOF,GAAG,GAAC,yBAAX;AAC5F,SAAOA,GAAP;AACH,CANM","sourcesContent":["export const imageUpload = async (images) => {\r\n    let imgArr = [];\r\n    for(const i of images){\r\n        const formData = new FormData();\r\n        formData.append(\"file\", i);\r\n        formData.append(\"cloud_name\", \"minh2027\");\r\n        formData.append(\"upload_preset\", \"xf9mllsp\")\r\n\r\n        const res = await fetch(\"https://api.cloudinary.com/v1_1/minh2027/upload\", {\r\n            method: \"POST\",\r\n            body: formData\r\n        });\r\n\r\n        const data = await res.json();\r\n        imgArr.push({public_id: data.public_id, url: data.secure_url});\r\n    }\r\n    return imgArr;\r\n}\r\n\r\nexport const checkImage = (image) => {\r\n    let err;\r\n    if(!image) return err='Image not found!';\r\n    if(image.size > 1024*1024) return err='Image is larger than 1mb';\r\n    if(image.type !== 'image/png' && image.type !== 'image/jpeg' && image.type !== 'image/jpg') return err='Format is not supported';\r\n    return err;\r\n}"]},"metadata":{},"sourceType":"module"}