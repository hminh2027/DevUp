{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\src\\\\components\\\\modal\\\\EditProjectModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { renameProject } from '../../store/actions/projectAction';\nimport styles from './EditProjectModal.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditProjectModal = ({\n  project,\n  setIsEdit\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    auth\n  } = useSelector(state => state);\n  const [loading, setLoading] = useState(false);\n  const [name, setName] = useState(project.name);\n\n  const submitHandler = async () => {\n    if (loading) return;\n    setLoading(true);\n    if (!name) return dispatch({\n      type: 'ALERT',\n      payload: {\n        error: 'Project name not allowed to be empty!'\n      }\n    });\n    await dispatch(renameProject(auth, name, project._id));\n    dispatch({\n      type: 'MODAL',\n      payload: false\n    });\n    setLoading(false);\n    setIsEdit(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.title,\n      children: \"Rename Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.input_wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Project's Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          backgroundColor: `${!name ? '#ffd0d0' : ''}`\n        },\n        spellCheck: \"false\",\n        placeholder: \"Name...\",\n        id: \"name\",\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        className: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitHandler,\n      className: styles.submit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditProjectModal, \"k2IK/L2/UE8DY6i0eO5IW1HQLzg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = EditProjectModal;\nexport default EditProjectModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProjectModal\");","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/src/components/modal/EditProjectModal.js"],"names":["React","useState","useDispatch","useSelector","renameProject","styles","EditProjectModal","project","setIsEdit","dispatch","auth","state","loading","setLoading","name","setName","submitHandler","type","payload","error","_id","container","title","input_wrapper","backgroundColor","e","target","value","input","submit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,mCAA9B;AAEA,OAAOC,MAAP,MAAmB,+BAAnB;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAA0B;AAAA;;AAC/C,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAM;AAACQ,IAAAA;AAAD,MAASP,WAAW,CAACQ,KAAK,IAAEA,KAAR,CAA1B;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAACM,OAAO,CAACO,IAAT,CAAhC;;AAEA,QAAME,aAAa,GAAG,YAAY;AAC9B,QAAGJ,OAAH,EAAY;AACZC,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAG,CAACC,IAAJ,EAAU,OAAOL,QAAQ,CAAC;AAACQ,MAAAA,IAAI,EAAE,OAAP;AAAgBC,MAAAA,OAAO,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR;AAAzB,KAAD,CAAf;AACV,UAAMV,QAAQ,CAACL,aAAa,CAACM,IAAD,EAAOI,IAAP,EAAaP,OAAO,CAACa,GAArB,CAAd,CAAd;AACAX,IAAAA,QAAQ,CAAC;AAACQ,MAAAA,IAAI,EAAE,OAAP;AAAgBC,MAAAA,OAAO,EAAE;AAAzB,KAAD,CAAR;AACAL,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAL,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH,GARD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACgB,SAAvB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEhB,MAAM,CAACiB,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAEjB,MAAM,CAACkB,aAAvB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,KAAK,EAAE;AAACC,UAAAA,eAAe,EAAG,GAAE,CAACV,IAAD,GAAM,SAAN,GAAgB,EAAG;AAAxC,SAAd;AAA0D,QAAA,UAAU,EAAC,OAArE;AAA6E,QAAA,WAAW,EAAC,SAAzF;AAAmG,QAAA,EAAE,EAAC,MAAtG;AAA6G,QAAA,IAAI,EAAC,MAAlH;AAAyH,QAAA,IAAI,EAAC,MAA9H;AAAqI,QAAA,KAAK,EAAEA,IAA5I;AAAkJ,QAAA,QAAQ,EAAEW,CAAC,IAAEV,OAAO,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtK;AAAwL,QAAA,SAAS,EAAEtB,MAAM,CAACuB;AAA1M;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAQ,MAAA,OAAO,EAAEZ,aAAjB;AAAgC,MAAA,SAAS,EAAEX,MAAM,CAACwB,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA5BD;;GAAMvB,gB;UACeJ,W,EAEFC,W;;;KAHbG,gB;AA8BN,eAAeA,gBAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { renameProject } from '../../store/actions/projectAction'\r\n\r\nimport styles from './EditProjectModal.module.css'\r\n\r\nconst EditProjectModal = ({project, setIsEdit}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const {auth} = useSelector(state=>state)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [name, setName] = useState(project.name)\r\n\r\n    const submitHandler = async () => {\r\n        if(loading) return;\r\n        setLoading(true)\r\n        if(!name) return dispatch({type: 'ALERT', payload: {error: 'Project name not allowed to be empty!'}})\r\n        await dispatch(renameProject(auth, name, project._id))\r\n        dispatch({type: 'MODAL', payload: false})\r\n        setLoading(false)\r\n        setIsEdit(false)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.title}>Rename Project</div>\r\n            <div className={styles.input_wrapper}>\r\n                <label htmlFor=\"name\" >Project's Name: </label>\r\n                <input style={{backgroundColor: `${!name?'#ffd0d0':''}`}} spellCheck=\"false\" placeholder='Name...' id='name' type='text' name='name' value={name} onChange={e=>setName(e.target.value)} className={styles.input}/>\r\n            </div>\r\n            <button onClick={submitHandler} className={styles.submit}>Submit</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditProjectModal\r\n"]},"metadata":{},"sourceType":"module"}