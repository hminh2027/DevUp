{"ast":null,"code":"import React,{useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import{BrowserRouter as Router,Route,Switch}from'react-router-dom';import ReactDOM from'react-dom';import Auth from'./views/Auth/Auth';import Home from'./views/Home/Home';import{PageRender}from'./components/custom router/PageRender';import ProtectedRoute from'./components/custom router/ProtectedRoute';import Alert from'./components/alert/Alert';import NotificationDisplay from'./components/notification/NotificationDisplay';import io from'socket.io-client';import SocketClient from'./SocketClient';import{getNotices}from'./store/actions/noticeAction';import{refreshToken}from'./store/actions/authAction';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var dispatch=useDispatch();var alert=document.getElementById('alert');var notification=document.getElementById('notification');var portal=document.getElementById('portal');var _useSelector=useSelector(function(state){return state;}),auth=_useSelector.auth;useEffect(function(){dispatch(refreshToken());var socket=io();dispatch({type:'SOCKET',payload:socket});return function(){return socket.close();};},[dispatch]);useEffect(function(){if(auth.token){dispatch(getNotices(auth));}},[dispatch,auth.token]);return/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/ReactDOM.createPortal(/*#__PURE__*/_jsx(Alert,{}),alert),/*#__PURE__*/ReactDOM.createPortal(/*#__PURE__*/_jsx(NotificationDisplay,{}),notification),auth.token&&/*#__PURE__*/_jsx(SocketClient,{}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:auth.token?Home:Auth}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/home\",component:auth.token?Home:Auth}),/*#__PURE__*/_jsx(ProtectedRoute,{exact:true,path:\"/:page\",component:PageRender}),/*#__PURE__*/_jsx(ProtectedRoute,{exact:true,path:\"/:page/:id\",component:PageRender})]})]});}export default App;","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/src/App.js"],"names":["React","useEffect","useSelector","useDispatch","BrowserRouter","Router","Route","Switch","ReactDOM","Auth","Home","PageRender","ProtectedRoute","Alert","NotificationDisplay","io","SocketClient","getNotices","refreshToken","App","dispatch","alert","document","getElementById","notification","portal","state","auth","socket","type","payload","close","token","createPortal"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,aAAvC,CACA,OAAQC,aAAa,GAAIC,CAAAA,MAAzB,CAAiCC,KAAjC,CAAwCC,MAAxC,KAAqD,kBAArD,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,OAASC,UAAT,KAA2B,uCAA3B,CACA,MAAOC,CAAAA,cAAP,KAA2B,2CAA3B,CAEA,MAAOC,CAAAA,KAAP,KAAkB,0BAAlB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,+CAAhC,CAEA,MAAOC,CAAAA,EAAP,KAAe,kBAAf,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,OAASC,UAAT,KAA2B,8BAA3B,CACA,OAAQC,YAAR,KAA2B,4BAA3B,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb,GAAMC,CAAAA,QAAQ,CAAGjB,WAAW,EAA5B,CAEA,GAAMkB,CAAAA,KAAK,CAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAd,CACA,GAAMC,CAAAA,YAAY,CAAGF,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAArB,CACA,GAAME,CAAAA,MAAM,CAAGH,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf,CAEA,iBAAiBrB,WAAW,CAAC,SAAAwB,KAAK,QAAIA,CAAAA,KAAJ,EAAN,CAA5B,CAAQC,IAAR,cAAQA,IAAR,CAGA1B,SAAS,CAAC,UAAI,CACZmB,QAAQ,CAACF,YAAY,EAAb,CAAR,CACA,GAAMU,CAAAA,MAAM,CAAGb,EAAE,EAAjB,CACAK,QAAQ,CAAC,CAACS,IAAI,CAAE,QAAP,CAAiBC,OAAO,CAAEF,MAA1B,CAAD,CAAR,CACA,MAAO,kBAAKA,CAAAA,MAAM,CAACG,KAAP,EAAL,EAAP,CAED,CANQ,CAMN,CAACX,QAAD,CANM,CAAT,CAQAnB,SAAS,CAAC,UAAI,CACZ,GAAG0B,IAAI,CAACK,KAAR,CAAe,CACbZ,QAAQ,CAACH,UAAU,CAACU,IAAD,CAAX,CAAR,CACD,CACF,CAJQ,CAIN,CAACP,QAAD,CAAWO,IAAI,CAACK,KAAhB,CAJM,CAAT,CAMA,mBACA,MAAC,MAAD,yBACGxB,QAAQ,CAACyB,YAAT,cAAsB,KAAC,KAAD,IAAtB,CAAiCZ,KAAjC,CADH,cAEGb,QAAQ,CAACyB,YAAT,cAAsB,KAAC,mBAAD,IAAtB,CAA8CT,YAA9C,CAFH,CAIGG,IAAI,CAACK,KAAL,eAAc,KAAC,YAAD,IAJjB,cAKE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,CAAsB,SAAS,CAAEL,IAAI,CAACK,KAAL,CAActB,IAAd,CAAqBD,IAAtD,EADF,cAEE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,OAAlB,CAA0B,SAAS,CAAEkB,IAAI,CAACK,KAAL,CAActB,IAAd,CAAqBD,IAA1D,EAFF,cAGE,KAAC,cAAD,EAAgB,KAAK,KAArB,CAAsB,IAAI,CAAC,QAA3B,CAAoC,SAAS,CAAEE,UAA/C,EAHF,cAIE,KAAC,cAAD,EAAgB,KAAK,KAArB,CAAsB,IAAI,CAAC,YAA3B,CAAwC,SAAS,CAAEA,UAAnD,EAJF,GALF,GADA,CAeD,CACD,cAAeQ,CAAAA,GAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport ReactDOM from 'react-dom'\n\nimport Auth from './views/Auth/Auth'\nimport Home from './views/Home/Home'\nimport { PageRender } from './components/custom router/PageRender'\nimport ProtectedRoute from './components/custom router/ProtectedRoute'\n\nimport Alert from './components/alert/Alert'\nimport NotificationDisplay from './components/notification/NotificationDisplay'\n\nimport io from 'socket.io-client'\nimport SocketClient from './SocketClient'\n\nimport { getNotices } from './store/actions/noticeAction'\nimport {refreshToken} from './store/actions/authAction'\n\nfunction App() {\n  const dispatch = useDispatch()\n  \n  const alert = document.getElementById('alert')\n  const notification = document.getElementById('notification')\n  const portal = document.getElementById('portal')\n\n  const  {auth}  = useSelector(state => state)\n\n\n  useEffect(()=>{\n    dispatch(refreshToken())\n    const socket = io()\n    dispatch({type: 'SOCKET', payload: socket})\n    return ()=> socket.close()\n    \n  }, [dispatch])\n\n  useEffect(()=>{\n    if(auth.token) {\n      dispatch(getNotices(auth))\n    }\n  }, [dispatch, auth.token])\n\n  return (\n  <Router>\n    {ReactDOM.createPortal(<Alert />, alert)}\n    {ReactDOM.createPortal(<NotificationDisplay/>, notification)}\n    \n    {auth.token && <SocketClient/>}\n    <Switch>\n      <Route exact path='/' component={auth.token ?  Home : Auth} />\n      <Route exact path='/home' component={auth.token ?  Home : Auth} />\n      <ProtectedRoute exact path='/:page' component={PageRender} />\n      <ProtectedRoute exact path='/:page/:id' component={PageRender} />\n    </Switch>\n  </Router>\n  )\n  \n}\nexport default App\n"]},"metadata":{},"sourceType":"module"}