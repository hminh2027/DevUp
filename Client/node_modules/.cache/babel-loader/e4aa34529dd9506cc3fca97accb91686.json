{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\views\\\\Profile\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUser } from '../../store/actions/profileAction';\nimport { useMediaQuery } from 'react-responsive';\nimport Header from '../../components/header/Header';\nimport FollowBtn from '../../components/profile/FollowBtn';\nimport EditBtn from '../../components/profile/EditBtn';\nimport FollowBar from '../../components/profile/FollowBar';\nimport InfiniteList from '../../components/util/InfiniteList';\nimport PostCard from '../../components/post/PostCard';\nimport { IoInformation } from 'react-icons/io5';\nimport { IoMdGrid } from 'react-icons/io';\nimport { GoFileMedia } from 'react-icons/go';\nimport Avatar from '../../components/util/Avatar';\nimport Spinner from '../../assets/Spinner.png';\nimport styles from './Profile.module.css';\nimport GridGallery from '../../components/util/GridGallery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const {\n    auth,\n    profile\n  } = useSelector(state => state);\n  const [userData, setUserData] = useState({});\n  const [isMe, setIsMe] = useState(false);\n  const [isFollower, setIsFollower] = useState(true);\n  const [activeTab, setActiveTab] = useState(0);\n  useEffect(() => {\n    dispatch(getUser(auth, id));\n  }, [auth, dispatch, id]);\n  useEffect(() => {\n    if (profile.user._id === auth.user._id) setIsMe(true);else setIsMe(false);\n  }, [auth, profile]);\n  useEffect(() => {\n    if (id === auth.user._id) setUserData(auth.user);else setUserData(profile.user);\n  }, [profile]);\n  const tabs = [{\n    icon: /*#__PURE__*/_jsxDEV(IoMdGrid, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this),\n    label: 'post'\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(IoInformation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this),\n    label: 'about'\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(GoFileMedia, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }, this),\n    label: 'media'\n  }];\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1224px)'\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.profile_wrapper,\n      children: [isDesktop && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.leftside,\n        children: !profile.loading && /*#__PURE__*/_jsxDEV(FollowBar, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"inf_user_posts\",\n        className: styles.container,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.profile,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundImage: `url('${profile.user.background}')`\n            },\n            className: styles.background\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.information,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.avatar_wrapper,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.avatar,\n                children: !profile.loading && /*#__PURE__*/_jsxDEV(Avatar, {\n                  src: profile.user.avatar,\n                  id: profile.user._id,\n                  diameter: \"15rem\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 58\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.introduce,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.name,\n                children: [!profile.loading && profile.user.username, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.bios,\n                children: [!profile.loading && profile.user.bio, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), isMe ? /*#__PURE__*/_jsxDEV(EditBtn, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this) : !profile.loading && /*#__PURE__*/_jsxDEV(FollowBtn, {\n              user: profile.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 71\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), !isDesktop && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.follow,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.heading,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.title,\n                children: isFollower ? 'Followers' : 'Following'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setIsFollower(!isFollower),\n                className: styles.btn,\n                children: isFollower ? 'Show following' : 'Show followers'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"body\",\n              children: isFollower ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.follower,\n                children: /*#__PURE__*/_jsxDEV(GridGallery, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.following,\n                children: \"b\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn\",\n                children: \"Show all\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tabs_wrapper,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.tabs,\n              children: tabs.map((tab, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: activeTab == index ? {\n                  borderTop: '1px solid #262626',\n                  margin: '-1px 2rem 0'\n                } : {},\n                onClick: () => setActiveTab(index),\n                className: styles.tab,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.icon_wrapper,\n                  children: tab.icon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.text,\n                  children: tab.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 37\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), activeTab == 0 && (profile.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.spinner_wrapper,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Spinner,\n                alt: \"spinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 73\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(InfiniteList, {\n              action: \"GET_MORE_POSTS\",\n              api: \"post/user_posts\",\n              list: profile.posts,\n              elem: \"inf_user_posts\",\n              id: profile.user._id,\n              children: profile.posts.length > 0 ? profile.posts.map(e => /*#__PURE__*/_jsxDEV(PostCard, {\n                post: e\n              }, e._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 41\n              }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"No post available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this)), activeTab == 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"about tab\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this), activeTab == 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"media tab\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Profile, \"zAgM1xdLUEr9JMeUufOj7rnOx+I=\", false, function () {\n  return [useDispatch, useParams, useSelector, useMediaQuery];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/views/Profile/Profile.js"],"names":["React","useEffect","useState","useParams","useDispatch","useSelector","getUser","useMediaQuery","Header","FollowBtn","EditBtn","FollowBar","InfiniteList","PostCard","IoInformation","IoMdGrid","GoFileMedia","Avatar","Spinner","styles","GridGallery","Profile","dispatch","id","auth","profile","state","userData","setUserData","isMe","setIsMe","isFollower","setIsFollower","activeTab","setActiveTab","user","_id","tabs","icon","label","isDesktop","query","profile_wrapper","leftside","loading","container","backgroundImage","background","information","avatar_wrapper","avatar","introduce","name","username","bios","bio","follow","heading","title","btn","follower","following","tabs_wrapper","map","tab","index","borderTop","margin","icon_wrapper","text","spinner_wrapper","posts","length","e"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getUser } from '../../store/actions/profileAction'\r\nimport { useMediaQuery } from 'react-responsive'\r\n\r\nimport Header from '../../components/header/Header'\r\nimport FollowBtn from '../../components/profile/FollowBtn'\r\nimport EditBtn from '../../components/profile/EditBtn'\r\nimport FollowBar from '../../components/profile/FollowBar'\r\nimport InfiniteList from '../../components/util/InfiniteList'\r\nimport PostCard from '../../components/post/PostCard'\r\nimport {IoInformation} from 'react-icons/io5'\r\nimport {IoMdGrid} from 'react-icons/io'\r\nimport {GoFileMedia} from 'react-icons/go'\r\n\r\nimport Avatar from '../../components/util/Avatar'\r\nimport Spinner from '../../assets/Spinner.png'\r\n\r\nimport styles from './Profile.module.css'\r\nimport GridGallery from '../../components/util/GridGallery'\r\n\r\nconst Profile = () => {   \r\n    const dispatch = useDispatch()\r\n    const {id} = useParams()\r\n\r\n    const {auth,profile} = useSelector(state=> state)\r\n\r\n    const [userData, setUserData] = useState({})\r\n    const [isMe, setIsMe] = useState(false)\r\n    const [isFollower, setIsFollower] = useState(true)\r\n\r\n    const [activeTab, setActiveTab] = useState(0)\r\n\r\n    useEffect(() => {\r\n        dispatch(getUser(auth,id));\r\n    },[auth, dispatch, id])\r\n\r\n    useEffect(() => {\r\n        if(profile.user._id === auth.user._id) setIsMe(true);\r\n        else setIsMe(false)\r\n    }, [auth, profile])\r\n\r\n    useEffect(()=>{\r\n        if(id === auth.user._id) setUserData(auth.user);\r\n        else setUserData(profile.user)\r\n    },[profile])\r\n\r\n    const tabs = [\r\n        {icon: <IoMdGrid/>, label:'post'},\r\n        {icon: <IoInformation/>, label:'about'},\r\n        {icon: <GoFileMedia/>, label:'media'}\r\n    ]\r\n\r\n    const isDesktop = useMediaQuery({ query: '(min-width: 1224px)' })\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <div className={styles.profile_wrapper}>\r\n                {isDesktop && <div className={styles.leftside}>\r\n                    {!profile.loading && <FollowBar profile={profile} />}\r\n                </div>}\r\n\r\n                <div id='inf_user_posts' className={styles.container}>\r\n                    <div className={styles.profile}>\r\n                        <div style={{backgroundImage: `url('${profile.user.background}')`}} className={styles.background}></div>\r\n                        {/* Information */}\r\n                        <div className={styles.information}>\r\n                            <div className={styles.avatar_wrapper}>\r\n                                <div className={styles.avatar}>\r\n                                    {!profile.loading && <Avatar src={profile.user.avatar} id={profile.user._id} diameter='15rem' />}\r\n                                </div>\r\n                            </div>\r\n                            <div className={styles.introduce}>\r\n                                <div className={styles.name}>{!profile.loading && profile.user.username} </div>\r\n                                <div className={styles.bios}>{!profile.loading && profile.user.bio} </div>\r\n                            </div>\r\n                            {isMe ? <EditBtn/> : (!profile.loading && <FollowBtn user={profile.user} />)}                      \r\n                        </div>\r\n                        {/* Follow */}\r\n                        {!isDesktop &&\r\n                        <div className={styles.follow}>\r\n                            <div className={styles.heading}>\r\n                                <div className={styles.title}>{isFollower ? 'Followers' : 'Following'}</div>\r\n                                <button onClick={()=>setIsFollower(!isFollower)} className={styles.btn}>{isFollower ? 'Show following' : 'Show followers'}</button>\r\n                            </div>\r\n                            <div className=\"body\">\r\n                                {isFollower ? \r\n                                <div className={styles.follower}>\r\n                                    \r\n                                    <GridGallery />\r\n                                </div>\r\n                                :\r\n                                <div className={styles.following}>b</div>\r\n                                }\r\n                            </div>\r\n                            <div className=\"footer\">\r\n                                <div className=\"btn\">Show all</div>\r\n                            </div>\r\n                            \r\n                        </div>}\r\n                        {/* Tabs */}\r\n                        <div className={styles.tabs_wrapper}>\r\n                            <div className={styles.tabs}>\r\n                                {tabs.map((tab, index) => (\r\n                                    <div style={activeTab==index ? {borderTop:'1px solid #262626', margin: '-1px 2rem 0'} : {}} onClick={()=>setActiveTab(index)} key={index} className={styles.tab}>\r\n                                        <div className={styles.icon_wrapper}>{tab.icon}</div>\r\n                                    <div className={styles.text}>{tab.label}</div>\r\n                                </div>)\r\n                                )}\r\n                            </div>\r\n                            {activeTab == 0 && \r\n                            (profile.loading ? \r\n                                <div className={styles.spinner_wrapper}><img src={Spinner} alt='spinner' /></div>\r\n                                : \r\n                                <InfiniteList action='GET_MORE_POSTS' api='post/user_posts' list={profile.posts} elem='inf_user_posts' id={profile.user._id}>\r\n                                    {profile.posts.length>0?profile.posts.map(e=>(\r\n                                        <PostCard key={e._id} post={e} />\r\n                                    ))\r\n                                    :\r\n                                    <div>No post available</div>}\r\n                                </InfiniteList>)}\r\n                            {activeTab == 1 &&\r\n                                <div>about tab</div>\r\n                            }\r\n                            {activeTab == 2 &&\r\n                                <div>media tab</div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>   \r\n    )\r\n}\r\n\r\nexport default Profile\r\n"]},"metadata":{},"sourceType":"module"}