{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\notification\\\\NotificationDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { GrFormClose } from 'react-icons/gr';\nimport RoundWrapper from '../util/RoundWrapper';\nimport TagIcon from '../util/TagIcon';\nimport styles from './NotificationDisplay.module.css';\nimport moment from 'moment';\nimport { readNotice } from '../../store/actions/noticeAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NotificationDisplay = () => {\n  _s();\n\n  const ref = useRef();\n  const dispatch = useDispatch();\n  const {\n    notice,\n    auth\n  } = useSelector(state => state);\n  const [isShow, setIsShow] = useState(false);\n  const [msg, setMsg] = useState({});\n  useEffect(() => {\n    if (!notice.popup) return;\n    setIsShow(true);\n    setMsg(notice.data[0]);\n  }, [notice]);\n  useEffect(() => {\n    isShow && setTimeout(() => {\n      closeHandler();\n    }, 5000);\n  }, [isShow]);\n\n  const readHandler = () => {\n    // dispatch(readNotice(auth, msg))\n    console.log('cc');\n  }; // const closeHandler = () => {\n  //     ref.current.style.left = '-20%';\n  //     setTimeout(() => {\n  //         dispatch({type:'SHOW_NOTICE', payload: false})\n  //         setIsShow(false)\n  //     }, 300);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isShow && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      className: styles.notice_wrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.heading,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.title,\n            children: \"New Notification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: closeHandler,\n            className: styles.close,\n            children: /*#__PURE__*/_jsxDEV(GrFormClose, {\n              className: styles.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 78\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: readHandler,\n          className: styles.content,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.avatar,\n            children: /*#__PURE__*/_jsxDEV(RoundWrapper, {\n              margin: \"0 .7rem 0 0\",\n              diameter: \"60px\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: msg.user.avatar,\n                alt: \"avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.tag_icon_wrapper,\n                children: /*#__PURE__*/_jsxDEV(TagIcon, {\n                  tag: msg.tag\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.body,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.text_noti,\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: msg.user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this), \" \", msg.text]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.time,\n              children: moment(msg.createdAt).fromNow()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), msg.image && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.image_wrapper,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: msg.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 77\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(NotificationDisplay, \"Aw3WW+DDPqKNaAWr9TdQFBjelpk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = NotificationDisplay;\nexport default NotificationDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationDisplay\");","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/notification/NotificationDisplay.js"],"names":["React","useEffect","useRef","useState","useDispatch","useSelector","Link","GrFormClose","RoundWrapper","TagIcon","styles","moment","readNotice","NotificationDisplay","ref","dispatch","notice","auth","state","isShow","setIsShow","msg","setMsg","popup","data","setTimeout","closeHandler","readHandler","console","log","notice_wrapper","container","heading","title","close","icon","content","avatar","user","tag_icon_wrapper","tag","body","text_noti","username","text","time","createdAt","fromNow","image","image_wrapper"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport {GrFormClose} from 'react-icons/gr'\r\nimport RoundWrapper from '../util/RoundWrapper'\r\nimport TagIcon from '../util/TagIcon'\r\nimport styles from './NotificationDisplay.module.css'\r\nimport moment from 'moment'\r\nimport { readNotice } from '../../store/actions/noticeAction'\r\n\r\nconst NotificationDisplay = () => {\r\n    const ref = useRef();\r\n    const dispatch = useDispatch();\r\n    const {notice, auth} = useSelector(state=>state);\r\n    const [isShow, setIsShow] = useState(false);\r\n    const [msg, setMsg] = useState({});\r\n\r\n    useEffect(()=>{\r\n        if(!notice.popup) return;\r\n        setIsShow(true);\r\n        setMsg(notice.data[0]);\r\n\r\n    },[notice])\r\n\r\n    useEffect(()=>{\r\n        isShow && setTimeout(() => {\r\n            closeHandler()\r\n        }, 5000);\r\n    },[isShow])\r\n\r\n    const readHandler = () => {\r\n        // dispatch(readNotice(auth, msg))\r\n        console.log('cc')\r\n    }\r\n\r\n    // const closeHandler = () => {\r\n    //     ref.current.style.left = '-20%';\r\n    //     setTimeout(() => {\r\n    //         dispatch({type:'SHOW_NOTICE', payload: false})\r\n    //         setIsShow(false)\r\n    //     }, 300);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            {isShow && \r\n            <div ref={ref} className={styles.notice_wrapper}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.heading}>\r\n                        <div className={styles.title}>New Notification</div>\r\n                        <div onClick={closeHandler} className={styles.close}><GrFormClose className={styles.icon} /></div>\r\n                    </div>\r\n                    {/* <Link  to={`post/${msg.url}`} replace={true} > */}\r\n                    <div onClick={readHandler} className={styles.content}>\r\n                        <div className={styles.avatar}>\r\n                            <RoundWrapper margin='0 .7rem 0 0' diameter='60px'>\r\n                                <img src={msg.user.avatar} alt='avatar'/>\r\n                                <div className={styles.tag_icon_wrapper}>\r\n                                    <TagIcon tag={msg.tag} />\r\n                                </div>\r\n                            </RoundWrapper>\r\n                            \r\n                        </div>\r\n                        <div className={styles.body}>\r\n                            <div className={styles.text_noti}>\r\n                                <b>{msg.user.username}</b> {msg.text}\r\n                            </div>\r\n                            <div className={styles.time}>{moment(msg.createdAt).fromNow()}</div>\r\n                        </div>\r\n                        {msg.image && <div className={styles.image_wrapper}><img src={msg.image}/></div>}\r\n                    </div>\r\n                    {/* </Link> */}\r\n                </div>\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotificationDisplay\r\n"]},"metadata":{},"sourceType":"module"}