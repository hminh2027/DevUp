{"ast":null,"code":"import _slicedToArray from\"D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useSelector}from'react-redux';import{CgMoreAlt}from'react-icons/cg';import{BsFillBellFill}from'react-icons/bs';import DropdownCard from'../util/DropdownCard';import NoticeCard from'./notices/NoticeCard';import NotificationOption from'./NotificationOption';import{useMediaQuery}from'react-responsive';import{motion,AnimatePresence}from\"framer-motion\";import Spinner from'../../assets/Spinner.png';import styles from'./NotificationDropdown.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var NotificationDropdown=function NotificationDropdown(_ref){var isShow=_ref.isShow,setIsShow=_ref.setIsShow;var _useSelector=useSelector(function(state){return state;}),notice=_useSelector.notice;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showOption=_useState2[0],setShowOption=_useState2[1];var isDesktop=useMediaQuery({query:'(min-width: 1224px)'});return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(DropdownCard,{isShow:isShow,setIsShow:setIsShow,right:\"0\",width:isDesktop?'30%':'90%',padding:isDesktop?'1rem':' 1rem 5%',children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.heading,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.title,children:\"Notification\"}),/*#__PURE__*/_jsxs(\"div\",{style:{opacity:\"\".concat(showOption?'1':'.5')},onClick:function onClick(){return setShowOption(true);},className:styles.heading_option,children:[/*#__PURE__*/_jsx(CgMoreAlt,{className:styles.icon}),/*#__PURE__*/_jsx(NotificationOption,{isShow:showOption,setIsShow:setShowOption})]})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.content,children:/*#__PURE__*/_jsx(AnimatePresence,{children:notice.loading?/*#__PURE__*/_jsx(\"div\",{className:styles.spinner_wrapper,children:/*#__PURE__*/_jsx(\"img\",{src:Spinner,alt:\"spinner\"})}):notice.data.length>0?notice.data.map(function(msg,index){return/*#__PURE__*/_jsx(motion.div,{initial:{transform:'translate(150%,0)',opacity:0},animate:{transform:'translate(0,0)',opacity:1,transitionDuration:\".6s\",transitionDelay:\"\".concat((index+1)*0.2,\"s\")},children:/*#__PURE__*/_jsx(NoticeCard,{msg:msg})},index);}):/*#__PURE__*/_jsxs(\"div\",{className:styles.no_notice_wrapper,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.icon_wrapper,children:/*#__PURE__*/_jsx(BsFillBellFill,{})}),\"No notifications available!\"]})})}),/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',top:0,width:'100%'},id:\"notice_dropdown\"})]})});};export default NotificationDropdown;","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/src/components/notification/NotificationDropdown.js"],"names":["React","useState","useSelector","CgMoreAlt","BsFillBellFill","DropdownCard","NoticeCard","NotificationOption","useMediaQuery","motion","AnimatePresence","Spinner","styles","NotificationDropdown","isShow","setIsShow","state","notice","showOption","setShowOption","isDesktop","query","heading","title","opacity","heading_option","icon","content","loading","spinner_wrapper","data","length","map","msg","index","transform","transitionDuration","transitionDelay","no_notice_wrapper","icon_wrapper","position","top","width"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport {CgMoreAlt} from 'react-icons/cg'\r\nimport {BsFillBellFill} from 'react-icons/bs'\r\n\r\nimport DropdownCard from '../util/DropdownCard'\r\nimport NoticeCard from './notices/NoticeCard'\r\nimport NotificationOption from './NotificationOption'\r\nimport { useMediaQuery } from 'react-responsive'\r\n\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\n\r\nimport Spinner from '../../assets/Spinner.png'\r\nimport styles from './NotificationDropdown.module.css'\r\n\r\nconst NotificationDropdown = ({isShow, setIsShow}) => {    \r\n    const {notice} = useSelector(state=>state)\r\n    const [showOption, setShowOption] = useState(false)\r\n\r\n    const isDesktop = useMediaQuery({ query: '(min-width: 1224px)' })\r\n\r\n    return (\r\n        <>\r\n            <DropdownCard isShow={isShow} setIsShow={setIsShow} right='0' width={isDesktop ? '30%': '90%'} padding={isDesktop ? '1rem': ' 1rem 5%'}>\r\n                <div className={styles.heading}>\r\n                    <div className={styles.title}>Notification</div>\r\n                    <div style={{opacity: `${showOption ? '1' : '.5'}`}} onClick={()=>setShowOption(true)} className={styles.heading_option}>\r\n                        <CgMoreAlt className={styles.icon}/>\r\n                        <NotificationOption  isShow={showOption} setIsShow={setShowOption}/>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.content}>\r\n                <AnimatePresence >\r\n                    {notice.loading ? \r\n                    <div className={styles.spinner_wrapper}><img src={Spinner} alt='spinner'/></div> \r\n                    : \r\n                    notice.data.length>0 ? notice.data.map((msg,index)=>(\r\n                        <motion.div\r\n                        key={index}\r\n                        initial={{transform: 'translate(150%,0)', opacity: 0}}\r\n                        animate={{transform: 'translate(0,0)', opacity: 1, transitionDuration: `.6s`, transitionDelay:`${(index+1)*0.2}s`}}\r\n                        >\r\n                            <NoticeCard msg={msg} />\r\n                        </motion.div>\r\n                    )) : \r\n                    <div className={styles.no_notice_wrapper}>\r\n                        <div className={styles.icon_wrapper}><BsFillBellFill /></div>\r\n                        No notifications available!\r\n                    </div>                   \r\n                    }\r\n                </AnimatePresence>\r\n                </div>\r\n                <div style={{position: 'absolute', top: 0, width: '100%'}} id='notice_dropdown'></div>\r\n            </DropdownCard>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotificationDropdown\r\n"]},"metadata":{},"sourceType":"module"}