{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\code\\\\Editor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { AiOutlineExpandAlt } from 'react-icons/ai';\nimport { CgMinimizeAlt } from 'react-icons/cg';\nimport { Controlled } from 'react-codemirror2';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/mode/xml/xml';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/css/css';\nimport './Editor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Editor = ({\n  language,\n  value,\n  name,\n  onChange,\n  icon,\n  labelColor\n}) => {\n  _s();\n\n  const [open, setOpen] = useState(true);\n\n  function handleChange(value) {\n    onChange(value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `container ${open ? '' : 'collapsed'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label_wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: labelColor\n          },\n          className: \"icon\",\n          children: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `editor-container`,\n      children: [/*#__PURE__*/_jsxDEV(Controlled, {\n        onBeforeChange: handleChange,\n        value: value,\n        className: \"editor\",\n        options: {\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          theme: 'material',\n          lineNumbers: true,\n          scrollbarStyle: null,\n          autocorrect: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setOpen(!open),\n        className: \"expand-btn\",\n        children: open ? /*#__PURE__*/_jsxDEV(CgMinimizeAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(AiOutlineExpandAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Editor, \"dVkDIfRb5RN4FjtonjBYYwpg89o=\");\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/code/Editor.js"],"names":["React","useState","AiOutlineExpandAlt","CgMinimizeAlt","Controlled","Editor","language","value","name","onChange","icon","labelColor","open","setOpen","handleChange","color","lineWrapping","lint","mode","theme","lineNumbers","scrollbarStyle","autocorrect"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAAQC,kBAAR,QAAiC,gBAAjC;AACA,SAAQC,aAAR,QAA4B,gBAA5B;AAEA,SAAQC,UAAR,QAAyB,mBAAzB;AAEA,OAAO,+BAAP;AACA,OAAO,+BAAP;AACA,OAAO,yBAAP;AACA,OAAO,uCAAP;AACA,OAAO,yBAAP;AAEA,OAAO,cAAP;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA,IAAlB;AAAwBC,EAAAA,QAAxB;AAAkCC,EAAAA,IAAlC;AAAwCC,EAAAA;AAAxC,CAAD,KAAyD;AAAA;;AAEpE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,IAAD,CAAhC;;AAEA,WAASa,YAAT,CAAsBP,KAAtB,EAA6B;AACzBE,IAAAA,QAAQ,CAACF,KAAD,CAAR;AACD;;AAEH,sBACE;AAAK,IAAA,SAAS,EAAG,aAAYK,IAAI,GAAG,EAAH,GAAQ,WAAY,EAArD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAK,UAAA,KAAK,EAAE;AAACG,YAAAA,KAAK,EAAEJ;AAAR,WAAZ;AAAiC,UAAA,SAAS,EAAC,MAA3C;AAAA,oBAAmDD;AAAnD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAAuBF;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAG,kBAAjB;AAAA,8BACE,QAAC,UAAD;AACE,QAAA,cAAc,EAAEM,YADlB;AAEE,QAAA,KAAK,EAAEP,KAFT;AAGE,QAAA,SAAS,EAAC,QAHZ;AAIE,QAAA,OAAO,EAAE;AACPS,UAAAA,YAAY,EAAE,IADP;AAEPC,UAAAA,IAAI,EAAE,IAFC;AAGPC,UAAAA,IAAI,EAAEZ,QAHC;AAIPa,UAAAA,KAAK,EAAE,UAJA;AAKPC,UAAAA,WAAW,EAAE,IALN;AAMPC,UAAAA,cAAc,EAAE,IANT;AAOPC,UAAAA,WAAW,EAAE;AAPN;AAJX;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AAAK,QAAA,OAAO,EAAE,MAAIT,OAAO,CAAC,CAACD,IAAF,CAAzB;AAAkC,QAAA,SAAS,EAAC,YAA5C;AAAA,kBACGA,IAAI,gBAAG,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAAsB,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAD7B;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BH,CArCD;;GAAMP,M;;KAAAA,M;AAuCN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport {AiOutlineExpandAlt} from 'react-icons/ai'\r\nimport {CgMinimizeAlt} from 'react-icons/cg'\r\n\r\nimport {Controlled} from 'react-codemirror2'\r\n\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\n\r\nimport './Editor.css'\r\n\r\nconst Editor = ({language, value, name, onChange, icon, labelColor}) => {\r\n\r\n    const [open, setOpen] = useState(true)\r\n\r\n    function handleChange(value) {\r\n        onChange(value)\r\n      }\r\n\r\n    return (\r\n      <div className={`container ${open ? '' : 'collapsed'}`}>\r\n        <div className='heading'>\r\n          <div className='label_wrapper'>\r\n            <div style={{color: labelColor}} className='icon'>{icon}</div>\r\n            <div className='name'>{name}</div>\r\n          </div>    \r\n        </div>\r\n        <div className={`editor-container`}>\r\n          <Controlled\r\n            onBeforeChange={handleChange}\r\n            value={value}\r\n            className='editor'\r\n            options={{\r\n              lineWrapping: true,\r\n              lint: true,\r\n              mode: language,\r\n              theme: 'material',\r\n              lineNumbers: true,\r\n              scrollbarStyle: null,\r\n              autocorrect: true,\r\n            }}\r\n          />\r\n          <div onClick={()=>setOpen(!open)} className='expand-btn'>\r\n            {open ? <CgMinimizeAlt/> : <AiOutlineExpandAlt/>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Editor\r\n"]},"metadata":{},"sourceType":"module"}