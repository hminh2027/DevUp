{"ast":null,"code":"import { UpdateData } from \"../EditData\";\nconst initialState = {\n  user: {},\n  loading: false\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOADING_POST':\n      return { ...state,\n        loading: action.payload\n      };\n\n    case 'GET_USER':\n      return { ...state,\n        user: action.payload\n      };\n\n    case 'FOLLOW':\n      return { ...state,\n        user: action.payload\n      };\n\n    case 'UNFOLLOW':\n      return { ...state,\n        user: action.payload\n      };\n\n    case 'GET_MORE_POSTS':\n      let newPosts = [...state.posts];\n      action.payload.map(post => newPosts.push(post));\n      return { ...state,\n        posts: newPosts\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default profileReducer;","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/client/src/store/reducers/profileReducer.js"],"names":["UpdateData","initialState","user","loading","profileReducer","state","action","type","payload","newPosts","posts","map","post","push"],"mappings":"AAAA,SAASA,UAAT,QAA2B,aAA3B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAArB;;AAKA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,cAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHF,QAAAA,OAAO,EAAEG,MAAM,CAACE;AAFb,OAAP;;AAIJ,SAAK,UAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,IAAI,EAAEI,MAAM,CAACE;AAFV,OAAP;;AAIJ,SAAK,QAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,IAAI,EAAEI,MAAM,CAACE;AAFV,OAAP;;AAIJ,SAAK,UAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,IAAI,EAAEI,MAAM,CAACE;AAFV,OAAP;;AAIJ,SAAK,gBAAL;AACI,UAAIC,QAAQ,GAAG,CAAC,GAAGJ,KAAK,CAACK,KAAV,CAAf;AACAJ,MAAAA,MAAM,CAACE,OAAP,CAAeG,GAAf,CAAmBC,IAAI,IAAEH,QAAQ,CAACI,IAAT,CAAcD,IAAd,CAAzB;AACA,aAAO,EACH,GAAGP,KADA;AAEHK,QAAAA,KAAK,EAAED;AAFJ,OAAP;;AAKJ;AACI,aAAOJ,KAAP;AA9BR;AAgCH,CAjCD;;AAoCA,eAAeD,cAAf","sourcesContent":["import { UpdateData } from \"../EditData\";\r\n\r\nconst initialState = {\r\n    user: {},\r\n    loading: false\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case 'LOADING_POST':\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        case 'GET_USER':\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            };\r\n        case 'FOLLOW':\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            };\r\n        case 'UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            };\r\n        case 'GET_MORE_POSTS':\r\n            let newPosts = [...state.posts];\r\n            action.payload.map(post=>newPosts.push(post))\r\n            return {\r\n                ...state, \r\n                posts: newPosts\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;\r\n"]},"metadata":{},"sourceType":"module"}