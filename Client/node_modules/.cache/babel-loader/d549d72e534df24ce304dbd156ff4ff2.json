{"ast":null,"code":"import _regeneratorRuntime from\"D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{deleteAPI,patchAPI,postAPI}from\"../../apis/Axios\";import{createNotice,deleteNotice}from'./noticeAction';export var createComment=function createComment(auth,newComment,post,socket){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var data,res,newData,newPost,msg;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;data=_objectSpread(_objectSpread({},newComment),{},{postId:post._id,postUserId:post.user._id});_context.next=4;return postAPI('comment',data,auth.token);case 4:res=_context.sent;// logic\nnewData=_objectSpread(_objectSpread({},res.data.newComment),{},{user:auth.user});newPost=_objectSpread(_objectSpread({},post),{},{comments:[].concat(_toConsumableArray(post.comments),[newData])});dispatch({type:'UPDATE_POST',payload:newPost});dispatch({type:'GET_POST',payload:newPost});socket.emit('commentPost',newPost);msg={id:res.data.newComment._id,receivers:newComment.reply?[newComment.tag]:[post.user._id],text:newComment.reply?'reply your comment':'comment to your post',type:'post',url:newPost._id,tag:'COMMENT',body:''};dispatch(createNotice(auth,msg,socket));_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);dispatch({type:'ALERT',payload:{error:_context.t0.response.data.msg}});case 17:case\"end\":return _context.stop();}}},_callee,null,[[0,14]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var deleteComment=function deleteComment(auth,comment,post,socket){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var deleteArr,newPost;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:try{// delete the main and reply comments\ndeleteArr=[].concat(_toConsumableArray(post.comments.filter(function(cmt){return cmt.reply===comment._id;})),[comment]);// logic\nnewPost=_objectSpread(_objectSpread({},post),{},{comments:post.comments.filter(function(cmt){return!deleteArr.find(function(deletedCmt){return cmt._id===deletedCmt._id;});})});dispatch({type:'UPDATE_POST',payload:newPost});dispatch({type:'GET_POST',payload:newPost});socket.emit('uncommentPost',newPost);deleteArr.forEach(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(item){var msg;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return deleteAPI(\"comment/\".concat(item._id),auth.token);case 2:msg={id:item._id,receivers:comment.reply?[comment.tag._id]:[post.user._id],type:'post',url:post._id};dispatch(deleteNotice(auth,msg));case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3){return _ref3.apply(this,arguments);};}());}catch(err){dispatch({type:'ALERT',payload:{error:err.response.data.msg}});}case 1:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var updateComment=function updateComment(auth,body,post,comment){return function(dispatch){var newComment=_objectSpread(_objectSpread({},comment),{},{body:body});var newComments=post.comments.map(function(cmt){return cmt._id===comment._id?newComment:cmt;});var newPost=_objectSpread(_objectSpread({},post),{},{comments:newComments});dispatch({type:'UPDATE_POST',payload:newPost});dispatch({type:'GET_POST',payload:newPost});try{var res=patchAPI(\"comment/\".concat(comment._id),{body:body},auth.token);}catch(err){dispatch({type:'ALERT',payload:{error:err.response.data.msg}});}};};","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/src/store/actions/commentAction.js"],"names":["deleteAPI","patchAPI","postAPI","createNotice","deleteNotice","createComment","auth","newComment","post","socket","dispatch","data","postId","_id","postUserId","user","token","res","newData","newPost","comments","type","payload","emit","msg","id","receivers","reply","tag","text","url","body","error","response","deleteComment","comment","deleteArr","filter","cmt","find","deletedCmt","forEach","item","err","updateComment","newComments","map"],"mappings":"gsBAAA,OAASA,SAAT,CAAoBC,QAApB,CAA8BC,OAA9B,KAA6C,kBAA7C,CACA,OAAQC,YAAR,CAAsBC,YAAtB,KAAyC,gBAAzC,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,IAAD,CAAOC,UAAP,CAAmBC,IAAnB,CAAyBC,MAAzB,iGAAoC,iBAAOC,QAAP,mKAEnDC,IAFmD,gCAExCJ,UAFwC,MAE5BK,MAAM,CAAEJ,IAAI,CAACK,GAFe,CAEVC,UAAU,CAAEN,IAAI,CAACO,IAAL,CAAUF,GAFZ,yBAGvCX,CAAAA,OAAO,CAAC,SAAD,CAAYS,IAAZ,CAAkBL,IAAI,CAACU,KAAvB,CAHgC,QAGnDC,GAHmD,eAIzD;AACMC,OALmD,gCAKrCD,GAAG,CAACN,IAAJ,CAASJ,UAL4B,MAKhBQ,IAAI,CAAET,IAAI,CAACS,IALK,GAMnDI,OANmD,gCAMrCX,IANqC,MAM/BY,QAAQ,8BAAMZ,IAAI,CAACY,QAAX,GAAqBF,OAArB,EANuB,GAQzDR,QAAQ,CAAC,CAACW,IAAI,CAAE,aAAP,CAAsBC,OAAO,CAAEH,OAA/B,CAAD,CAAR,CACAT,QAAQ,CAAC,CAACW,IAAI,CAAE,UAAP,CAAmBC,OAAO,CAAEH,OAA5B,CAAD,CAAR,CAEAV,MAAM,CAACc,IAAP,CAAY,aAAZ,CAA2BJ,OAA3B,EAEMK,GAbmD,CAa7C,CACRC,EAAE,CAAER,GAAG,CAACN,IAAJ,CAASJ,UAAT,CAAoBM,GADhB,CAERa,SAAS,CAAEnB,UAAU,CAACoB,KAAX,CAAmB,CAACpB,UAAU,CAACqB,GAAZ,CAAnB,CAAsC,CAACpB,IAAI,CAACO,IAAL,CAAUF,GAAX,CAFzC,CAGRgB,IAAI,CAAEtB,UAAU,CAACoB,KAAX,CAAmB,oBAAnB,CAA0C,sBAHxC,CAIRN,IAAI,CAAE,MAJE,CAKRS,GAAG,CAAEX,OAAO,CAACN,GALL,CAMRe,GAAG,CAAE,SANG,CAORG,IAAI,CAAE,EAPE,CAb6C,CAuBzDrB,QAAQ,CAACP,YAAY,CAACG,IAAD,CAAOkB,GAAP,CAAYf,MAAZ,CAAb,CAAR,CAvByD,iFA0BzDC,QAAQ,CAAC,CAACW,IAAI,CAAE,OAAP,CAAgBC,OAAO,CAAE,CAACU,KAAK,CAAE,YAAIC,QAAJ,CAAatB,IAAb,CAAkBa,GAA1B,CAAzB,CAAD,CAAR,CA1ByD,qEAApC,gEAAtB,CA8BP,MAAO,IAAMU,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAC5B,IAAD,CAAO6B,OAAP,CAAgB3B,IAAhB,CAAsBC,MAAtB,kGAAiC,kBAAOC,QAAP,4IAC1D,GAAI,CACA;AACM0B,SAFN,8BAEsB5B,IAAI,CAACY,QAAL,CAAciB,MAAd,CAAqB,SAAAC,GAAG,QAAEA,CAAAA,GAAG,CAACX,KAAJ,GAAYQ,OAAO,CAACtB,GAAtB,EAAxB,CAFtB,GAE0EsB,OAF1E,GAGA;AACMhB,OAJN,gCAKOX,IALP,MAMIY,QAAQ,CAAEZ,IAAI,CAACY,QAAL,CAAciB,MAAd,CAAqB,SAAAC,GAAG,QAAE,CAACF,SAAS,CAACG,IAAV,CAAe,SAAAC,UAAU,QAAEF,CAAAA,GAAG,CAACzB,GAAJ,GAAU2B,UAAU,CAAC3B,GAAvB,EAAzB,CAAH,EAAxB,CANd,GASAH,QAAQ,CAAC,CAACW,IAAI,CAAE,aAAP,CAAsBC,OAAO,CAAEH,OAA/B,CAAD,CAAR,CACAT,QAAQ,CAAC,CAACW,IAAI,CAAE,UAAP,CAAmBC,OAAO,CAAEH,OAA5B,CAAD,CAAR,CAEAV,MAAM,CAACc,IAAP,CAAY,eAAZ,CAA6BJ,OAA7B,EAEAiB,SAAS,CAACK,OAAV,2FAAkB,kBAAMC,IAAN,qJACR1C,CAAAA,SAAS,mBAAY0C,IAAI,CAAC7B,GAAjB,EAAwBP,IAAI,CAACU,KAA7B,CADD,QAGRQ,GAHQ,CAGF,CACRC,EAAE,CAAEiB,IAAI,CAAC7B,GADD,CAERa,SAAS,CAAES,OAAO,CAACR,KAAR,CAAgB,CAACQ,OAAO,CAACP,GAAR,CAAYf,GAAb,CAAhB,CAAoC,CAACL,IAAI,CAACO,IAAL,CAAUF,GAAX,CAFvC,CAGRQ,IAAI,CAAE,MAHE,CAIRS,GAAG,CAAEtB,IAAI,CAACK,GAJF,CAHE,CASdH,QAAQ,CAACN,YAAY,CAACE,IAAD,CAAOkB,GAAP,CAAb,CAAR,CATc,wDAAlB,kEAaH,CAAC,MAAMmB,GAAN,CAAW,CACTjC,QAAQ,CAAC,CAACW,IAAI,CAAE,OAAP,CAAgBC,OAAO,CAAE,CAACU,KAAK,CAAEW,GAAG,CAACV,QAAJ,CAAatB,IAAb,CAAkBa,GAA1B,CAAzB,CAAD,CAAR,CACH,CA9ByD,wDAAjC,kEAAtB,CAiCP,MAAO,IAAMoB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACtC,IAAD,CAAOyB,IAAP,CAAavB,IAAb,CAAmB2B,OAAnB,QAA+B,UAACzB,QAAD,CAAc,CACtE,GAAMH,CAAAA,UAAU,gCAAO4B,OAAP,MAAgBJ,IAAI,CAAEA,IAAtB,EAAhB,CACA,GAAMc,CAAAA,WAAW,CAAGrC,IAAI,CAACY,QAAL,CAAc0B,GAAd,CAAkB,SAAAR,GAAG,QAAEA,CAAAA,GAAG,CAACzB,GAAJ,GAAUsB,OAAO,CAACtB,GAAlB,CAAsBN,UAAtB,CAAiC+B,GAAnC,EAArB,CAApB,CAEA,GAAMnB,CAAAA,OAAO,gCAAOX,IAAP,MAAaY,QAAQ,CAAEyB,WAAvB,EAAb,CAEAnC,QAAQ,CAAC,CAACW,IAAI,CAAE,aAAP,CAAsBC,OAAO,CAAEH,OAA/B,CAAD,CAAR,CACAT,QAAQ,CAAC,CAACW,IAAI,CAAE,UAAP,CAAmBC,OAAO,CAAEH,OAA5B,CAAD,CAAR,CAEA,GAAI,CACA,GAAMF,CAAAA,GAAG,CAAGhB,QAAQ,mBAAYkC,OAAO,CAACtB,GAApB,EAA2B,CAACkB,IAAI,CAAJA,IAAD,CAA3B,CAAmCzB,IAAI,CAACU,KAAxC,CAApB,CAEH,CAAC,MAAM2B,GAAN,CAAW,CACTjC,QAAQ,CAAC,CAACW,IAAI,CAAE,OAAP,CAAgBC,OAAO,CAAE,CAACU,KAAK,CAAEW,GAAG,CAACV,QAAJ,CAAatB,IAAb,CAAkBa,GAA1B,CAAzB,CAAD,CAAR,CACH,CACJ,CAf4B,EAAtB","sourcesContent":["import { deleteAPI, patchAPI, postAPI } from \"../../apis/Axios\"\r\nimport {createNotice, deleteNotice} from './noticeAction'\r\n\r\nexport const createComment = (auth, newComment, post, socket) => async (dispatch) => {\r\n    try {\r\n        const data = {...newComment, postId: post._id, postUserId: post.user._id}\r\n        const res = await postAPI('comment', data, auth.token)\r\n        // logic\r\n        const newData = {...res.data.newComment, user: auth.user}\r\n        const newPost = {...post, comments: [...post.comments, newData]}\r\n\r\n        dispatch({type: 'UPDATE_POST', payload: newPost})\r\n        dispatch({type: 'GET_POST', payload: newPost})\r\n\r\n        socket.emit('commentPost', newPost)\r\n\r\n        const msg = {\r\n            id: res.data.newComment._id,\r\n            receivers: newComment.reply ? [newComment.tag] : [post.user._id],\r\n            text: newComment.reply ? 'reply your comment' : 'comment to your post',\r\n            type: 'post',\r\n            url: newPost._id,\r\n            tag: 'COMMENT',\r\n            body: ''\r\n        }\r\n\r\n        dispatch(createNotice(auth, msg, socket))\r\n\r\n    } catch(err) {\r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}})\r\n    }\r\n}\r\n\r\nexport const deleteComment = (auth, comment, post, socket) => async (dispatch) => {\r\n    try {\r\n        // delete the main and reply comments\r\n        const deleteArr = [...post.comments.filter(cmt=>cmt.reply===comment._id), comment]\r\n        // logic\r\n        const newPost = {\r\n            ...post, \r\n            comments: post.comments.filter(cmt=>!deleteArr.find(deletedCmt=>cmt._id===deletedCmt._id))\r\n        }\r\n\r\n        dispatch({type: 'UPDATE_POST', payload: newPost})\r\n        dispatch({type: 'GET_POST', payload: newPost})\r\n\r\n        socket.emit('uncommentPost', newPost)\r\n\r\n        deleteArr.forEach(async item=>{\r\n            await deleteAPI(`comment/${item._id}`, auth.token)\r\n\r\n            const msg = {\r\n                id: item._id,\r\n                receivers: comment.reply ? [comment.tag._id] : [post.user._id],\r\n                type: 'post',\r\n                url: post._id\r\n            }\r\n            dispatch(deleteNotice(auth, msg))\r\n        })\r\n\r\n\r\n    } catch(err) {\r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}})\r\n    }\r\n}\r\n\r\nexport const updateComment = (auth, body, post, comment) => (dispatch) => {\r\n    const newComment = {...comment, body: body}\r\n    const newComments = post.comments.map(cmt=>cmt._id===comment._id?newComment:cmt)\r\n\r\n    const newPost = {...post, comments: newComments}\r\n    \r\n    dispatch({type: 'UPDATE_POST', payload: newPost})\r\n    dispatch({type: 'GET_POST', payload: newPost})\r\n\r\n    try {\r\n        const res = patchAPI(`comment/${comment._id}`, {body}, auth.token)\r\n\r\n    } catch(err) {\r\n        dispatch({type: 'ALERT', payload: {error: err.response.data.msg}})\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}