{"ast":null,"code":"import React from'react';import{useDispatch,useSelector}from'react-redux';import{RiDeleteBinLine}from'react-icons/ri';import{GoCheck}from'react-icons/go';import DropdownCard from'../../util/DropdownCard';import{deleteNotice,readNotice,unreadNotice}from'../../../store/actions/noticeAction';import styles from'./NoticeOption.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NoticeOption=function NoticeOption(_ref){var setIsShow=_ref.setIsShow,isShow=_ref.isShow,msg=_ref.msg,setExiting=_ref.setExiting,top=_ref.top;var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state;}),auth=_useSelector.auth;var markHandler=function markHandler(){msg.isRead.includes(auth.user._id)?dispatch(unreadNotice(auth,msg)):dispatch(readNotice(auth,msg));};var deleteHandler=function deleteHandler(){setExiting(true);dispatch(deleteNotice(auth,msg._id));};return/*#__PURE__*/_jsxs(DropdownCard,{setIsShow:setIsShow,isShow:isShow,right:\"25%\",top:top-150,children:[/*#__PURE__*/_jsxs(\"div\",{onClick:markHandler,className:styles.option_item,children:[/*#__PURE__*/_jsx(GoCheck,{className:styles.icon}),/*#__PURE__*/_jsx(\"div\",{className:styles.text,children:msg.isRead.includes(auth.user._id)?\"Mark unread\":\"Mark read\"})]}),/*#__PURE__*/_jsxs(\"div\",{onClick:deleteHandler,className:styles.option_item,children:[/*#__PURE__*/_jsx(RiDeleteBinLine,{className:styles.icon}),/*#__PURE__*/_jsx(\"div\",{className:styles.text,children:\"Delete\"})]})]});};export default NoticeOption;","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/src/components/notification/notices/NoticeOption.js"],"names":["React","useDispatch","useSelector","RiDeleteBinLine","GoCheck","DropdownCard","deleteNotice","readNotice","unreadNotice","styles","NoticeOption","setIsShow","isShow","msg","setExiting","top","dispatch","state","auth","markHandler","isRead","includes","user","_id","deleteHandler","option_item","icon","text"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,OAAQC,eAAR,KAA8B,gBAA9B,CACA,OAAQC,OAAR,KAAsB,gBAAtB,CAEA,MAAOC,CAAAA,YAAP,KAAyB,yBAAzB,CACA,OAASC,YAAT,CAAuBC,UAAvB,CAAmCC,YAAnC,KAAuD,qCAAvD,CAEA,MAAOC,CAAAA,MAAP,KAAmB,2BAAnB,C,wFAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAA+C,IAA7CC,CAAAA,SAA6C,MAA7CA,SAA6C,CAAlCC,MAAkC,MAAlCA,MAAkC,CAA1BC,GAA0B,MAA1BA,GAA0B,CAArBC,UAAqB,MAArBA,UAAqB,CAATC,GAAS,MAATA,GAAS,CAChE,GAAMC,CAAAA,QAAQ,CAAGf,WAAW,EAA5B,CACA,iBAAeC,WAAW,CAAC,SAAAe,KAAK,QAAEA,CAAAA,KAAF,EAAN,CAA1B,CAAOC,IAAP,cAAOA,IAAP,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtBN,GAAG,CAACO,MAAJ,CAAWC,QAAX,CAAoBH,IAAI,CAACI,IAAL,CAAUC,GAA9B,EAAqCP,QAAQ,CAACR,YAAY,CAACU,IAAD,CAAOL,GAAP,CAAb,CAA7C,CAAyEG,QAAQ,CAACT,UAAU,CAACW,IAAD,CAAOL,GAAP,CAAX,CAAjF,CACH,CAFD,CAIA,GAAMW,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxBV,UAAU,CAAC,IAAD,CAAV,CACAE,QAAQ,CAACV,YAAY,CAACY,IAAD,CAAOL,GAAG,CAACU,GAAX,CAAb,CAAR,CACH,CAHD,CAKA,mBACI,MAAC,YAAD,EAAc,SAAS,CAAEZ,SAAzB,CAAoC,MAAM,CAAEC,MAA5C,CAAoD,KAAK,CAAC,KAA1D,CAAgE,GAAG,CAAEG,GAAG,CAAC,GAAzE,wBACI,aAAK,OAAO,CAAEI,WAAd,CAA2B,SAAS,CAAEV,MAAM,CAACgB,WAA7C,wBACI,KAAC,OAAD,EAAS,SAAS,CAAEhB,MAAM,CAACiB,IAA3B,EADJ,cAEI,YAAK,SAAS,CAAEjB,MAAM,CAACkB,IAAvB,UAA8Bd,GAAG,CAACO,MAAJ,CAAWC,QAAX,CAAoBH,IAAI,CAACI,IAAL,CAAUC,GAA9B,2BAA9B,EAFJ,GADJ,cAKI,aAAK,OAAO,CAAEC,aAAd,CAA6B,SAAS,CAAEf,MAAM,CAACgB,WAA/C,wBACI,KAAC,eAAD,EAAiB,SAAS,CAAEhB,MAAM,CAACiB,IAAnC,EADJ,cAEI,YAAK,SAAS,CAAEjB,MAAM,CAACkB,IAAvB,oBAFJ,GALJ,GADJ,CAYH,CAzBD,CA2BA,cAAejB,CAAAA,YAAf","sourcesContent":["import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport {RiDeleteBinLine} from 'react-icons/ri'\r\nimport {GoCheck} from 'react-icons/go'\r\n\r\nimport DropdownCard from '../../util/DropdownCard'\r\nimport { deleteNotice, readNotice, unreadNotice } from '../../../store/actions/noticeAction'\r\n\r\nimport styles from './NoticeOption.module.css'\r\n\r\nconst NoticeOption = ({setIsShow, isShow, msg, setExiting, top}) => {\r\n    const dispatch = useDispatch()\r\n    const {auth} = useSelector(state=>state)\r\n\r\n    const markHandler = () => {\r\n        msg.isRead.includes(auth.user._id) ? dispatch(unreadNotice(auth, msg)) : dispatch(readNotice(auth, msg))\r\n    }\r\n\r\n    const deleteHandler = () => {\r\n        setExiting(true)\r\n        dispatch(deleteNotice(auth, msg._id))\r\n    }\r\n    \r\n    return (\r\n        <DropdownCard setIsShow={setIsShow} isShow={isShow} right='25%' top={top-150} >\r\n            <div onClick={markHandler} className={styles.option_item}  >\r\n                <GoCheck className={styles.icon}/>\r\n                <div className={styles.text}>{msg.isRead.includes(auth.user._id) ? `Mark unread` : `Mark read`}</div>\r\n            </div>      \r\n            <div onClick={deleteHandler} className={styles.option_item} >\r\n                <RiDeleteBinLine className={styles.icon}/>\r\n                <div className={styles.text}>Delete</div>\r\n            </div>\r\n        </DropdownCard>\r\n    )\r\n}\r\n\r\nexport default NoticeOption\r\n"]},"metadata":{},"sourceType":"module"}