{"ast":null,"code":"import _slicedToArray from\"D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{Link}from'react-router-dom';import{CgMoreAlt}from'react-icons/cg';import ReactBar from'./ReactBar';import{updatePost}from'../../store/actions/postAction';import PostOption from'./PostOption';import PostCounter from'./PostCounter';import Comment from'./comment/Comment';import PostContent from'./PostContent';import InputComment from'./comment/InputComment';import Card from'../../components/util/Card';import TextareaAutosize from'react-textarea-autosize';import moment from'moment';import styles from'./PostCard.module.css';import Avatar from'../util/Avatar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PostCard=function PostCard(_ref){var post=_ref.post,isShared=_ref.isShared;var dispatch=useDispatch();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isComment=_useState2[0],setIsComment=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isEdit=_useState4[0],setIsEdit=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showOption=_useState6[0],setShowOption=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),body=_useState8[0],setBody=_useState8[1];var _useSelector=useSelector(function(state){return state;}),auth=_useSelector.auth;useEffect(function(){setBody(post.body);},[post.body,isEdit]);var bodyChangeHandler=function bodyChangeHandler(e){setBody(e.target.value);};var submitHandler=function submitHandler(e){e.preventDefault();dispatch(updatePost(body,auth,post._id));setIsEdit(false);};return/*#__PURE__*/_jsxs(Card,{width:\"100%\",bg:\"white\",mg:\"0 0 4rem 0\",children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.content,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.heading,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.avatar,children:/*#__PURE__*/_jsx(Avatar,{src:post.user.avatar,id:post.user._id,diameter:\"3rem\"})}),/*#__PURE__*/_jsx(\"div\",{className:styles.name,children:/*#__PURE__*/_jsx(Link,{to:\"/profile/\".concat(post.user._id),children:post.user.username})}),/*#__PURE__*/_jsx(\"div\",{className:styles.time,children:moment(post.createdAt).fromNow()})]}),isEdit?/*#__PURE__*/_jsx(TextareaAutosize,{maxRows:8,spellCheck:false,type:\"text\",name:\"body\",className:styles.textarea,onChange:bodyChangeHandler,value:body}):/*#__PURE__*/_jsx(\"div\",{className:styles.text,children:post.body}),isEdit&&/*#__PURE__*/_jsxs(\"div\",{className:styles.btn_group,children:[/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){return setIsEdit(false);},className:\"\".concat(styles.cancel_btn,\" \").concat(styles.button),children:\"Cancel\"}),/*#__PURE__*/_jsx(\"div\",{onClick:submitHandler,className:\"\".concat(styles.submit_btn,\" \").concat(styles.button),children:\"Submit\"})]}),post.shareContent?/*#__PURE__*/_jsx(PostCard,{post:post.shareContent,isShared:true}):/*#__PURE__*/_jsx(PostContent,{post:post})]}),!isShared&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{style:{opacity:\"\".concat(showOption?'1':'.5')},onClick:function onClick(){return setShowOption(!showOption);},className:styles.option_btn,children:[/*#__PURE__*/_jsx(CgMoreAlt,{}),/*#__PURE__*/_jsx(PostOption,{setIsShow:setShowOption,isShow:showOption,post:post,setIsEdit:setIsEdit})]}),/*#__PURE__*/_jsx(PostCounter,{post:post}),/*#__PURE__*/_jsx(ReactBar,{isComment:isComment,setIsComment:setIsComment,post:post}),/*#__PURE__*/_jsxs(\"div\",{className:styles.bottom_wrapper,children:[/*#__PURE__*/_jsx(Comment,{post:post}),isComment&&/*#__PURE__*/_jsx(InputComment,{post:post})]})]})]});};export default PostCard;","map":{"version":3,"sources":["D:/Project Web/Project Web/PROJECT 12 (Only MERN)/Client/src/components/post/PostCard.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Link","CgMoreAlt","ReactBar","updatePost","PostOption","PostCounter","Comment","PostContent","InputComment","Card","TextareaAutosize","moment","styles","Avatar","PostCard","post","isShared","dispatch","isComment","setIsComment","isEdit","setIsEdit","showOption","setShowOption","body","setBody","state","auth","bodyChangeHandler","e","target","value","submitHandler","preventDefault","_id","content","heading","avatar","user","name","username","time","createdAt","fromNow","textarea","text","btn_group","cancel_btn","button","submit_btn","shareContent","opacity","option_btn","bottom_wrapper"],"mappings":"+KAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAAQC,IAAR,KAAmB,kBAAnB,CAEA,OAAQC,SAAR,KAAwB,gBAAxB,CAEA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,UAAT,KAA2B,gCAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,wBAAzB,CACA,MAAOC,CAAAA,IAAP,KAAiB,4BAAjB,CAEA,MAAOC,CAAAA,gBAAP,KAA6B,yBAA7B,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,uBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,gBAAnB,C,wFAIA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAsB,IAApBC,CAAAA,IAAoB,MAApBA,IAAoB,CAAdC,QAAc,MAAdA,QAAc,CACnC,GAAMC,CAAAA,QAAQ,CAAGnB,WAAW,EAA5B,CAEA,cAAkCD,QAAQ,CAAC,KAAD,CAA1C,wCAAOqB,SAAP,eAAkBC,YAAlB,eACA,eAA2BtB,QAAQ,CAAC,KAAD,CAAnC,yCAAOuB,MAAP,eAAcC,SAAd,eACA,eAAoCxB,QAAQ,CAAC,KAAD,CAA5C,yCAAOyB,UAAP,eAAmBC,aAAnB,eACA,eAAuB1B,QAAQ,EAA/B,yCAAO2B,IAAP,eAAYC,OAAZ,eAEA,iBAAe1B,WAAW,CAAC,SAAA2B,KAAK,QAAEA,CAAAA,KAAF,EAAN,CAA1B,CAAOC,IAAP,cAAOA,IAAP,CAEA/B,SAAS,CAAC,UAAM,CACZ6B,OAAO,CAACV,IAAI,CAACS,IAAN,CAAP,CACH,CAFQ,CAEN,CAACT,IAAI,CAACS,IAAN,CAAYJ,MAAZ,CAFM,CAAT,CAIA,GAAMQ,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAC,CAAC,CAAI,CAC3BJ,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP,CACH,CAFD,CAIA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAH,CAAC,CAAI,CACvBA,CAAC,CAACI,cAAF,GACAhB,QAAQ,CAACd,UAAU,CAACqB,IAAD,CAAOG,IAAP,CAAaZ,IAAI,CAACmB,GAAlB,CAAX,CAAR,CACAb,SAAS,CAAC,KAAD,CAAT,CACH,CAJD,CAMA,mBACI,MAAC,IAAD,EAAM,KAAK,CAAC,MAAZ,CAAmB,EAAE,CAAC,OAAtB,CAA8B,EAAE,CAAC,YAAjC,wBACI,aAAK,SAAS,CAAET,MAAM,CAACuB,OAAvB,wBACI,aAAK,SAAS,CAAEvB,MAAM,CAACwB,OAAvB,wBACI,YAAK,SAAS,CAAExB,MAAM,CAACyB,MAAvB,uBACI,KAAC,MAAD,EAAQ,GAAG,CAAEtB,IAAI,CAACuB,IAAL,CAAUD,MAAvB,CAA+B,EAAE,CAAEtB,IAAI,CAACuB,IAAL,CAAUJ,GAA7C,CAAkD,QAAQ,CAAC,MAA3D,EADJ,EADJ,cAII,YAAK,SAAS,CAAEtB,MAAM,CAAC2B,IAAvB,uBACI,KAAC,IAAD,EAAM,EAAE,oBAAcxB,IAAI,CAACuB,IAAL,CAAUJ,GAAxB,CAAR,UACKnB,IAAI,CAACuB,IAAL,CAAUE,QADf,EADJ,EAJJ,cASI,YAAK,SAAS,CAAE5B,MAAM,CAAC6B,IAAvB,UAA8B9B,MAAM,CAACI,IAAI,CAAC2B,SAAN,CAAN,CAAuBC,OAAvB,EAA9B,EATJ,GADJ,CAaKvB,MAAM,cACP,KAAC,gBAAD,EAAkB,OAAO,CAAE,CAA3B,CAA8B,UAAU,CAAE,KAA1C,CAAiD,IAAI,CAAC,MAAtD,CAA6D,IAAI,CAAC,MAAlE,CAAyE,SAAS,CAAER,MAAM,CAACgC,QAA3F,CAAqG,QAAQ,CAAEhB,iBAA/G,CAAkI,KAAK,CAAEJ,IAAzI,EADO,cAGP,YAAK,SAAS,CAAEZ,MAAM,CAACiC,IAAvB,UAA8B9B,IAAI,CAACS,IAAnC,EAhBJ,CAmBKJ,MAAM,eACP,aAAK,SAAS,CAAER,MAAM,CAACkC,SAAvB,wBACI,YAAK,OAAO,CAAE,yBAAIzB,CAAAA,SAAS,CAAC,KAAD,CAAb,EAAd,CAAoC,SAAS,WAAKT,MAAM,CAACmC,UAAZ,aAA0BnC,MAAM,CAACoC,MAAjC,CAA7C,oBADJ,cAEI,YAAK,OAAO,CAAEhB,aAAd,CAA6B,SAAS,WAAKpB,MAAM,CAACqC,UAAZ,aAA0BrC,MAAM,CAACoC,MAAjC,CAAtC,oBAFJ,GApBJ,CA0BKjC,IAAI,CAACmC,YAAL,cAAoB,KAAC,QAAD,EAAU,IAAI,CAAEnC,IAAI,CAACmC,YAArB,CAAmC,QAAQ,CAAE,IAA7C,EAApB,cAA4E,KAAC,WAAD,EAAa,IAAI,CAAEnC,IAAnB,EA1BjF,GADJ,CA6BK,CAACC,QAAD,eACA,oCACG,aAAK,KAAK,CAAE,CAACmC,OAAO,WAAK7B,UAAU,CAAG,GAAH,CAAS,IAAxB,CAAR,CAAZ,CAAqD,OAAO,CAAE,yBAAIC,CAAAA,aAAa,CAAC,CAACD,UAAF,CAAjB,EAA9D,CAA8F,SAAS,CAAEV,MAAM,CAACwC,UAAhH,wBACI,KAAC,SAAD,IADJ,cAEI,KAAC,UAAD,EAAY,SAAS,CAAE7B,aAAvB,CAAsC,MAAM,CAAED,UAA9C,CAA0D,IAAI,CAAEP,IAAhE,CAAsE,SAAS,CAAEM,SAAjF,EAFJ,GADH,cAKG,KAAC,WAAD,EAAa,IAAI,CAAEN,IAAnB,EALH,cAMG,KAAC,QAAD,EAAU,SAAS,CAAEG,SAArB,CAAgC,YAAY,CAAEC,YAA9C,CAA4D,IAAI,CAAEJ,IAAlE,EANH,cAOG,aAAK,SAAS,CAAEH,MAAM,CAACyC,cAAvB,wBACI,KAAC,OAAD,EAAS,IAAI,CAAEtC,IAAf,EADJ,CAEKG,SAAS,eAAI,KAAC,YAAD,EAAc,IAAI,CAAEH,IAApB,EAFlB,GAPH,GA9BL,GADJ,CA6CH,CArED,CAuEA,cAAeD,CAAAA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {CgMoreAlt} from 'react-icons/cg'\r\n\r\nimport ReactBar from './ReactBar'\r\nimport { updatePost } from '../../store/actions/postAction'\r\nimport PostOption from './PostOption'\r\nimport PostCounter from './PostCounter'\r\nimport Comment from './comment/Comment'\r\nimport PostContent from './PostContent'\r\nimport InputComment from './comment/InputComment'\r\nimport Card from '../../components/util/Card'\r\n\r\nimport TextareaAutosize from 'react-textarea-autosize'\r\nimport moment from 'moment'\r\nimport styles from './PostCard.module.css'\r\nimport Avatar from '../util/Avatar'\r\n\r\n\r\n\r\nconst PostCard = ({post, isShared}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [isComment, setIsComment] = useState(false)\r\n    const [isEdit,setIsEdit] = useState(false)\r\n    const [showOption, setShowOption] = useState(false)\r\n    const [body,setBody] = useState()\r\n\r\n    const {auth} = useSelector(state=>state)\r\n\r\n    useEffect(() => {\r\n        setBody(post.body)\r\n    }, [post.body, isEdit])\r\n\r\n    const bodyChangeHandler = e => {\r\n        setBody(e.target.value)\r\n    }\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n        dispatch(updatePost(body, auth, post._id))\r\n        setIsEdit(false)\r\n    }\r\n\r\n    return (\r\n        <Card width='100%' bg='white' mg='0 0 4rem 0'>\r\n            <div className={styles.content}>\r\n                <div className={styles.heading}>\r\n                    <div className={styles.avatar}>\r\n                        <Avatar src={post.user.avatar} id={post.user._id} diameter='3rem' />\r\n                    </div>\r\n                    <div className={styles.name}>\r\n                        <Link to={`/profile/${post.user._id}`}>\r\n                            {post.user.username}\r\n                        </Link>\r\n                    </div>\r\n                    <div className={styles.time}>{moment(post.createdAt).fromNow()}</div>\r\n                </div>\r\n\r\n                {isEdit ?\r\n                <TextareaAutosize maxRows={8} spellCheck={false} type=\"text\" name=\"body\" className={styles.textarea} onChange={bodyChangeHandler} value={body} />\r\n                : \r\n                <div className={styles.text}>{post.body}</div>\r\n                }\r\n\r\n                {isEdit &&\r\n                <div className={styles.btn_group}>\r\n                    <div onClick={()=>setIsEdit(false)} className={`${styles.cancel_btn} ${styles.button}`}>Cancel</div>\r\n                    <div onClick={submitHandler} className={`${styles.submit_btn} ${styles.button}`}>Submit</div> \r\n                </div>\r\n                }\r\n\r\n                {post.shareContent ? <PostCard post={post.shareContent} isShared={true} /> : <PostContent post={post} />}\r\n            </div>\r\n            {!isShared && \r\n            (<div>\r\n                <div style={{opacity: `${showOption ? '1' : '.5'}`}} onClick={()=>setShowOption(!showOption)} className={styles.option_btn}>\r\n                    <CgMoreAlt />\r\n                    <PostOption setIsShow={setShowOption} isShow={showOption} post={post} setIsEdit={setIsEdit} />\r\n                </div>\r\n                <PostCounter post={post} />\r\n                <ReactBar isComment={isComment} setIsComment={setIsComment} post={post} /> \r\n                <div className={styles.bottom_wrapper}>\r\n                    <Comment post={post} />\r\n                    {isComment && <InputComment post={post} />}\r\n                </div> \r\n            </div>)}\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PostCard\r\n"]},"metadata":{},"sourceType":"module"}