{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\header\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './Search.module.css';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { getAPI } from '../../apis/Axios';\nimport { CSSTransition } from \"react-transition-group\";\nimport UserCard from './UserCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [search, setSearch] = useState('');\n  const [users, setUsers] = useState([]);\n  const auth = useSelector(state => state.auth);\n\n  const submitHandler = async () => {\n    if (!search) return;\n\n    if (auth.token && search) {\n      try {\n        const res = await getAPI(`user/search?username=${search}`, auth.token);\n        setUsers(res.data.user);\n      } catch (err) {\n        dispatch({\n          type: 'ALERT',\n          payload: {\n            error: err.response.data.msg\n          }\n        });\n      }\n    }\n  };\n\n  const inputHandler = e => setSearch(e.target.value);\n\n  const resetHandler = () => {\n    setUsers([]);\n  };\n\n  const onChangeHandler = e => {\n    submitHandler();\n    inputHandler(e);\n  };\n\n  if (!search) resetHandler();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.search_bar,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.input_wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: styles.icon_wrapper,\n        htmlFor: \"seacrh\",\n        children: /*#__PURE__*/_jsxDEV(AiOutlineSearch, {\n          className: styles.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 73\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onChangeHandler,\n        autoComplete: \"off\",\n        value: search,\n        className: styles.input,\n        type: \"text\",\n        name: \"seacrh\",\n        id: \"seacrh\",\n        placeholder: \"Search for people, jobs, companies and more...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n      in: search,\n      timeout: 400,\n      classNames: {\n        enter: styles.enter,\n        enterActive: styles.enter_active,\n        exit: styles.exit,\n        exitActive: styles.exit_active\n      },\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.results,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.list_items,\n          children: users.map(user => /*#__PURE__*/_jsxDEV(UserCard, {\n            username: user.username\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"6/UNiwppgvDi8JeA6lZYbAYD4gQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["D:/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/header/Search.js"],"names":["React","useEffect","useState","useDispatch","useSelector","styles","AiOutlineSearch","getAPI","CSSTransition","UserCard","Search","dispatch","search","setSearch","users","setUsers","auth","state","submitHandler","token","res","data","user","err","type","payload","error","response","msg","inputHandler","e","target","value","resetHandler","onChangeHandler","search_bar","input_wrapper","icon_wrapper","icon","input","enter","enterActive","enter_active","exit","exitActive","exit_active","results","list_items","map","username","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport styles from './Search.module.css';\r\nimport {AiOutlineSearch} from 'react-icons/ai';\r\nimport { getAPI } from '../../apis/Axios';\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport UserCard from './UserCard';\r\n\r\nconst Search = () => {\r\n    const dispatch = useDispatch();\r\n    const [search,setSearch] = useState('');\r\n    const [users,setUsers] = useState([]);\r\n    const auth = useSelector(state=>state.auth);\r\n\r\n    const submitHandler = async () => {\r\n        if(!search) return;\r\n        if(auth.token && search){\r\n            try {\r\n                const res = await getAPI(`user/search?username=${search}`, auth.token);\r\n                setUsers(res.data.user);\r\n\r\n            } catch (err) {\r\n                dispatch({\r\n                type: 'ALERT', payload: {error: err.response.data.msg}\r\n            })\r\n            }   \r\n        }\r\n    }\r\n\r\n    const inputHandler = e => setSearch(e.target.value);\r\n\r\n    const resetHandler = () => {\r\n        setUsers([]);\r\n    }\r\n\r\n    const onChangeHandler = e => {\r\n        submitHandler();\r\n        inputHandler(e);\r\n    }\r\n\r\n    if(!search) resetHandler();\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.search_bar}>\r\n            <div className={styles.input_wrapper}>\r\n                <label className={styles.icon_wrapper} htmlFor=\"seacrh\"><AiOutlineSearch className={styles.icon}/></label>\r\n                <input onChange={onChangeHandler} autoComplete=\"off\" value={search}  className={styles.input} type=\"text\" name=\"seacrh\" id=\"seacrh\" placeholder=\"Search for people, jobs, companies and more...\"/>\r\n            </div>\r\n            <CSSTransition\r\n            in={search}\r\n            timeout={400}\r\n            classNames={{\r\n                enter: styles.enter,\r\n                enterActive: styles.enter_active,\r\n                exit: styles.exit,\r\n                exitActive: styles.exit_active,\r\n            }}\r\n            unmountOnExit\r\n            >\r\n                <div className={styles.results} >\r\n                    <div className={styles.list_items}>\r\n                        {  users.map(user => \r\n                            <UserCard key={user.id} username={user.username} />\r\n                        )}\r\n                    </div>\r\n                </div> \r\n            </CSSTransition>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n"]},"metadata":{},"sourceType":"module"}