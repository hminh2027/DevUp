{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Web\\\\PROJECT 12 (Only MERN)\\\\Client\\\\client\\\\src\\\\components\\\\post\\\\comment\\\\CommentWrapper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CommentCard from './CommentCard';\nimport InputComment from './InputComment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentWrapper = ({\n  post,\n  comment,\n  reply\n}) => {\n  _s();\n\n  const [onReply, setOnReply] = useState(false);\n  useEffect(() => {\n    console.log(reply);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CommentWrapper, \"6kJ7L6elMeL4m+GVn+mc5l6KWIQ=\");\n\n_c = CommentWrapper;\nexport default CommentWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentWrapper\");","map":{"version":3,"sources":["D:/Project Web/PROJECT 12 (Only MERN)/Client/client/src/components/post/comment/CommentWrapper.js"],"names":["React","useEffect","useState","CommentCard","InputComment","CommentWrapper","post","comment","reply","onReply","setOnReply","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA;AAAhB,CAAD,KAA4B;AAAA;;AAC/C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVU,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACH,GAFQ,CAAT;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAdD;;GAAMH,c;;KAAAA,c;AAgBN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport CommentCard from './CommentCard'\r\nimport InputComment from './InputComment'\r\n\r\nconst CommentWrapper = ({post, comment, reply}) => {\r\n    const [onReply, setOnReply] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        console.log(reply);\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            {/* <CommentCard setOnReply={setOnReply} post={post} comment={comment} /> */}\r\n            {/* <CommentCard post={post} comment={reply} /> */}\r\n            {/* {onReply && <InputComment post={post} onReply={onReply} setOnReply={setOnReply} />} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentWrapper\r\n"]},"metadata":{},"sourceType":"module"}